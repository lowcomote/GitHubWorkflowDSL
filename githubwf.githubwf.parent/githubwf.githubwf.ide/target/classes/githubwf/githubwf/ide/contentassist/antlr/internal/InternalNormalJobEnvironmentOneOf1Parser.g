/*
 * generated by Xtext 2.29.0
 */
parser grammar InternalNormalJobEnvironmentOneOf1Parser;

options {
	tokenVocab=InternalNormalJobEnvironmentOneOf1Lexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package githubwf.githubwf.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import githubwf.githubwf.services.NormalJobEnvironmentOneOf1GrammarAccess;

}
@members {
	private NormalJobEnvironmentOneOf1GrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Url", "'\"url\"'");
		tokenNameToValue.put("Name", "'\"name\"'");
		tokenNameToValue.put("Environment", "'\"environment\"'");
	}

	public void setGrammarAccess(NormalJobEnvironmentOneOf1GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleNormalJobEnvironmentOneOf1
entryRuleNormalJobEnvironmentOneOf1
:
{ before(grammarAccess.getNormalJobEnvironmentOneOf1Rule()); }
	 ruleNormalJobEnvironmentOneOf1
{ after(grammarAccess.getNormalJobEnvironmentOneOf1Rule()); } 
	 EOF 
;

// Rule NormalJobEnvironmentOneOf1
ruleNormalJobEnvironmentOneOf1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNormalJobEnvironmentOneOf1Access().getGroup()); }
		(rule__NormalJobEnvironmentOneOf1__Group__0)
		{ after(grammarAccess.getNormalJobEnvironmentOneOf1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentPropertiesAbstract
entryRuleEnvironmentPropertiesAbstract
:
{ before(grammarAccess.getEnvironmentPropertiesAbstractRule()); }
	 ruleEnvironmentPropertiesAbstract
{ after(grammarAccess.getEnvironmentPropertiesAbstractRule()); } 
	 EOF 
;

// Rule EnvironmentPropertiesAbstract
ruleEnvironmentPropertiesAbstract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentPropertiesAbstractAccess().getAlternatives()); }
		(rule__EnvironmentPropertiesAbstract__Alternatives)
		{ after(grammarAccess.getEnvironmentPropertiesAbstractAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironment
entryRuleEnvironment
:
{ before(grammarAccess.getEnvironmentRule()); }
	 ruleEnvironment
{ after(grammarAccess.getEnvironmentRule()); } 
	 EOF 
;

// Rule Environment
ruleEnvironment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentAccess().getGroup()); }
		(rule__Environment__Group__0)
		{ after(grammarAccess.getEnvironmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentName
entryRuleEnvironmentName
:
{ before(grammarAccess.getEnvironmentNameRule()); }
	 ruleEnvironmentName
{ after(grammarAccess.getEnvironmentNameRule()); } 
	 EOF 
;

// Rule EnvironmentName
ruleEnvironmentName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentNameAccess().getGroup()); }
		(rule__EnvironmentName__Group__0)
		{ after(grammarAccess.getEnvironmentNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnvironmentUrl
entryRuleEnvironmentUrl
:
{ before(grammarAccess.getEnvironmentUrlRule()); }
	 ruleEnvironmentUrl
{ after(grammarAccess.getEnvironmentUrlRule()); } 
	 EOF 
;

// Rule EnvironmentUrl
ruleEnvironmentUrl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnvironmentUrlAccess().getGroup()); }
		(rule__EnvironmentUrl__Group__0)
		{ after(grammarAccess.getEnvironmentUrlAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall()); }
		ruleVALID_STRING
		{ after(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_STRING
entryRuleVALID_STRING
:
{ before(grammarAccess.getVALID_STRINGRule()); }
	 ruleVALID_STRING
{ after(grammarAccess.getVALID_STRINGRule()); } 
	 EOF 
;

// Rule VALID_STRING
ruleVALID_STRING 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_STRINGAccess().getAlternatives()); }
		(rule__VALID_STRING__Alternatives)
		{ after(grammarAccess.getVALID_STRINGAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKEYWORD
entryRuleKEYWORD
:
{ before(grammarAccess.getKEYWORDRule()); }
	 ruleKEYWORD
{ after(grammarAccess.getKEYWORDRule()); } 
	 EOF 
;

// Rule KEYWORD
ruleKEYWORD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKEYWORDAccess().getAlternatives()); }
		(rule__KEYWORD__Alternatives)
		{ after(grammarAccess.getKEYWORDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentPropertiesAbstract__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentPropertiesAbstractAccess().getEnvironmentNameParserRuleCall_0()); }
		ruleEnvironmentName
		{ after(grammarAccess.getEnvironmentPropertiesAbstractAccess().getEnvironmentNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEnvironmentPropertiesAbstractAccess().getEnvironmentUrlParserRuleCall_1()); }
		ruleEnvironmentUrl
		{ after(grammarAccess.getEnvironmentPropertiesAbstractAccess().getEnvironmentUrlParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VALID_STRING__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVALID_STRINGAccess().getKEYWORDParserRuleCall_1()); }
		ruleKEYWORD
		{ after(grammarAccess.getVALID_STRINGAccess().getKEYWORDParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KEYWORD__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKEYWORDAccess().getEnvironmentKeyword_0()); }
		Environment
		{ after(grammarAccess.getKEYWORDAccess().getEnvironmentKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getKEYWORDAccess().getNameKeyword_1()); }
		Name
		{ after(grammarAccess.getKEYWORDAccess().getNameKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getKEYWORDAccess().getUrlKeyword_2()); }
		Url
		{ after(grammarAccess.getKEYWORDAccess().getUrlKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJobEnvironmentOneOf1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJobEnvironmentOneOf1__Group__0__Impl
	rule__NormalJobEnvironmentOneOf1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJobEnvironmentOneOf1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJobEnvironmentOneOf1Access().getEnvironmentKeyword_0()); }
	Environment
	{ after(grammarAccess.getNormalJobEnvironmentOneOf1Access().getEnvironmentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJobEnvironmentOneOf1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJobEnvironmentOneOf1__Group__1__Impl
	rule__NormalJobEnvironmentOneOf1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJobEnvironmentOneOf1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJobEnvironmentOneOf1Access().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getNormalJobEnvironmentOneOf1Access().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJobEnvironmentOneOf1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NormalJobEnvironmentOneOf1__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalJobEnvironmentOneOf1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNormalJobEnvironmentOneOf1Access().getEnvironmentAssignment_2()); }
	(rule__NormalJobEnvironmentOneOf1__EnvironmentAssignment_2)
	{ after(grammarAccess.getNormalJobEnvironmentOneOf1Access().getEnvironmentAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__0__Impl
	rule__Environment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAction_0()); }
	()
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__1__Impl
	rule__Environment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getEnvironmentAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__2__Impl
	rule__Environment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_2()); }
	(rule__Environment__Group_2__0)?
	{ after(grammarAccess.getEnvironmentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getEnvironmentAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__0__Impl
	rule__Environment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_2_0()); }
	(rule__Environment__EnvironmentAssignment_2_0)
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getGroup_2_1()); }
	(rule__Environment__Group_2_1__0)*
	{ after(grammarAccess.getEnvironmentAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Environment__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2_1__0__Impl
	rule__Environment__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getEnvironmentAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Environment__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_2_1_1()); }
	(rule__Environment__EnvironmentAssignment_2_1_1)
	{ after(grammarAccess.getEnvironmentAccess().getEnvironmentAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentName__Group__0__Impl
	rule__EnvironmentName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentNameAccess().getEnvironmentNameAction_0()); }
	()
	{ after(grammarAccess.getEnvironmentNameAccess().getEnvironmentNameAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentName__Group__1__Impl
	rule__EnvironmentName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentNameAccess().getNameKeyword_1()); }
	Name
	{ after(grammarAccess.getEnvironmentNameAccess().getNameKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentName__Group__2__Impl
	rule__EnvironmentName__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentNameAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getEnvironmentNameAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentName__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentNameAccess().getNameAssignment_3()); }
	(rule__EnvironmentName__NameAssignment_3)
	{ after(grammarAccess.getEnvironmentNameAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnvironmentUrl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentUrl__Group__0__Impl
	rule__EnvironmentUrl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentUrl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentUrlAccess().getUrlKeyword_0()); }
	Url
	{ after(grammarAccess.getEnvironmentUrlAccess().getUrlKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentUrl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentUrl__Group__1__Impl
	rule__EnvironmentUrl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentUrl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentUrlAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getEnvironmentUrlAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentUrl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnvironmentUrl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentUrl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnvironmentUrlAccess().getUrlAssignment_2()); }
	(rule__EnvironmentUrl__UrlAssignment_2)
	{ after(grammarAccess.getEnvironmentUrlAccess().getUrlAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NormalJobEnvironmentOneOf1__EnvironmentAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNormalJobEnvironmentOneOf1Access().getEnvironmentEnvironmentParserRuleCall_2_0()); }
		ruleEnvironment
		{ after(grammarAccess.getNormalJobEnvironmentOneOf1Access().getEnvironmentEnvironmentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__EnvironmentAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentPropertiesAbstractParserRuleCall_2_0_0()); }
		ruleEnvironmentPropertiesAbstract
		{ after(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentPropertiesAbstractParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Environment__EnvironmentAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentPropertiesAbstractParserRuleCall_2_1_1_0()); }
		ruleEnvironmentPropertiesAbstract
		{ after(grammarAccess.getEnvironmentAccess().getEnvironmentEnvironmentPropertiesAbstractParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentName__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentNameAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getEnvironmentNameAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnvironmentUrl__UrlAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnvironmentUrlAccess().getUrlEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getEnvironmentUrlAccess().getUrlEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
