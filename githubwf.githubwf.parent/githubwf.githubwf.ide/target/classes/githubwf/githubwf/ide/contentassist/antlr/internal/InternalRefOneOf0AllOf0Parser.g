/*
 * generated by Xtext 2.23.0
 */
parser grammar InternalRefOneOf0AllOf0Parser;

options {
	tokenVocab=InternalRefOneOf0AllOf0Lexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package githubwf.githubwf.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import githubwf.githubwf.services.RefOneOf0AllOf0GrammarAccess;

}
@members {
	private RefOneOf0AllOf0GrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("False", "'false'");
	}

	public void setGrammarAccess(RefOneOf0AllOf0GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleRefOneOf0AllOf0
entryRuleRefOneOf0AllOf0
:
{ before(grammarAccess.getRefOneOf0AllOf0Rule()); }
	 ruleRefOneOf0AllOf0
{ after(grammarAccess.getRefOneOf0AllOf0Rule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0
ruleRefOneOf0AllOf0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0Access().getRefAssignment()); }
		(rule__RefOneOf0AllOf0__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0Access().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0Abstract
entryRuleRefOneOf0AllOf0Abstract
:
{ before(grammarAccess.getRefOneOf0AllOf0AbstractRule()); }
	 ruleRefOneOf0AllOf0Abstract
{ after(grammarAccess.getRefOneOf0AllOf0AbstractRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0Abstract
ruleRefOneOf0AllOf0Abstract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getAlternatives()); }
		(rule__RefOneOf0AllOf0Abstract__Alternatives)
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0PropertiesAbstract
entryRuleRefOneOf0AllOf0PropertiesAbstract
:
{ before(grammarAccess.getRefOneOf0AllOf0PropertiesAbstractRule()); }
	 ruleRefOneOf0AllOf0PropertiesAbstract
{ after(grammarAccess.getRefOneOf0AllOf0PropertiesAbstractRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0PropertiesAbstract
ruleRefOneOf0AllOf0PropertiesAbstract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0PropertiesAbstractAccess().getRefOneOf0AllOf0AdditionalPropertiesParserRuleCall()); }
		(ruleRefOneOf0AllOf0AdditionalProperties)
		{ after(grammarAccess.getRefOneOf0AllOf0PropertiesAbstractAccess().getRefOneOf0AllOf0AdditionalPropertiesParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeString
entryRuleRefOneOf0AllOf0TypeString
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeStringRule()); }
	 ruleRefOneOf0AllOf0TypeString
{ after(grammarAccess.getRefOneOf0AllOf0TypeStringRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeString
ruleRefOneOf0AllOf0TypeString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeStringAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf0TypeString__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeStringAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeInteger
entryRuleRefOneOf0AllOf0TypeInteger
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeIntegerRule()); }
	 ruleRefOneOf0AllOf0TypeInteger
{ after(grammarAccess.getRefOneOf0AllOf0TypeIntegerRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeInteger
ruleRefOneOf0AllOf0TypeInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeIntegerAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf0TypeInteger__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeIntegerAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeNumber
entryRuleRefOneOf0AllOf0TypeNumber
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeNumberRule()); }
	 ruleRefOneOf0AllOf0TypeNumber
{ after(grammarAccess.getRefOneOf0AllOf0TypeNumberRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeNumber
ruleRefOneOf0AllOf0TypeNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeNumberAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf0TypeNumber__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeNumberAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeBoolean
entryRuleRefOneOf0AllOf0TypeBoolean
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeBooleanRule()); }
	 ruleRefOneOf0AllOf0TypeBoolean
{ after(grammarAccess.getRefOneOf0AllOf0TypeBooleanRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeBoolean
ruleRefOneOf0AllOf0TypeBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeBooleanAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf0TypeBoolean__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeBooleanAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeObject
entryRuleRefOneOf0AllOf0TypeObject
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectRule()); }
	 ruleRefOneOf0AllOf0TypeObject
{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeObject
ruleRefOneOf0AllOf0TypeObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getGroup()); }
		(rule__RefOneOf0AllOf0TypeObject__Group__0)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeArray
entryRuleRefOneOf0AllOf0TypeArray
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayRule()); }
	 ruleRefOneOf0AllOf0TypeArray
{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeArray
ruleRefOneOf0AllOf0TypeArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getGroup()); }
		(rule__RefOneOf0AllOf0TypeArray__Group__0)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0TypeNull
entryRuleRefOneOf0AllOf0TypeNull
:
{ before(grammarAccess.getRefOneOf0AllOf0TypeNullRule()); }
	 ruleRefOneOf0AllOf0TypeNull
{ after(grammarAccess.getRefOneOf0AllOf0TypeNullRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0TypeNull
ruleRefOneOf0AllOf0TypeNull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeNullAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf0TypeNull__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0TypeNullAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall()); }
		ruleVALID_STRING
		{ after(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDoubleObject
entryRuleEDoubleObject
:
{ before(grammarAccess.getEDoubleObjectRule()); }
	 ruleEDoubleObject
{ after(grammarAccess.getEDoubleObjectRule()); } 
	 EOF 
;

// Rule EDoubleObject
ruleEDoubleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleObjectAccess().getAlternatives()); }
		(rule__EDoubleObject__Alternatives)
		{ after(grammarAccess.getEDoubleObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBooleanObject
entryRuleEBooleanObject
:
{ before(grammarAccess.getEBooleanObjectRule()); }
	 ruleEBooleanObject
{ after(grammarAccess.getEBooleanObjectRule()); } 
	 EOF 
;

// Rule EBooleanObject
ruleEBooleanObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanObjectAccess().getAlternatives()); }
		(rule__EBooleanObject__Alternatives)
		{ after(grammarAccess.getEBooleanObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0AdditionalProperties
entryRuleRefOneOf0AllOf0AdditionalProperties
:
{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesRule()); }
	 ruleRefOneOf0AllOf0AdditionalProperties
{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0AdditionalProperties
ruleRefOneOf0AllOf0AdditionalProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getGroup()); }
		(rule__RefOneOf0AllOf0AdditionalProperties__Group__0)
		{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonDocument
entryRuleJsonDocument
:
{ before(grammarAccess.getJsonDocumentRule()); }
	 ruleJsonDocument
{ after(grammarAccess.getJsonDocumentRule()); } 
	 EOF 
;

// Rule JsonDocument
ruleJsonDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonDocumentAccess().getValueAssignment()); }
		(rule__JsonDocument__ValueAssignment)
		{ after(grammarAccess.getJsonDocumentAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
		(rule__StringValue__ValueAssignment)
		{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayValue
entryRuleArrayValue
:
{ before(grammarAccess.getArrayValueRule()); }
	 ruleArrayValue
{ after(grammarAccess.getArrayValueRule()); } 
	 EOF 
;

// Rule ArrayValue
ruleArrayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayValueAccess().getGroup()); }
		(rule__ArrayValue__Group__0)
		{ after(grammarAccess.getArrayValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullValue
entryRuleNullValue
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullValueAccess().getValueAssignment()); }
		(rule__NullValue__ValueAssignment)
		{ after(grammarAccess.getNullValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberValue
entryRuleNumberValue
:
{ before(grammarAccess.getNumberValueRule()); }
	 ruleNumberValue
{ after(grammarAccess.getNumberValueRule()); } 
	 EOF 
;

// Rule NumberValue
ruleNumberValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberValueAccess().getValueAssignment()); }
		(rule__NumberValue__ValueAssignment)
		{ after(grammarAccess.getNumberValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectValue
entryRuleObjectValue
:
{ before(grammarAccess.getObjectValueRule()); }
	 ruleObjectValue
{ after(grammarAccess.getObjectValueRule()); } 
	 EOF 
;

// Rule ObjectValue
ruleObjectValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectValueAccess().getGroup()); }
		(rule__ObjectValue__Group__0)
		{ after(grammarAccess.getObjectValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
		(rule__BooleanValue__ValueAssignment)
		{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getAlternatives()); }
		(rule__EDouble__Alternatives)
		{ after(grammarAccess.getEDoubleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair
:
{ before(grammarAccess.getKeyValuePairRule()); }
	 ruleKeyValuePair
{ after(grammarAccess.getKeyValuePairRule()); } 
	 EOF 
;

// Rule KeyValuePair
ruleKeyValuePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getGroup()); }
		(rule__KeyValuePair__Group__0)
		{ after(grammarAccess.getKeyValuePairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf0Items
entryRuleRefOneOf0AllOf0Items
:
{ before(grammarAccess.getRefOneOf0AllOf0ItemsRule()); }
	 ruleRefOneOf0AllOf0Items
{ after(grammarAccess.getRefOneOf0AllOf0ItemsRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf0Items
ruleRefOneOf0AllOf0Items 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0ItemsAccess().getItemsAssignment()); }
		(rule__RefOneOf0AllOf0Items__ItemsAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf0ItemsAccess().getItemsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_STRING
entryRuleVALID_STRING
:
{ before(grammarAccess.getVALID_STRINGRule()); }
	 ruleVALID_STRING
{ after(grammarAccess.getVALID_STRINGRule()); } 
	 EOF 
;

// Rule VALID_STRING
ruleVALID_STRING 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NullEnum
ruleNullEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration()); }
		(Null)
		{ after(grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0Abstract__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeNumberParserRuleCall_0()); }
		(ruleRefOneOf0AllOf0TypeNumber)
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeStringParserRuleCall_1()); }
		ruleRefOneOf0AllOf0TypeString
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeStringParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeIntegerParserRuleCall_2()); }
		ruleRefOneOf0AllOf0TypeInteger
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeIntegerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeBooleanParserRuleCall_3()); }
		ruleRefOneOf0AllOf0TypeBoolean
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeBooleanParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeObjectParserRuleCall_4()); }
		ruleRefOneOf0AllOf0TypeObject
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeObjectParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeArrayParserRuleCall_5()); }
		ruleRefOneOf0AllOf0TypeArray
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeArrayParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeNullParserRuleCall_6()); }
		ruleRefOneOf0AllOf0TypeNull
		{ after(grammarAccess.getRefOneOf0AllOf0AbstractAccess().getRefOneOf0AllOf0TypeNullParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
		ruleStringValue
		{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getArrayValueParserRuleCall_1()); }
		ruleArrayValue
		{ after(grammarAccess.getValueAccess().getArrayValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNullValueParserRuleCall_2()); }
		ruleNullValue
		{ after(grammarAccess.getValueAccess().getNullValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNumberValueParserRuleCall_3()); }
		ruleNumberValue
		{ after(grammarAccess.getValueAccess().getNumberValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getObjectValueParserRuleCall_4()); }
		ruleObjectValue
		{ after(grammarAccess.getValueAccess().getObjectValueParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_5()); }
		ruleBooleanValue
		{ after(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDoubleObject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleObjectAccess().getE_INTTerminalRuleCall_0()); }
		RULE_E_INT
		{ after(grammarAccess.getEDoubleObjectAccess().getE_INTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleObjectAccess().getE_DOUBLETerminalRuleCall_1()); }
		RULE_E_DOUBLE
		{ after(grammarAccess.getEDoubleObjectAccess().getE_DOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBooleanObject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanObjectAccess().getTrueKeyword_0()); }
		True
		{ after(grammarAccess.getEBooleanObjectAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanObjectAccess().getFalseKeyword_1()); }
		False
		{ after(grammarAccess.getEBooleanObjectAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getE_INTTerminalRuleCall_0()); }
		RULE_E_INT
		{ after(grammarAccess.getEDoubleAccess().getE_INTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getE_DOUBLETerminalRuleCall_1()); }
		RULE_E_DOUBLE
		{ after(grammarAccess.getEDoubleAccess().getE_DOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		True
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		False
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group__0__Impl
	rule__RefOneOf0AllOf0TypeObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefOneOf0AllOf0TypeObjectAction_0()); }
	()
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefOneOf0AllOf0TypeObjectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group__1__Impl
	rule__RefOneOf0AllOf0TypeObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group__2__Impl
	rule__RefOneOf0AllOf0TypeObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getGroup_2()); }
	(rule__RefOneOf0AllOf0TypeObject__Group_2__0)?
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0TypeObject__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group_2__0__Impl
	rule__RefOneOf0AllOf0TypeObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefAssignment_2_0()); }
	(rule__RefOneOf0AllOf0TypeObject__RefAssignment_2_0)
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getGroup_2_1()); }
	(rule__RefOneOf0AllOf0TypeObject__Group_2_1__0)*
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0TypeObject__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group_2_1__0__Impl
	rule__RefOneOf0AllOf0TypeObject__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeObject__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefAssignment_2_1_1()); }
	(rule__RefOneOf0AllOf0TypeObject__RefAssignment_2_1_1)
	{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0TypeArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group__0__Impl
	rule__RefOneOf0AllOf0TypeArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefOneOf0AllOf0TypeArrayAction_0()); }
	()
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefOneOf0AllOf0TypeArrayAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group__1__Impl
	rule__RefOneOf0AllOf0TypeArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group__2__Impl
	rule__RefOneOf0AllOf0TypeArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getGroup_2()); }
	(rule__RefOneOf0AllOf0TypeArray__Group_2__0)?
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0TypeArray__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group_2__0__Impl
	rule__RefOneOf0AllOf0TypeArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefAssignment_2_0()); }
	(rule__RefOneOf0AllOf0TypeArray__RefAssignment_2_0)
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getGroup_2_1()); }
	(rule__RefOneOf0AllOf0TypeArray__Group_2_1__0)*
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0TypeArray__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group_2_1__0__Impl
	rule__RefOneOf0AllOf0TypeArray__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0TypeArray__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefAssignment_2_1_1()); }
	(rule__RefOneOf0AllOf0TypeArray__RefAssignment_2_1_1)
	{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0AdditionalProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0AdditionalProperties__Group__0__Impl
	rule__RefOneOf0AllOf0AdditionalProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getKeyAssignment_0()); }
	(rule__RefOneOf0AllOf0AdditionalProperties__KeyAssignment_0)
	{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0AdditionalProperties__Group__1__Impl
	rule__RefOneOf0AllOf0AdditionalProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf0AdditionalProperties__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getAdditionalPropertiesAssignment_2()); }
	(rule__RefOneOf0AllOf0AdditionalProperties__AdditionalPropertiesAssignment_2)
	{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getAdditionalPropertiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__0__Impl
	rule__ArrayValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getArrayValueAction_0()); }
	()
	{ after(grammarAccess.getArrayValueAccess().getArrayValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__1__Impl
	rule__ArrayValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__2__Impl
	rule__ArrayValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_2()); }
	(rule__ArrayValue__Group_2__0)?
	{ after(grammarAccess.getArrayValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2__0__Impl
	rule__ArrayValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getValueAssignment_2_0()); }
	(rule__ArrayValue__ValueAssignment_2_0)
	{ after(grammarAccess.getArrayValueAccess().getValueAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_2_1()); }
	(rule__ArrayValue__Group_2_1__0)*
	{ after(grammarAccess.getArrayValueAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2_1__0__Impl
	rule__ArrayValue__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getArrayValueAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getValueAssignment_2_1_1()); }
	(rule__ArrayValue__ValueAssignment_2_1_1)
	{ after(grammarAccess.getArrayValueAccess().getValueAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__0__Impl
	rule__ObjectValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
	()
	{ after(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__1__Impl
	rule__ObjectValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__2__Impl
	rule__ObjectValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getGroup_2()); }
	(rule__ObjectValue__Group_2__0)?
	{ after(grammarAccess.getObjectValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2__0__Impl
	rule__ObjectValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_0()); }
	(rule__ObjectValue__KeyvaluepairAssignment_2_0)
	{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getGroup_2_1()); }
	(rule__ObjectValue__Group_2_1__0)*
	{ after(grammarAccess.getObjectValueAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2_1__0__Impl
	rule__ObjectValue__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getObjectValueAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_1_1()); }
	(rule__ObjectValue__KeyvaluepairAssignment_2_1_1)
	{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__0__Impl
	rule__KeyValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getKeyAssignment_0()); }
	(rule__KeyValuePair__KeyAssignment_0)
	{ after(grammarAccess.getKeyValuePairAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__1__Impl
	rule__KeyValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getKeyValuePairAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getValueAssignment_2()); }
	(rule__KeyValuePair__ValueAssignment_2)
	{ after(grammarAccess.getKeyValuePairAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf0__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0Access().getRefRefOneOf0AllOf0AbstractParserRuleCall_0()); }
		ruleRefOneOf0AllOf0Abstract
		{ after(grammarAccess.getRefOneOf0AllOf0Access().getRefRefOneOf0AllOf0AbstractParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeString__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeStringAccess().getRefEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getRefOneOf0AllOf0TypeStringAccess().getRefEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeInteger__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeIntegerAccess().getRefEDoubleObjectParserRuleCall_0()); }
		ruleEDoubleObject
		{ after(grammarAccess.getRefOneOf0AllOf0TypeIntegerAccess().getRefEDoubleObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeNumber__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeNumberAccess().getRefEDoubleObjectParserRuleCall_0()); }
		ruleEDoubleObject
		{ after(grammarAccess.getRefOneOf0AllOf0TypeNumberAccess().getRefEDoubleObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeBoolean__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeBooleanAccess().getRefEBooleanObjectParserRuleCall_0()); }
		ruleEBooleanObject
		{ after(grammarAccess.getRefOneOf0AllOf0TypeBooleanAccess().getRefEBooleanObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__RefAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefRefOneOf0AllOf0PropertiesAbstractParserRuleCall_2_0_0()); }
		ruleRefOneOf0AllOf0PropertiesAbstract
		{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefRefOneOf0AllOf0PropertiesAbstractParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeObject__RefAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefRefOneOf0AllOf0PropertiesAbstractParserRuleCall_2_1_1_0()); }
		ruleRefOneOf0AllOf0PropertiesAbstract
		{ after(grammarAccess.getRefOneOf0AllOf0TypeObjectAccess().getRefRefOneOf0AllOf0PropertiesAbstractParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__RefAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefRefOneOf0AllOf0ItemsParserRuleCall_2_0_0()); }
		ruleRefOneOf0AllOf0Items
		{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefRefOneOf0AllOf0ItemsParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeArray__RefAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefRefOneOf0AllOf0ItemsParserRuleCall_2_1_1_0()); }
		ruleRefOneOf0AllOf0Items
		{ after(grammarAccess.getRefOneOf0AllOf0TypeArrayAccess().getRefRefOneOf0AllOf0ItemsParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0TypeNull__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0TypeNullAccess().getRefNullValueParserRuleCall_0()); }
		ruleNullValue
		{ after(grammarAccess.getRefOneOf0AllOf0TypeNullAccess().getRefNullValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0AdditionalProperties__AdditionalPropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0()); }
		ruleJsonDocument
		{ after(grammarAccess.getRefOneOf0AllOf0AdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonDocument__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0()); }
		ruleValue
		{ after(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ValueAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0_0()); }
		ruleValue
		{ after(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ValueAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_1_1_0()); }
		ruleValue
		{ after(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0()); }
		ruleNullEnum
		{ after(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0()); }
		ruleEDouble
		{ after(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__KeyvaluepairAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_0_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__KeyvaluepairAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0()); }
		ruleEBoolean
		{ after(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf0Items__ItemsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf0ItemsAccess().getItemsJsonDocumentParserRuleCall_0()); }
		ruleJsonDocument
		{ after(grammarAccess.getRefOneOf0AllOf0ItemsAccess().getItemsJsonDocumentParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
