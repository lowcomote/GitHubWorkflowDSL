/*
 * generated by Xtext 2.23.0
 */
parser grammar InternalRefOneOf0AllOf2NotParser;

options {
	tokenVocab=InternalRefOneOf0AllOf2NotLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package githubwf.githubwf.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import githubwf.githubwf.services.RefOneOf0AllOf2NotGrammarAccess;

}
@members {
	private RefOneOf0AllOf2NotGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("False", "'false'");
	}

	public void setGrammarAccess(RefOneOf0AllOf2NotGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleRefOneOf0AllOf2Not
entryRuleRefOneOf0AllOf2Not
:
{ before(grammarAccess.getRefOneOf0AllOf2NotRule()); }
	 ruleRefOneOf0AllOf2Not
{ after(grammarAccess.getRefOneOf0AllOf2NotRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2Not
ruleRefOneOf0AllOf2Not 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf2Not__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotAbstract
entryRuleRefOneOf0AllOf2NotAbstract
:
{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractRule()); }
	 ruleRefOneOf0AllOf2NotAbstract
{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotAbstract
ruleRefOneOf0AllOf2NotAbstract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getAlternatives()); }
		(rule__RefOneOf0AllOf2NotAbstract__Alternatives)
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotPropertiesAbstract
entryRuleRefOneOf0AllOf2NotPropertiesAbstract
:
{ before(grammarAccess.getRefOneOf0AllOf2NotPropertiesAbstractRule()); }
	 ruleRefOneOf0AllOf2NotPropertiesAbstract
{ after(grammarAccess.getRefOneOf0AllOf2NotPropertiesAbstractRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotPropertiesAbstract
ruleRefOneOf0AllOf2NotPropertiesAbstract 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotPropertiesAbstractAccess().getRefOneOf0AllOf2NotAdditionalPropertiesParserRuleCall()); }
		(ruleRefOneOf0AllOf2NotAdditionalProperties)
		{ after(grammarAccess.getRefOneOf0AllOf2NotPropertiesAbstractAccess().getRefOneOf0AllOf2NotAdditionalPropertiesParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeString
entryRuleRefOneOf0AllOf2NotTypeString
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeStringRule()); }
	 ruleRefOneOf0AllOf2NotTypeString
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeStringRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeString
ruleRefOneOf0AllOf2NotTypeString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeStringAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf2NotTypeString__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeStringAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeInteger
entryRuleRefOneOf0AllOf2NotTypeInteger
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeIntegerRule()); }
	 ruleRefOneOf0AllOf2NotTypeInteger
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeIntegerRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeInteger
ruleRefOneOf0AllOf2NotTypeInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeIntegerAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf2NotTypeInteger__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeIntegerAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeNumber
entryRuleRefOneOf0AllOf2NotTypeNumber
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeNumberRule()); }
	 ruleRefOneOf0AllOf2NotTypeNumber
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeNumberRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeNumber
ruleRefOneOf0AllOf2NotTypeNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeNumberAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf2NotTypeNumber__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeNumberAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeBoolean
entryRuleRefOneOf0AllOf2NotTypeBoolean
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeBooleanRule()); }
	 ruleRefOneOf0AllOf2NotTypeBoolean
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeBooleanRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeBoolean
ruleRefOneOf0AllOf2NotTypeBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeBooleanAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf2NotTypeBoolean__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeBooleanAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeObject
entryRuleRefOneOf0AllOf2NotTypeObject
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectRule()); }
	 ruleRefOneOf0AllOf2NotTypeObject
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeObject
ruleRefOneOf0AllOf2NotTypeObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getGroup()); }
		(rule__RefOneOf0AllOf2NotTypeObject__Group__0)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeArray
entryRuleRefOneOf0AllOf2NotTypeArray
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayRule()); }
	 ruleRefOneOf0AllOf2NotTypeArray
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeArray
ruleRefOneOf0AllOf2NotTypeArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getGroup()); }
		(rule__RefOneOf0AllOf2NotTypeArray__Group__0)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotTypeNull
entryRuleRefOneOf0AllOf2NotTypeNull
:
{ before(grammarAccess.getRefOneOf0AllOf2NotTypeNullRule()); }
	 ruleRefOneOf0AllOf2NotTypeNull
{ after(grammarAccess.getRefOneOf0AllOf2NotTypeNullRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotTypeNull
ruleRefOneOf0AllOf2NotTypeNull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeNullAccess().getRefAssignment()); }
		(rule__RefOneOf0AllOf2NotTypeNull__RefAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeNullAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall()); }
		ruleVALID_STRING
		{ after(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDoubleObject
entryRuleEDoubleObject
:
{ before(grammarAccess.getEDoubleObjectRule()); }
	 ruleEDoubleObject
{ after(grammarAccess.getEDoubleObjectRule()); } 
	 EOF 
;

// Rule EDoubleObject
ruleEDoubleObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleObjectAccess().getAlternatives()); }
		(rule__EDoubleObject__Alternatives)
		{ after(grammarAccess.getEDoubleObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBooleanObject
entryRuleEBooleanObject
:
{ before(grammarAccess.getEBooleanObjectRule()); }
	 ruleEBooleanObject
{ after(grammarAccess.getEBooleanObjectRule()); } 
	 EOF 
;

// Rule EBooleanObject
ruleEBooleanObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanObjectAccess().getAlternatives()); }
		(rule__EBooleanObject__Alternatives)
		{ after(grammarAccess.getEBooleanObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotAdditionalProperties
entryRuleRefOneOf0AllOf2NotAdditionalProperties
:
{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesRule()); }
	 ruleRefOneOf0AllOf2NotAdditionalProperties
{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotAdditionalProperties
ruleRefOneOf0AllOf2NotAdditionalProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getGroup()); }
		(rule__RefOneOf0AllOf2NotAdditionalProperties__Group__0)
		{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonDocument
entryRuleJsonDocument
:
{ before(grammarAccess.getJsonDocumentRule()); }
	 ruleJsonDocument
{ after(grammarAccess.getJsonDocumentRule()); } 
	 EOF 
;

// Rule JsonDocument
ruleJsonDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonDocumentAccess().getValueAssignment()); }
		(rule__JsonDocument__ValueAssignment)
		{ after(grammarAccess.getJsonDocumentAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringValue
entryRuleStringValue
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
		(rule__StringValue__ValueAssignment)
		{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayValue
entryRuleArrayValue
:
{ before(grammarAccess.getArrayValueRule()); }
	 ruleArrayValue
{ after(grammarAccess.getArrayValueRule()); } 
	 EOF 
;

// Rule ArrayValue
ruleArrayValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayValueAccess().getGroup()); }
		(rule__ArrayValue__Group__0)
		{ after(grammarAccess.getArrayValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullValue
entryRuleNullValue
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullValueAccess().getValueAssignment()); }
		(rule__NullValue__ValueAssignment)
		{ after(grammarAccess.getNullValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberValue
entryRuleNumberValue
:
{ before(grammarAccess.getNumberValueRule()); }
	 ruleNumberValue
{ after(grammarAccess.getNumberValueRule()); } 
	 EOF 
;

// Rule NumberValue
ruleNumberValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberValueAccess().getValueAssignment()); }
		(rule__NumberValue__ValueAssignment)
		{ after(grammarAccess.getNumberValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectValue
entryRuleObjectValue
:
{ before(grammarAccess.getObjectValueRule()); }
	 ruleObjectValue
{ after(grammarAccess.getObjectValueRule()); } 
	 EOF 
;

// Rule ObjectValue
ruleObjectValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectValueAccess().getGroup()); }
		(rule__ObjectValue__Group__0)
		{ after(grammarAccess.getObjectValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
		(rule__BooleanValue__ValueAssignment)
		{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getAlternatives()); }
		(rule__EDouble__Alternatives)
		{ after(grammarAccess.getEDoubleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair
:
{ before(grammarAccess.getKeyValuePairRule()); }
	 ruleKeyValuePair
{ after(grammarAccess.getKeyValuePairRule()); } 
	 EOF 
;

// Rule KeyValuePair
ruleKeyValuePair 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getGroup()); }
		(rule__KeyValuePair__Group__0)
		{ after(grammarAccess.getKeyValuePairAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRefOneOf0AllOf2NotItems
entryRuleRefOneOf0AllOf2NotItems
:
{ before(grammarAccess.getRefOneOf0AllOf2NotItemsRule()); }
	 ruleRefOneOf0AllOf2NotItems
{ after(grammarAccess.getRefOneOf0AllOf2NotItemsRule()); } 
	 EOF 
;

// Rule RefOneOf0AllOf2NotItems
ruleRefOneOf0AllOf2NotItems 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotItemsAccess().getItemsAssignment()); }
		(rule__RefOneOf0AllOf2NotItems__ItemsAssignment)
		{ after(grammarAccess.getRefOneOf0AllOf2NotItemsAccess().getItemsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVALID_STRING
entryRuleVALID_STRING
:
{ before(grammarAccess.getVALID_STRINGRule()); }
	 ruleVALID_STRING
{ after(grammarAccess.getVALID_STRINGRule()); } 
	 EOF 
;

// Rule VALID_STRING
ruleVALID_STRING 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule NullEnum
ruleNullEnum
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration()); }
		(Null)
		{ after(grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAbstract__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeNumberParserRuleCall_0()); }
		(ruleRefOneOf0AllOf2NotTypeNumber)
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeStringParserRuleCall_1()); }
		ruleRefOneOf0AllOf2NotTypeString
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeStringParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeIntegerParserRuleCall_2()); }
		ruleRefOneOf0AllOf2NotTypeInteger
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeIntegerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeBooleanParserRuleCall_3()); }
		ruleRefOneOf0AllOf2NotTypeBoolean
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeBooleanParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeObjectParserRuleCall_4()); }
		ruleRefOneOf0AllOf2NotTypeObject
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeObjectParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeArrayParserRuleCall_5()); }
		ruleRefOneOf0AllOf2NotTypeArray
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeArrayParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeNullParserRuleCall_6()); }
		ruleRefOneOf0AllOf2NotTypeNull
		{ after(grammarAccess.getRefOneOf0AllOf2NotAbstractAccess().getRefOneOf0AllOf2NotTypeNullParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
		ruleStringValue
		{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getArrayValueParserRuleCall_1()); }
		ruleArrayValue
		{ after(grammarAccess.getValueAccess().getArrayValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNullValueParserRuleCall_2()); }
		ruleNullValue
		{ after(grammarAccess.getValueAccess().getNullValueParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNumberValueParserRuleCall_3()); }
		ruleNumberValue
		{ after(grammarAccess.getValueAccess().getNumberValueParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getObjectValueParserRuleCall_4()); }
		ruleObjectValue
		{ after(grammarAccess.getValueAccess().getObjectValueParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_5()); }
		ruleBooleanValue
		{ after(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDoubleObject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleObjectAccess().getE_INTTerminalRuleCall_0()); }
		RULE_E_INT
		{ after(grammarAccess.getEDoubleObjectAccess().getE_INTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleObjectAccess().getE_DOUBLETerminalRuleCall_1()); }
		RULE_E_DOUBLE
		{ after(grammarAccess.getEDoubleObjectAccess().getE_DOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBooleanObject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanObjectAccess().getTrueKeyword_0()); }
		True
		{ after(grammarAccess.getEBooleanObjectAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanObjectAccess().getFalseKeyword_1()); }
		False
		{ after(grammarAccess.getEBooleanObjectAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getE_INTTerminalRuleCall_0()); }
		RULE_E_INT
		{ after(grammarAccess.getEDoubleAccess().getE_INTTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getE_DOUBLETerminalRuleCall_1()); }
		RULE_E_DOUBLE
		{ after(grammarAccess.getEDoubleAccess().getE_DOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		True
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		False
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group__0__Impl
	rule__RefOneOf0AllOf2NotTypeObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefOneOf0AllOf2NotTypeObjectAction_0()); }
	()
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefOneOf0AllOf2NotTypeObjectAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group__1__Impl
	rule__RefOneOf0AllOf2NotTypeObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group__2__Impl
	rule__RefOneOf0AllOf2NotTypeObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getGroup_2()); }
	(rule__RefOneOf0AllOf2NotTypeObject__Group_2__0)?
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2NotTypeObject__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group_2__0__Impl
	rule__RefOneOf0AllOf2NotTypeObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefAssignment_2_0()); }
	(rule__RefOneOf0AllOf2NotTypeObject__RefAssignment_2_0)
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getGroup_2_1()); }
	(rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__0)*
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__0__Impl
	rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefAssignment_2_1_1()); }
	(rule__RefOneOf0AllOf2NotTypeObject__RefAssignment_2_1_1)
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2NotTypeArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group__0__Impl
	rule__RefOneOf0AllOf2NotTypeArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefOneOf0AllOf2NotTypeArrayAction_0()); }
	()
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefOneOf0AllOf2NotTypeArrayAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group__1__Impl
	rule__RefOneOf0AllOf2NotTypeArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group__2__Impl
	rule__RefOneOf0AllOf2NotTypeArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getGroup_2()); }
	(rule__RefOneOf0AllOf2NotTypeArray__Group_2__0)?
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2NotTypeArray__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group_2__0__Impl
	rule__RefOneOf0AllOf2NotTypeArray__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefAssignment_2_0()); }
	(rule__RefOneOf0AllOf2NotTypeArray__RefAssignment_2_0)
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getGroup_2_1()); }
	(rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__0)*
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__0__Impl
	rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefAssignment_2_1_1()); }
	(rule__RefOneOf0AllOf2NotTypeArray__RefAssignment_2_1_1)
	{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2NotAdditionalProperties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotAdditionalProperties__Group__0__Impl
	rule__RefOneOf0AllOf2NotAdditionalProperties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getKeyAssignment_0()); }
	(rule__RefOneOf0AllOf2NotAdditionalProperties__KeyAssignment_0)
	{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotAdditionalProperties__Group__1__Impl
	rule__RefOneOf0AllOf2NotAdditionalProperties__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RefOneOf0AllOf2NotAdditionalProperties__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getAdditionalPropertiesAssignment_2()); }
	(rule__RefOneOf0AllOf2NotAdditionalProperties__AdditionalPropertiesAssignment_2)
	{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getAdditionalPropertiesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__0__Impl
	rule__ArrayValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getArrayValueAction_0()); }
	()
	{ after(grammarAccess.getArrayValueAccess().getArrayValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__1__Impl
	rule__ArrayValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__2__Impl
	rule__ArrayValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_2()); }
	(rule__ArrayValue__Group_2__0)?
	{ after(grammarAccess.getArrayValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2__0__Impl
	rule__ArrayValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getValueAssignment_2_0()); }
	(rule__ArrayValue__ValueAssignment_2_0)
	{ after(grammarAccess.getArrayValueAccess().getValueAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getGroup_2_1()); }
	(rule__ArrayValue__Group_2_1__0)*
	{ after(grammarAccess.getArrayValueAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayValue__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2_1__0__Impl
	rule__ArrayValue__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getArrayValueAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayValue__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayValueAccess().getValueAssignment_2_1_1()); }
	(rule__ArrayValue__ValueAssignment_2_1_1)
	{ after(grammarAccess.getArrayValueAccess().getValueAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__0__Impl
	rule__ObjectValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
	()
	{ after(grammarAccess.getObjectValueAccess().getObjectValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__1__Impl
	rule__ObjectValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__2__Impl
	rule__ObjectValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getGroup_2()); }
	(rule__ObjectValue__Group_2__0)?
	{ after(grammarAccess.getObjectValueAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2__0__Impl
	rule__ObjectValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_0()); }
	(rule__ObjectValue__KeyvaluepairAssignment_2_0)
	{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getGroup_2_1()); }
	(rule__ObjectValue__Group_2_1__0)*
	{ after(grammarAccess.getObjectValueAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectValue__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2_1__0__Impl
	rule__ObjectValue__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getObjectValueAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectValue__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_1_1()); }
	(rule__ObjectValue__KeyvaluepairAssignment_2_1_1)
	{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__0__Impl
	rule__KeyValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getKeyAssignment_0()); }
	(rule__KeyValuePair__KeyAssignment_0)
	{ after(grammarAccess.getKeyValuePairAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__1__Impl
	rule__KeyValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getKeyValuePairAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValuePair__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValuePairAccess().getValueAssignment_2()); }
	(rule__KeyValuePair__ValueAssignment_2)
	{ after(grammarAccess.getKeyValuePairAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RefOneOf0AllOf2Not__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAccess().getRefRefOneOf0AllOf2NotAbstractParserRuleCall_0()); }
		ruleRefOneOf0AllOf2NotAbstract
		{ after(grammarAccess.getRefOneOf0AllOf2NotAccess().getRefRefOneOf0AllOf2NotAbstractParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeString__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeStringAccess().getRefEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeStringAccess().getRefEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeInteger__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeIntegerAccess().getRefEDoubleObjectParserRuleCall_0()); }
		ruleEDoubleObject
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeIntegerAccess().getRefEDoubleObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeNumber__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeNumberAccess().getRefEDoubleObjectParserRuleCall_0()); }
		ruleEDoubleObject
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeNumberAccess().getRefEDoubleObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeBoolean__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeBooleanAccess().getRefEBooleanObjectParserRuleCall_0()); }
		ruleEBooleanObject
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeBooleanAccess().getRefEBooleanObjectParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__RefAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefRefOneOf0AllOf2NotPropertiesAbstractParserRuleCall_2_0_0()); }
		ruleRefOneOf0AllOf2NotPropertiesAbstract
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefRefOneOf0AllOf2NotPropertiesAbstractParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeObject__RefAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefRefOneOf0AllOf2NotPropertiesAbstractParserRuleCall_2_1_1_0()); }
		ruleRefOneOf0AllOf2NotPropertiesAbstract
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeObjectAccess().getRefRefOneOf0AllOf2NotPropertiesAbstractParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__RefAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefRefOneOf0AllOf2NotItemsParserRuleCall_2_0_0()); }
		ruleRefOneOf0AllOf2NotItems
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefRefOneOf0AllOf2NotItemsParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeArray__RefAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefRefOneOf0AllOf2NotItemsParserRuleCall_2_1_1_0()); }
		ruleRefOneOf0AllOf2NotItems
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeArrayAccess().getRefRefOneOf0AllOf2NotItemsParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotTypeNull__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotTypeNullAccess().getRefNullValueParserRuleCall_0()); }
		ruleNullValue
		{ after(grammarAccess.getRefOneOf0AllOf2NotTypeNullAccess().getRefNullValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotAdditionalProperties__AdditionalPropertiesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0()); }
		ruleJsonDocument
		{ after(grammarAccess.getRefOneOf0AllOf2NotAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonDocument__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0()); }
		ruleValue
		{ after(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ValueAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0_0()); }
		ruleValue
		{ after(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayValue__ValueAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_1_1_0()); }
		ruleValue
		{ after(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0()); }
		ruleNullEnum
		{ after(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0()); }
		ruleEDouble
		{ after(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__KeyvaluepairAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_0_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectValue__KeyvaluepairAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0()); }
		ruleKeyValuePair
		{ after(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0()); }
		ruleEBoolean
		{ after(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RefOneOf0AllOf2NotItems__ItemsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRefOneOf0AllOf2NotItemsAccess().getItemsJsonDocumentParserRuleCall_0()); }
		ruleJsonDocument
		{ after(grammarAccess.getRefOneOf0AllOf2NotItemsAccess().getItemsJsonDocumentParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
