/*
 * generated by Xtext 2.29.0
 */
lexer grammar InternalGithubwfRootOnOneOf2Lexer;

@header {
package githubwf.githubwf.ide.contentassist.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

Pull_request_review_comment : '"pull_request_review_comment"';

Branch_protection_rule : '"branch_protection_rule"';

Pull_request_review : '"pull_request_review"';

Pull_request_target : '"pull_request_target"';

Repository_dispatch : '"repository_dispatch"';

DeprecationMessage : '"deprecationMessage"';

Discussion_comment : '"discussion_comment"';

Deployment_status : '"deployment_status"';

Workflow_dispatch : '"workflow_dispatch"';

Registry_package : '"registry_package"';

BranchesIgnore : '"branches-ignore"';

Project_column : '"project_column"';

Issue_comment : '"issue_comment"';

Workflow_call : '"workflow_call"';

PathsIgnore : '"paths-ignore"';

Project_card : '"project_card"';

Pull_request : '"pull_request"';

Workflow_run : '"workflow_run"';

Check_suite : '"check_suite"';

Description : '"description"';

Merge_group : '"merge_group"';

TagsIgnore : '"tags-ignore"';

Deployment : '"deployment"';

Discussion : '"discussion"';

Page_build : '"page_build"';

Check_run : '"check_run"';

Milestone : '"milestone"';

Branches : '"branches"';

Required : '"required"';

Schedule : '"schedule"';

Default : '"default"';

Options : '"options"';

Project : '"project"';

Release : '"release"';

Secrets : '"secrets"';

Create : '"create"';

Delete : '"delete"';

Gollum : '"gollum"';

Inputs : '"inputs"';

Issues : '"issues"';

Member : '"member"';

Public : '"public"';

Status : '"status"';

Label : '"label"';

Paths : '"paths"';

Watch : '"watch"';

Cron : '"cron"';

Fork : '"fork"';

Push : '"push"';

Tags : '"tags"';

Type : '"type"';

False : 'false';

On : '"on"';

Null : 'null';

True : 'true';

Comma : ',';

Colon : ':';

LeftSquareBracket : '[';

RightSquareBracket : ']';

LeftCurlyBracket : '{';

RightCurlyBracket : '}';

fragment RULE_INT : ('0'|'1'..'9' ('0'..'9')*);

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_E_INT : '-'? RULE_INT;

RULE_E_DOUBLE : '-'? RULE_INT ('.' RULE_INT+)? (('E'|'e') ('+'|'-')? RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
