/*
 * generated by Xtext 2.23.0
 */
parser grammar InternalReusableWorkflowCallJobConcurrencyOneOf1Parser;

options {
	tokenVocab=InternalReusableWorkflowCallJobConcurrencyOneOf1Lexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package githubwf.githubwf.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import githubwf.githubwf.services.ReusableWorkflowCallJobConcurrencyOneOf1GrammarAccess;

}

@members {

 	private ReusableWorkflowCallJobConcurrencyOneOf1GrammarAccess grammarAccess;

    public InternalReusableWorkflowCallJobConcurrencyOneOf1Parser(TokenStream input, ReusableWorkflowCallJobConcurrencyOneOf1GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ReusableWorkflowCallJobConcurrencyOneOf1";
   	}

   	@Override
   	protected ReusableWorkflowCallJobConcurrencyOneOf1GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleReusableWorkflowCallJobConcurrencyOneOf1
entryRuleReusableWorkflowCallJobConcurrencyOneOf1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReusableWorkflowCallJobConcurrencyOneOf1Rule()); }
	iv_ruleReusableWorkflowCallJobConcurrencyOneOf1=ruleReusableWorkflowCallJobConcurrencyOneOf1
	{ $current=$iv_ruleReusableWorkflowCallJobConcurrencyOneOf1.current; }
	EOF;

// Rule ReusableWorkflowCallJobConcurrencyOneOf1
ruleReusableWorkflowCallJobConcurrencyOneOf1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Concurrency
		{
			newLeafNode(otherlv_0, grammarAccess.getReusableWorkflowCallJobConcurrencyOneOf1Access().getConcurrencyKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getReusableWorkflowCallJobConcurrencyOneOf1Access().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReusableWorkflowCallJobConcurrencyOneOf1Access().getConcurrencyConcurrencyParserRuleCall_2_0());
				}
				lv_concurrency_2_0=ruleConcurrency
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReusableWorkflowCallJobConcurrencyOneOf1Rule());
					}
					set(
						$current,
						"concurrency",
						lv_concurrency_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.Concurrency");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConcurrencyPropertiesAbstract
entryRuleConcurrencyPropertiesAbstract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyPropertiesAbstractRule()); }
	iv_ruleConcurrencyPropertiesAbstract=ruleConcurrencyPropertiesAbstract
	{ $current=$iv_ruleConcurrencyPropertiesAbstract.current; }
	EOF;

// Rule ConcurrencyPropertiesAbstract
ruleConcurrencyPropertiesAbstract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConcurrencyPropertiesAbstractAccess().getConcurrencyGroupParserRuleCall_0());
		}
		this_ConcurrencyGroup_0=ruleConcurrencyGroup
		{
			$current = $this_ConcurrencyGroup_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyPropertiesAbstractAccess().getConcurrencyCancel_45in_45progressParserRuleCall_1());
		}
		this_ConcurrencyCancel_45in_45progress_1=ruleConcurrencyCancel_45in_45progress
		{
			$current = $this_ConcurrencyCancel_45in_45progress_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressAbstract
entryRuleConcurrencyCancel_45in_45progressAbstract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractRule()); }
	iv_ruleConcurrencyCancel_45in_45progressAbstract=ruleConcurrencyCancel_45in_45progressAbstract
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressAbstract.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressAbstract
ruleConcurrencyCancel_45in_45progressAbstract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleConcurrencyCancel_45in_45progressTypeNumber)=>
			{
				newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeNumberParserRuleCall_0());
			}
			this_ConcurrencyCancel_45in_45progressTypeNumber_0=ruleConcurrencyCancel_45in_45progressTypeNumber
			{
				$current = $this_ConcurrencyCancel_45in_45progressTypeNumber_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeStringParserRuleCall_1());
		}
		this_ConcurrencyCancel_45in_45progressTypeString_1=ruleConcurrencyCancel_45in_45progressTypeString
		{
			$current = $this_ConcurrencyCancel_45in_45progressTypeString_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeIntegerParserRuleCall_2());
		}
		this_ConcurrencyCancel_45in_45progressTypeInteger_2=ruleConcurrencyCancel_45in_45progressTypeInteger
		{
			$current = $this_ConcurrencyCancel_45in_45progressTypeInteger_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeBooleanParserRuleCall_3());
		}
		this_ConcurrencyCancel_45in_45progressTypeBoolean_3=ruleConcurrencyCancel_45in_45progressTypeBoolean
		{
			$current = $this_ConcurrencyCancel_45in_45progressTypeBoolean_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeObjectParserRuleCall_4());
		}
		this_ConcurrencyCancel_45in_45progressTypeObject_4=ruleConcurrencyCancel_45in_45progressTypeObject
		{
			$current = $this_ConcurrencyCancel_45in_45progressTypeObject_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeArrayParserRuleCall_5());
		}
		this_ConcurrencyCancel_45in_45progressTypeArray_5=ruleConcurrencyCancel_45in_45progressTypeArray
		{
			$current = $this_ConcurrencyCancel_45in_45progressTypeArray_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAbstractAccess().getConcurrencyCancel_45in_45progressTypeNullParserRuleCall_6());
		}
		this_ConcurrencyCancel_45in_45progressTypeNull_6=ruleConcurrencyCancel_45in_45progressTypeNull
		{
			$current = $this_ConcurrencyCancel_45in_45progressTypeNull_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressPropertiesAbstract
entryRuleConcurrencyCancel_45in_45progressPropertiesAbstract returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressPropertiesAbstractRule()); }
	iv_ruleConcurrencyCancel_45in_45progressPropertiesAbstract=ruleConcurrencyCancel_45in_45progressPropertiesAbstract
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressPropertiesAbstract.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressPropertiesAbstract
ruleConcurrencyCancel_45in_45progressPropertiesAbstract returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(ruleConcurrencyCancel_45in_45progressAdditionalProperties)=>
		{
			newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressPropertiesAbstractAccess().getConcurrencyCancel_45in_45progressAdditionalPropertiesParserRuleCall());
		}
		this_ConcurrencyCancel_45in_45progressAdditionalProperties_0=ruleConcurrencyCancel_45in_45progressAdditionalProperties
		{
			$current = $this_ConcurrencyCancel_45in_45progressAdditionalProperties_0.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getStringValueParserRuleCall_0());
		}
		this_StringValue_0=ruleStringValue
		{
			$current = $this_StringValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getArrayValueParserRuleCall_1());
		}
		this_ArrayValue_1=ruleArrayValue
		{
			$current = $this_ArrayValue_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getNullValueParserRuleCall_2());
		}
		this_NullValue_2=ruleNullValue
		{
			$current = $this_NullValue_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getNumberValueParserRuleCall_3());
		}
		this_NumberValue_3=ruleNumberValue
		{
			$current = $this_NumberValue_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getObjectValueParserRuleCall_4());
		}
		this_ObjectValue_4=ruleObjectValue
		{
			$current = $this_ObjectValue_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueAccess().getBooleanValueParserRuleCall_5());
		}
		this_BooleanValue_5=ruleBooleanValue
		{
			$current = $this_BooleanValue_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConcurrency
entryRuleConcurrency returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyRule()); }
	iv_ruleConcurrency=ruleConcurrency
	{ $current=$iv_ruleConcurrency.current; }
	EOF;

// Rule Concurrency
ruleConcurrency returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConcurrencyAccess().getConcurrencyAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConcurrencyAccess().getConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_0_0());
					}
					lv_concurrency_2_0=ruleConcurrencyPropertiesAbstract
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConcurrencyRule());
						}
						add(
							$current,
							"concurrency",
							lv_concurrency_2_0,
							"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyPropertiesAbstract");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getConcurrencyAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConcurrencyAccess().getConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_1_1_0());
						}
						lv_concurrency_4_0=ruleConcurrencyPropertiesAbstract
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConcurrencyRule());
							}
							add(
								$current,
								"concurrency",
								lv_concurrency_4_0,
								"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyPropertiesAbstract");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getConcurrencyAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleConcurrencyGroup
entryRuleConcurrencyGroup returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyGroupRule()); }
	iv_ruleConcurrencyGroup=ruleConcurrencyGroup
	{ $current=$iv_ruleConcurrencyGroup.current; }
	EOF;

// Rule ConcurrencyGroup
ruleConcurrencyGroup returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Group
		{
			newLeafNode(otherlv_0, grammarAccess.getConcurrencyGroupAccess().getGroupKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyGroupAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyGroupAccess().getGroupEStringParserRuleCall_2_0());
				}
				lv_group_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyGroupRule());
					}
					set(
						$current,
						"group",
						lv_group_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progress
entryRuleConcurrencyCancel_45in_45progress returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressRule()); }
	iv_ruleConcurrencyCancel_45in_45progress=ruleConcurrencyCancel_45in_45progress
	{ $current=$iv_ruleConcurrencyCancel_45in_45progress.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progress
ruleConcurrencyCancel_45in_45progress returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAccess().getCancel_45in_45progressConcurrencyCancel_45in_45progressAbstractParserRuleCall_0());
			}
			lv_cancel_45in_45progress_0_0=ruleConcurrencyCancel_45in_45progressAbstract
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressRule());
				}
				set(
					$current,
					"cancel_45in_45progress",
					lv_cancel_45in_45progress_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyCancel_45in_45progressAbstract");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getEStringAccess().getVALID_STRINGParserRuleCall());
	}
	this_VALID_STRING_0=ruleVALID_STRING
	{
		$current.merge(this_VALID_STRING_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeString
entryRuleConcurrencyCancel_45in_45progressTypeString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeStringRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeString=ruleConcurrencyCancel_45in_45progressTypeString
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeString.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeString
ruleConcurrencyCancel_45in_45progressTypeString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CancelInProgress
		{
			newLeafNode(otherlv_0, grammarAccess.getConcurrencyCancel_45in_45progressTypeStringAccess().getCancelInProgressKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeStringAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeStringAccess().getCancel_45in_45progressEStringParserRuleCall_2_0());
				}
				lv_cancel_45in_45progress_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeStringRule());
					}
					set(
						$current,
						"cancel_45in_45progress",
						lv_cancel_45in_45progress_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeInteger
entryRuleConcurrencyCancel_45in_45progressTypeInteger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeIntegerRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeInteger=ruleConcurrencyCancel_45in_45progressTypeInteger
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeInteger.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeInteger
ruleConcurrencyCancel_45in_45progressTypeInteger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CancelInProgress
		{
			newLeafNode(otherlv_0, grammarAccess.getConcurrencyCancel_45in_45progressTypeIntegerAccess().getCancelInProgressKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeIntegerAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeIntegerAccess().getCancel_45in_45progressEDoubleObjectParserRuleCall_2_0());
				}
				lv_cancel_45in_45progress_2_0=ruleEDoubleObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeIntegerRule());
					}
					set(
						$current,
						"cancel_45in_45progress",
						lv_cancel_45in_45progress_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EDoubleObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeNumber
entryRuleConcurrencyCancel_45in_45progressTypeNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeNumberRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeNumber=ruleConcurrencyCancel_45in_45progressTypeNumber
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeNumber.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeNumber
ruleConcurrencyCancel_45in_45progressTypeNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CancelInProgress
		{
			newLeafNode(otherlv_0, grammarAccess.getConcurrencyCancel_45in_45progressTypeNumberAccess().getCancelInProgressKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeNumberAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeNumberAccess().getCancel_45in_45progressEDoubleObjectParserRuleCall_2_0());
				}
				lv_cancel_45in_45progress_2_0=ruleEDoubleObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeNumberRule());
					}
					set(
						$current,
						"cancel_45in_45progress",
						lv_cancel_45in_45progress_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EDoubleObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeBoolean
entryRuleConcurrencyCancel_45in_45progressTypeBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeBooleanRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeBoolean=ruleConcurrencyCancel_45in_45progressTypeBoolean
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeBoolean.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeBoolean
ruleConcurrencyCancel_45in_45progressTypeBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CancelInProgress
		{
			newLeafNode(otherlv_0, grammarAccess.getConcurrencyCancel_45in_45progressTypeBooleanAccess().getCancelInProgressKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeBooleanAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeBooleanAccess().getCancel_45in_45progressEBooleanObjectParserRuleCall_2_0());
				}
				lv_cancel_45in_45progress_2_0=ruleEBooleanObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeBooleanRule());
					}
					set(
						$current,
						"cancel_45in_45progress",
						lv_cancel_45in_45progress_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EBooleanObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeObject
entryRuleConcurrencyCancel_45in_45progressTypeObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeObject=ruleConcurrencyCancel_45in_45progressTypeObject
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeObject.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeObject
ruleConcurrencyCancel_45in_45progressTypeObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getConcurrencyCancel_45in_45progressTypeObjectAction_0(),
					$current);
			}
		)
		otherlv_1=CancelInProgress
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getCancelInProgressKeyword_1());
		}
		otherlv_2=Colon
		{
			newLeafNode(otherlv_2, grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getColonKeyword_2());
		}
		otherlv_3=LeftCurlyBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_0_0());
					}
					lv_cancel_45in_45progress_4_0=ruleConcurrencyCancel_45in_45progressPropertiesAbstract
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectRule());
						}
						add(
							$current,
							"cancel_45in_45progress",
							lv_cancel_45in_45progress_4_0,
							"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyCancel_45in_45progressPropertiesAbstract");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_1_1_0());
						}
						lv_cancel_45in_45progress_6_0=ruleConcurrencyCancel_45in_45progressPropertiesAbstract
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectRule());
							}
							add(
								$current,
								"cancel_45in_45progress",
								lv_cancel_45in_45progress_6_0,
								"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyCancel_45in_45progressPropertiesAbstract");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=RightCurlyBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getConcurrencyCancel_45in_45progressTypeObjectAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeArray
entryRuleConcurrencyCancel_45in_45progressTypeArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeArray=ruleConcurrencyCancel_45in_45progressTypeArray
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeArray.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeArray
ruleConcurrencyCancel_45in_45progressTypeArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getConcurrencyCancel_45in_45progressTypeArrayAction_0(),
					$current);
			}
		)
		otherlv_1=CancelInProgress
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getCancelInProgressKeyword_1());
		}
		otherlv_2=Colon
		{
			newLeafNode(otherlv_2, grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getColonKeyword_2());
		}
		otherlv_3=LeftSquareBracket
		{
			newLeafNode(otherlv_3, grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getLeftSquareBracketKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_0_0());
					}
					lv_cancel_45in_45progress_4_0=ruleConcurrencyCancel_45in_45progressItems
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayRule());
						}
						add(
							$current,
							"cancel_45in_45progress",
							lv_cancel_45in_45progress_4_0,
							"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyCancel_45in_45progressItems");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_5=Comma
				{
					newLeafNode(otherlv_5, grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getCommaKeyword_4_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_1_1_0());
						}
						lv_cancel_45in_45progress_6_0=ruleConcurrencyCancel_45in_45progressItems
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayRule());
							}
							add(
								$current,
								"cancel_45in_45progress",
								lv_cancel_45in_45progress_6_0,
								"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.ConcurrencyCancel_45in_45progressItems");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_7=RightSquareBracket
		{
			newLeafNode(otherlv_7, grammarAccess.getConcurrencyCancel_45in_45progressTypeArrayAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressTypeNull
entryRuleConcurrencyCancel_45in_45progressTypeNull returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeNullRule()); }
	iv_ruleConcurrencyCancel_45in_45progressTypeNull=ruleConcurrencyCancel_45in_45progressTypeNull
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressTypeNull.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressTypeNull
ruleConcurrencyCancel_45in_45progressTypeNull returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=CancelInProgress
		{
			newLeafNode(otherlv_0, grammarAccess.getConcurrencyCancel_45in_45progressTypeNullAccess().getCancelInProgressKeyword_0());
		}
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressTypeNullAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressTypeNullAccess().getCancel_45in_45progressNullValueParserRuleCall_2_0());
				}
				lv_cancel_45in_45progress_2_0=ruleNullValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressTypeNullRule());
					}
					set(
						$current,
						"cancel_45in_45progress",
						lv_cancel_45in_45progress_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.NullValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEDoubleObject
entryRuleEDoubleObject returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleObjectRule()); }
	iv_ruleEDoubleObject=ruleEDoubleObject
	{ $current=$iv_ruleEDoubleObject.current.getText(); }
	EOF;

// Rule EDoubleObject
ruleEDoubleObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_E_INT_0=RULE_E_INT
		{
			$current.merge(this_E_INT_0);
		}
		{
			newLeafNode(this_E_INT_0, grammarAccess.getEDoubleObjectAccess().getE_INTTerminalRuleCall_0());
		}
		    |
		this_E_DOUBLE_1=RULE_E_DOUBLE
		{
			$current.merge(this_E_DOUBLE_1);
		}
		{
			newLeafNode(this_E_DOUBLE_1, grammarAccess.getEDoubleObjectAccess().getE_DOUBLETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEBooleanObject
entryRuleEBooleanObject returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanObjectRule()); }
	iv_ruleEBooleanObject=ruleEBooleanObject
	{ $current=$iv_ruleEBooleanObject.current.getText(); }
	EOF;

// Rule EBooleanObject
ruleEBooleanObject returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=True
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanObjectAccess().getTrueKeyword_0());
		}
		    |
		kw=False
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanObjectAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressAdditionalProperties
entryRuleConcurrencyCancel_45in_45progressAdditionalProperties returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAdditionalPropertiesRule()); }
	iv_ruleConcurrencyCancel_45in_45progressAdditionalProperties=ruleConcurrencyCancel_45in_45progressAdditionalProperties
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressAdditionalProperties.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressAdditionalProperties
ruleConcurrencyCancel_45in_45progressAdditionalProperties returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressAdditionalPropertiesRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getConcurrencyCancel_45in_45progressAdditionalPropertiesAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0());
				}
				lv_additionalProperties_2_0=ruleJsonDocument
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressAdditionalPropertiesRule());
					}
					set(
						$current,
						"additionalProperties",
						lv_additionalProperties_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.JsonDocument");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJsonDocument
entryRuleJsonDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonDocumentRule()); }
	iv_ruleJsonDocument=ruleJsonDocument
	{ $current=$iv_ruleJsonDocument.current; }
	EOF;

// Rule JsonDocument
ruleJsonDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0());
			}
			lv_value_0_0=ruleValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getJsonDocumentRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.Value");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0());
			}
			lv_value_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStringValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleArrayValue
entryRuleArrayValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayValueRule()); }
	iv_ruleArrayValue=ruleArrayValue
	{ $current=$iv_ruleArrayValue.current; }
	EOF;

// Rule ArrayValue
ruleArrayValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArrayValueAccess().getArrayValueAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getArrayValueAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_0_0());
					}
					lv_value_2_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayValueRule());
						}
						add(
							$current,
							"value",
							lv_value_2_0,
							"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getArrayValueAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayValueAccess().getValueValueParserRuleCall_2_1_1_0());
						}
						lv_value_4_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayValueRule());
							}
							add(
								$current,
								"value",
								lv_value_4_0,
								"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayValueAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleNullValue
entryRuleNullValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullValueRule()); }
	iv_ruleNullValue=ruleNullValue
	{ $current=$iv_ruleNullValue.current; }
	EOF;

// Rule NullValue
ruleNullValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0());
			}
			lv_value_0_0=ruleNullEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNullValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.NullEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNumberValue
entryRuleNumberValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberValueRule()); }
	iv_ruleNumberValue=ruleNumberValue
	{ $current=$iv_ruleNumberValue.current; }
	EOF;

// Rule NumberValue
ruleNumberValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0());
			}
			lv_value_0_0=ruleEDouble
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNumberValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EDouble");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleObjectValue
entryRuleObjectValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectValueRule()); }
	iv_ruleObjectValue=ruleObjectValue
	{ $current=$iv_ruleObjectValue.current; }
	EOF;

// Rule ObjectValue
ruleObjectValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getObjectValueAccess().getObjectValueAction_0(),
					$current);
			}
		)
		otherlv_1=LeftCurlyBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getObjectValueAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_0_0());
					}
					lv_keyvaluepair_2_0=ruleKeyValuePair
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getObjectValueRule());
						}
						add(
							$current,
							"keyvaluepair",
							lv_keyvaluepair_2_0,
							"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.KeyValuePair");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getObjectValueAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getObjectValueAccess().getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0());
						}
						lv_keyvaluepair_4_0=ruleKeyValuePair
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getObjectValueRule());
							}
							add(
								$current,
								"keyvaluepair",
								lv_keyvaluepair_4_0,
								"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.KeyValuePair");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightCurlyBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getObjectValueAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current; }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0());
			}
			lv_value_0_0=ruleEBoolean
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getBooleanValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EBoolean");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_E_INT_0=RULE_E_INT
		{
			$current.merge(this_E_INT_0);
		}
		{
			newLeafNode(this_E_INT_0, grammarAccess.getEDoubleAccess().getE_INTTerminalRuleCall_0());
		}
		    |
		this_E_DOUBLE_1=RULE_E_DOUBLE
		{
			$current.merge(this_E_DOUBLE_1);
		}
		{
			newLeafNode(this_E_DOUBLE_1, grammarAccess.getEDoubleAccess().getE_DOUBLETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValuePairRule()); }
	iv_ruleKeyValuePair=ruleKeyValuePair
	{ $current=$iv_ruleKeyValuePair.current; }
	EOF;

// Rule KeyValuePair
ruleKeyValuePair returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0());
				}
				lv_key_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
					}
					set(
						$current,
						"key",
						lv_key_0_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getKeyValuePairAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=True
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw=False
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleConcurrencyCancel_45in_45progressItems
entryRuleConcurrencyCancel_45in_45progressItems returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressItemsRule()); }
	iv_ruleConcurrencyCancel_45in_45progressItems=ruleConcurrencyCancel_45in_45progressItems
	{ $current=$iv_ruleConcurrencyCancel_45in_45progressItems.current; }
	EOF;

// Rule ConcurrencyCancel_45in_45progressItems
ruleConcurrencyCancel_45in_45progressItems returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getConcurrencyCancel_45in_45progressItemsAccess().getItemsJsonDocumentParserRuleCall_0());
			}
			lv_items_0_0=ruleJsonDocument
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getConcurrencyCancel_45in_45progressItemsRule());
				}
				set(
					$current,
					"items",
					lv_items_0_0,
					"githubwf.githubwf.ReusableWorkflowCallJobConcurrencyOneOf1.JsonDocument");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleVALID_STRING
entryRuleVALID_STRING returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVALID_STRINGRule()); }
	iv_ruleVALID_STRING=ruleVALID_STRING
	{ $current=$iv_ruleVALID_STRING.current.getText(); }
	EOF;

// Rule VALID_STRING
ruleVALID_STRING returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getVALID_STRINGAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getVALID_STRINGAccess().getKEYWORDParserRuleCall_1());
		}
		this_KEYWORD_1=ruleKEYWORD
		{
			$current.merge(this_KEYWORD_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleKEYWORD
entryRuleKEYWORD returns [String current=null]:
	{ newCompositeNode(grammarAccess.getKEYWORDRule()); }
	iv_ruleKEYWORD=ruleKEYWORD
	{ $current=$iv_ruleKEYWORD.current.getText(); }
	EOF;

// Rule KEYWORD
ruleKEYWORD returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=CancelInProgress
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getCancelInProgressKeyword_0());
		}
		    |
		kw=Concurrency
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getConcurrencyKeyword_1());
		}
		    |
		kw=Group
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getKEYWORDAccess().getGroupKeyword_2());
		}
	)
;

// Rule NullEnum
ruleNullEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0=Null
		{
			$current = grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration());
		}
	)
;
