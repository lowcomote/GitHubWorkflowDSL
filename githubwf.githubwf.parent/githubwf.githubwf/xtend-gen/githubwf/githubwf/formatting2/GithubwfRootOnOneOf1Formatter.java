/**
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.formatting2;

import com.google.inject.Inject;
import githubwf.Event;
import githubwf.GithubwfRootOnOneOf1;
import githubwf.GithubwfRootOnOneOf1Items;
import githubwf.githubwf.services.GithubwfRootOnOneOf1GrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class GithubwfRootOnOneOf1Formatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private GithubwfRootOnOneOf1GrammarAccess _githubwfRootOnOneOf1GrammarAccess;

  protected void _format(final GithubwfRootOnOneOf1 githubwfRootOnOneOf1, @Extension final IFormattableDocument document) {
    EList<GithubwfRootOnOneOf1Items> _on = githubwfRootOnOneOf1.getOn();
    for (final GithubwfRootOnOneOf1Items githubwfRootOnOneOf1Items : _on) {
      document.<GithubwfRootOnOneOf1Items>format(githubwfRootOnOneOf1Items);
    }
  }

  protected void _format(final GithubwfRootOnOneOf1Items githubwfRootOnOneOf1Items, @Extension final IFormattableDocument document) {
    document.<Event>format(githubwfRootOnOneOf1Items.getItems());
  }

  public void format(final Object githubwfRootOnOneOf1, final IFormattableDocument document) {
    if (githubwfRootOnOneOf1 instanceof XtextResource) {
      _format((XtextResource)githubwfRootOnOneOf1, document);
      return;
    } else if (githubwfRootOnOneOf1 instanceof GithubwfRootOnOneOf1) {
      _format((GithubwfRootOnOneOf1)githubwfRootOnOneOf1, document);
      return;
    } else if (githubwfRootOnOneOf1 instanceof GithubwfRootOnOneOf1Items) {
      _format((GithubwfRootOnOneOf1Items)githubwfRootOnOneOf1, document);
      return;
    } else if (githubwfRootOnOneOf1 instanceof EObject) {
      _format((EObject)githubwfRootOnOneOf1, document);
      return;
    } else if (githubwfRootOnOneOf1 == null) {
      _format((Void)null, document);
      return;
    } else if (githubwfRootOnOneOf1 != null) {
      _format(githubwfRootOnOneOf1, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(githubwfRootOnOneOf1, document).toString());
    }
  }
}
