/**
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.formatting2;

import com.google.inject.Inject;
import githubwf.Configuration;
import githubwf.ConfigurationOneOf3;
import githubwf.ConfigurationOneOf3AdditionalProperties;
import githubwf.ConfigurationOneOf3PropertiesAbstract;
import githubwf.githubwf.services.ConfigurationOneOf3GrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class ConfigurationOneOf3Formatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private ConfigurationOneOf3GrammarAccess _configurationOneOf3GrammarAccess;

  protected void _format(final ConfigurationOneOf3 configurationOneOf3, @Extension final IFormattableDocument document) {
    EList<ConfigurationOneOf3PropertiesAbstract> _configuration = configurationOneOf3.getConfiguration();
    for (final ConfigurationOneOf3PropertiesAbstract configurationOneOf3PropertiesAbstract : _configuration) {
      document.<ConfigurationOneOf3PropertiesAbstract>format(configurationOneOf3PropertiesAbstract);
    }
  }

  protected void _format(final ConfigurationOneOf3AdditionalProperties configurationOneOf3AdditionalProperties, @Extension final IFormattableDocument document) {
    document.<Configuration>format(configurationOneOf3AdditionalProperties.getAdditionalProperties());
  }

  public void format(final Object configurationOneOf3AdditionalProperties, final IFormattableDocument document) {
    if (configurationOneOf3AdditionalProperties instanceof XtextResource) {
      _format((XtextResource)configurationOneOf3AdditionalProperties, document);
      return;
    } else if (configurationOneOf3AdditionalProperties instanceof ConfigurationOneOf3AdditionalProperties) {
      _format((ConfigurationOneOf3AdditionalProperties)configurationOneOf3AdditionalProperties, document);
      return;
    } else if (configurationOneOf3AdditionalProperties instanceof ConfigurationOneOf3) {
      _format((ConfigurationOneOf3)configurationOneOf3AdditionalProperties, document);
      return;
    } else if (configurationOneOf3AdditionalProperties instanceof EObject) {
      _format((EObject)configurationOneOf3AdditionalProperties, document);
      return;
    } else if (configurationOneOf3AdditionalProperties == null) {
      _format((Void)null, document);
      return;
    } else if (configurationOneOf3AdditionalProperties != null) {
      _format(configurationOneOf3AdditionalProperties, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(configurationOneOf3AdditionalProperties, document).toString());
    }
  }
}
