/**
 * generated by Xtext 2.23.0
 */
package githubwf.githubwf.formatting2;

import com.google.inject.Inject;
import githubwf.RefOneOf0AllOf2;
import githubwf.RefOneOf0AllOf2Abstract;
import githubwf.RefOneOf0AllOf2PropertiesAbstract;
import githubwf.RefOneOf0AllOf2TypeObject;
import githubwf.githubwf.services.RefOneOf0AllOf2GrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class RefOneOf0AllOf2Formatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private RefOneOf0AllOf2GrammarAccess _refOneOf0AllOf2GrammarAccess;
  
  protected void _format(final RefOneOf0AllOf2 refOneOf0AllOf2, @Extension final IFormattableDocument document) {
    document.<RefOneOf0AllOf2Abstract>format(refOneOf0AllOf2.getRef());
  }
  
  protected void _format(final RefOneOf0AllOf2TypeObject refOneOf0AllOf2TypeObject, @Extension final IFormattableDocument document) {
    EList<RefOneOf0AllOf2PropertiesAbstract> _ref = refOneOf0AllOf2TypeObject.getRef();
    for (final RefOneOf0AllOf2PropertiesAbstract refOneOf0AllOf2PropertiesAbstract : _ref) {
      document.<RefOneOf0AllOf2PropertiesAbstract>format(refOneOf0AllOf2PropertiesAbstract);
    }
  }
  
  public void format(final Object refOneOf0AllOf2TypeObject, final IFormattableDocument document) {
    if (refOneOf0AllOf2TypeObject instanceof XtextResource) {
      _format((XtextResource)refOneOf0AllOf2TypeObject, document);
      return;
    } else if (refOneOf0AllOf2TypeObject instanceof RefOneOf0AllOf2TypeObject) {
      _format((RefOneOf0AllOf2TypeObject)refOneOf0AllOf2TypeObject, document);
      return;
    } else if (refOneOf0AllOf2TypeObject instanceof RefOneOf0AllOf2) {
      _format((RefOneOf0AllOf2)refOneOf0AllOf2TypeObject, document);
      return;
    } else if (refOneOf0AllOf2TypeObject instanceof EObject) {
      _format((EObject)refOneOf0AllOf2TypeObject, document);
      return;
    } else if (refOneOf0AllOf2TypeObject == null) {
      _format((Void)null, document);
      return;
    } else if (refOneOf0AllOf2TypeObject != null) {
      _format(refOneOf0AllOf2TypeObject, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(refOneOf0AllOf2TypeObject, document).toString());
    }
  }
}
