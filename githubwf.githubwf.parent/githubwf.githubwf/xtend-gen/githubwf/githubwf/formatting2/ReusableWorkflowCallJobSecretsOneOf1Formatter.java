/**
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.formatting2;

import com.google.inject.Inject;
import githubwf.ReusableWorkflowCallJobSecretsOneOf1;
import githubwf.githubwf.services.ReusableWorkflowCallJobSecretsOneOf1GrammarAccess;
import java.util.Arrays;
import jsonMM.JsonDocument;
import jsonMM.Value;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class ReusableWorkflowCallJobSecretsOneOf1Formatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private ReusableWorkflowCallJobSecretsOneOf1GrammarAccess _reusableWorkflowCallJobSecretsOneOf1GrammarAccess;

  protected void _format(final ReusableWorkflowCallJobSecretsOneOf1 reusableWorkflowCallJobSecretsOneOf1, @Extension final IFormattableDocument document) {
    document.<JsonDocument>format(reusableWorkflowCallJobSecretsOneOf1.getSecrets());
  }

  protected void _format(final JsonDocument jsonDocument, @Extension final IFormattableDocument document) {
    document.<Value>format(jsonDocument.getValue());
  }

  public void format(final Object reusableWorkflowCallJobSecretsOneOf1, final IFormattableDocument document) {
    if (reusableWorkflowCallJobSecretsOneOf1 instanceof XtextResource) {
      _format((XtextResource)reusableWorkflowCallJobSecretsOneOf1, document);
      return;
    } else if (reusableWorkflowCallJobSecretsOneOf1 instanceof ReusableWorkflowCallJobSecretsOneOf1) {
      _format((ReusableWorkflowCallJobSecretsOneOf1)reusableWorkflowCallJobSecretsOneOf1, document);
      return;
    } else if (reusableWorkflowCallJobSecretsOneOf1 instanceof JsonDocument) {
      _format((JsonDocument)reusableWorkflowCallJobSecretsOneOf1, document);
      return;
    } else if (reusableWorkflowCallJobSecretsOneOf1 instanceof EObject) {
      _format((EObject)reusableWorkflowCallJobSecretsOneOf1, document);
      return;
    } else if (reusableWorkflowCallJobSecretsOneOf1 == null) {
      _format((Void)null, document);
      return;
    } else if (reusableWorkflowCallJobSecretsOneOf1 != null) {
      _format(reusableWorkflowCallJobSecretsOneOf1, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(reusableWorkflowCallJobSecretsOneOf1, document).toString());
    }
  }
}
