// automatically generated by Xtext JSON Grammar
grammar githubwf.githubwf.EnvOneOf0 with org.eclipse.xtext.common.Terminals

import "http://jku.bise.at/githubwf" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://at.jku.bise/jsonMM" as jsonMM

//EClass EnvOneOf0
EnvOneOf0 returns EnvOneOf0:
	{EnvOneOf0}
			//EReference is not a keyword
			'{'(env+=EnvOneOf0PropertiesAbstract ( "," env+=EnvOneOf0PropertiesAbstract)* )?'}'
	;

EnvOneOf0PropertiesAbstract returns EnvOneOf0PropertiesAbstract:
	=>EnvOneOf0AdditionalProperties;

EnvOneOf0AdditionalPropertiesAbstract returns EnvOneOf0AdditionalPropertiesAbstract:
	=>EnvOneOf0AdditionalPropertiesTypeNumber | EnvOneOf0AdditionalPropertiesTypeString | EnvOneOf0AdditionalPropertiesTypeInteger | EnvOneOf0AdditionalPropertiesTypeBoolean | EnvOneOf0AdditionalPropertiesTypeObject | EnvOneOf0AdditionalPropertiesTypeArray | EnvOneOf0AdditionalPropertiesTypeNull;

EnvOneOf0AdditionalPropertiesPropertiesAbstract returns EnvOneOf0AdditionalPropertiesPropertiesAbstract:
	=>EnvOneOf0AdditionalPropertiesAdditionalProperties;




Value returns jsonMM::Value:
	StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;


//EClass EnvOneOf0AdditionalProperties
EnvOneOf0AdditionalProperties returns EnvOneOf0AdditionalProperties:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			additionalProperties=EnvOneOf0AdditionalPropertiesAbstract
	;

EString returns ecore::EString:
	VALID_STRING;

//EClass EnvOneOf0AdditionalPropertiesTypeString
EnvOneOf0AdditionalPropertiesTypeString returns EnvOneOf0AdditionalPropertiesTypeString:
			additionalProperties=EString
	;

//EClass EnvOneOf0AdditionalPropertiesTypeInteger
EnvOneOf0AdditionalPropertiesTypeInteger returns EnvOneOf0AdditionalPropertiesTypeInteger:
			additionalProperties=EDoubleObject
	;

//EClass EnvOneOf0AdditionalPropertiesTypeNumber
EnvOneOf0AdditionalPropertiesTypeNumber returns EnvOneOf0AdditionalPropertiesTypeNumber:
			additionalProperties=EDoubleObject
	;

//EClass EnvOneOf0AdditionalPropertiesTypeBoolean
EnvOneOf0AdditionalPropertiesTypeBoolean returns EnvOneOf0AdditionalPropertiesTypeBoolean:
			additionalProperties=EBooleanObject
	;

//EClass EnvOneOf0AdditionalPropertiesTypeObject
EnvOneOf0AdditionalPropertiesTypeObject returns EnvOneOf0AdditionalPropertiesTypeObject:
	{EnvOneOf0AdditionalPropertiesTypeObject}
			//EReference is not a keyword
			'{'(additionalProperties+=EnvOneOf0AdditionalPropertiesPropertiesAbstract ( "," additionalProperties+=EnvOneOf0AdditionalPropertiesPropertiesAbstract)* )?'}'
	;

//EClass EnvOneOf0AdditionalPropertiesTypeArray
EnvOneOf0AdditionalPropertiesTypeArray returns EnvOneOf0AdditionalPropertiesTypeArray:
	{EnvOneOf0AdditionalPropertiesTypeArray}
			//EReference is not a keyword
			'['(additionalProperties+=EnvOneOf0AdditionalPropertiesItems ( "," additionalProperties+=EnvOneOf0AdditionalPropertiesItems)* )?']'
	;

//EClass EnvOneOf0AdditionalPropertiesTypeNull
EnvOneOf0AdditionalPropertiesTypeNull returns EnvOneOf0AdditionalPropertiesTypeNull:
			//EReference is not a keyword
			additionalProperties=NullValue
	;

EDoubleObject returns ecore::EDoubleObject:
	E_INT | E_DOUBLE;

EBooleanObject returns ecore::EBooleanObject:
	'true' | 'false';

//EClass EnvOneOf0AdditionalPropertiesAdditionalProperties
EnvOneOf0AdditionalPropertiesAdditionalProperties returns EnvOneOf0AdditionalPropertiesAdditionalProperties:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			additionalProperties=JsonDocument
	;

//EClass JsonDocument
JsonDocument returns jsonMM::JsonDocument:
			//EReference is not a keyword
			value=Value
	;

//EClass StringValue
StringValue returns jsonMM::StringValue:
			value=EString
	;

//EClass ArrayValue
ArrayValue returns jsonMM::ArrayValue:
	{jsonMM::ArrayValue}
			//EReference is not a keyword
			'['(value+=Value ( "," value+=Value)* )?']'
	;

//EClass NullValue
NullValue returns jsonMM::NullValue:
			value=NullEnum
	;

//EClass NumberValue
NumberValue returns jsonMM::NumberValue:
			value=EDouble
	;

//EClass ObjectValue
ObjectValue returns jsonMM::ObjectValue:
	{jsonMM::ObjectValue}
	'{'
			//EReference is not a keyword
			(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	'}';

//EClass BooleanValue
BooleanValue returns jsonMM::BooleanValue:
			value=EBoolean
	;

enum NullEnum returns jsonMM::NullEnum:
				null = 'null';

EDouble returns ecore::EDouble:
	E_INT | E_DOUBLE;

//EClass KeyValuePair
KeyValuePair returns jsonMM::KeyValuePair:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			value=Value
	;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

//EClass EnvOneOf0AdditionalPropertiesItems
EnvOneOf0AdditionalPropertiesItems returns EnvOneOf0AdditionalPropertiesItems:
			//EReference is not a keyword
			items=JsonDocument
	;

/**
 * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
 */
@Override 
terminal INT returns ecore::EInt: 
	('0' |  (('1'..'9') ('0'..'9')*))
;

VALID_STRING: STRING  ;


/**
 * In JSON the single quote for String is not admitted
 */
@Override 
terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;	


terminal E_INT :
	'-'? INT;



terminal E_DOUBLE :
	'-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
;


