// automatically generated by Xtext JSON Grammar
grammar githubwf.githubwf.ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0 with org.eclipse.xtext.common.Terminals

import "http://jku.bise.at/githubwf" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://at.jku.bise/jsonMM" as jsonMM

//EClass ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0
ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0 returns ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0:
			//EReference is not a keyword
			'['additionalProperties+=ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0Items ( "," additionalProperties+=ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0Items)* ']'
	;



ConfigurationAbstract returns ConfigurationAbstract:
	=>ConfigurationTypeNumber | ConfigurationTypeString | ConfigurationTypeInteger | ConfigurationTypeBoolean | ConfigurationTypeObject | ConfigurationTypeArray | ConfigurationTypeNull;

ConfigurationPropertiesAbstract returns ConfigurationPropertiesAbstract:
	=>ConfigurationAdditionalProperties;




Value returns jsonMM::Value:
	StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;


//EClass ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0Items
ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0Items returns ReusableWorkflowCallJobStrategyMatrixAdditionalPropertiesOneOf0Items:
			//EReference is not a keyword
			items=Configuration
	;

//EClass Configuration
Configuration returns Configuration:
			//EReference is not a keyword
			configuration=ConfigurationAbstract
	;

//EClass ConfigurationTypeString
ConfigurationTypeString returns ConfigurationTypeString:
			configuration=EString
	;

//EClass ConfigurationTypeInteger
ConfigurationTypeInteger returns ConfigurationTypeInteger:
			configuration=EDoubleObject
	;

//EClass ConfigurationTypeNumber
ConfigurationTypeNumber returns ConfigurationTypeNumber:
			configuration=EDoubleObject
	;

//EClass ConfigurationTypeBoolean
ConfigurationTypeBoolean returns ConfigurationTypeBoolean:
			configuration=EBooleanObject
	;

//EClass ConfigurationTypeObject
ConfigurationTypeObject returns ConfigurationTypeObject:
	{ConfigurationTypeObject}
			//EReference is not a keyword
			'{'(configuration+=ConfigurationPropertiesAbstract ( "," configuration+=ConfigurationPropertiesAbstract)* )?'}'
	;

//EClass ConfigurationTypeArray
ConfigurationTypeArray returns ConfigurationTypeArray:
	{ConfigurationTypeArray}
			//EReference is not a keyword
			'['(configuration+=ConfigurationItems ( "," configuration+=ConfigurationItems)* )?']'
	;

//EClass ConfigurationTypeNull
ConfigurationTypeNull returns ConfigurationTypeNull:
			//EReference is not a keyword
			configuration=NullValue
	;

EString returns ecore::EString:
	VALID_STRING;

EDoubleObject returns ecore::EDoubleObject:
	E_INT | E_DOUBLE;

EBooleanObject returns ecore::EBooleanObject:
	'true' | 'false';

//EClass ConfigurationAdditionalProperties
ConfigurationAdditionalProperties returns ConfigurationAdditionalProperties:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			additionalProperties=JsonDocument
	;

//EClass JsonDocument
JsonDocument returns jsonMM::JsonDocument:
			//EReference is not a keyword
			value=Value
	;

//EClass StringValue
StringValue returns jsonMM::StringValue:
			value=EString
	;

//EClass ArrayValue
ArrayValue returns jsonMM::ArrayValue:
	{jsonMM::ArrayValue}
			//EReference is not a keyword
			'['(value+=Value ( "," value+=Value)* )?']'
	;

//EClass NullValue
NullValue returns jsonMM::NullValue:
			value=NullEnum
	;

//EClass NumberValue
NumberValue returns jsonMM::NumberValue:
			value=EDouble
	;

//EClass ObjectValue
ObjectValue returns jsonMM::ObjectValue:
	{jsonMM::ObjectValue}
	'{'
			//EReference is not a keyword
			(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	'}';

//EClass BooleanValue
BooleanValue returns jsonMM::BooleanValue:
			value=EBoolean
	;

enum NullEnum returns jsonMM::NullEnum:
				null = 'null';

EDouble returns ecore::EDouble:
	E_INT | E_DOUBLE;

//EClass KeyValuePair
KeyValuePair returns jsonMM::KeyValuePair:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			value=Value
	;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

//EClass ConfigurationItems
ConfigurationItems returns ConfigurationItems:
			//EReference is not a keyword
			items=JsonDocument
	;

/**
 * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
 */
@Override 
terminal INT returns ecore::EInt: 
	('0' |  (('1'..'9') ('0'..'9')*))
;

VALID_STRING: STRING  ;


/**
 * In JSON the single quote for String is not admitted
 */
@Override 
terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;	


terminal E_INT :
	'-'? INT;



terminal E_DOUBLE :
	'-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
;


