// automatically generated by Xtext JSON Grammar
grammar githubwf.githubwf.NormalJobContainerOneOf1 with org.eclipse.xtext.common.Terminals

import "http://jku.bise.at/githubwf" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://at.jku.bise/jsonMM" as jsonMM

//EClass NormalJobContainerOneOf1
NormalJobContainerOneOf1 returns NormalJobContainerOneOf1:
			//Keywords
			'"container"' ':'
			container=Container
	;


ContainerPropertiesAbstract returns ContainerPropertiesAbstract:
	ContainerImage | ContainerCredentials | ContainerEnv | ContainerPorts | ContainerVolumes | ContainerOptions;

ContainerCredentialsPropertiesAbstract returns ContainerCredentialsPropertiesAbstract:
	ContainerCredentialsUsername | ContainerCredentialsPassword | =>ContainerCredentialsAdditionalProperties;





Value returns jsonMM::Value:
	StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;


EnvAbstract returns EnvAbstract:
	=>EnvTypeNumber | EnvTypeString | EnvTypeInteger | EnvTypeBoolean | EnvTypeObject | EnvTypeArray | EnvTypeNull;

EnvPropertiesAbstract returns EnvPropertiesAbstract:
	=>EnvAdditionalProperties;



ContainerPortsItemsAbstract returns ContainerPortsItemsAbstract:
	=>ContainerPortsItemsTypeNumber | ContainerPortsItemsTypeString | ContainerPortsItemsTypeInteger | ContainerPortsItemsTypeBoolean | ContainerPortsItemsTypeObject | ContainerPortsItemsTypeArray | ContainerPortsItemsTypeNull;

ContainerPortsItemsPropertiesAbstract returns ContainerPortsItemsPropertiesAbstract:
	=>ContainerPortsItemsAdditionalProperties;


//EClass Container
Container returns Container:
	{Container}
			//EReference is not a keyword
			'{'(container+=ContainerPropertiesAbstract ( "," container+=ContainerPropertiesAbstract)* )?'}'
	;

//EClass ContainerImage
ContainerImage returns ContainerImage:
			//Keywords
			'"image"' ':'
			image=EString
	;

//EClass ContainerCredentials
ContainerCredentials returns ContainerCredentials:
	{ContainerCredentials}
			//Keywords
			'"credentials"' ':'
			'{'(credentials+=ContainerCredentialsPropertiesAbstract ( "," credentials+=ContainerCredentialsPropertiesAbstract)* )?'}'
	;

//EClass ContainerEnv
ContainerEnv returns ContainerEnv:
			//Keywords
			'"env"' ':'
			env=Env
	;

//EClass ContainerPorts
ContainerPorts returns ContainerPorts:
			//Keywords
			'"ports"' ':'
			'['ports+=ContainerPortsItems ( "," ports+=ContainerPortsItems)* ']'
	;

//EClass ContainerVolumes
ContainerVolumes returns ContainerVolumes:
			//Keywords
			'"volumes"' ':'
			'['volumes+=ContainerVolumesItems ( "," volumes+=ContainerVolumesItems)* ']'
	;

//EClass ContainerOptions
ContainerOptions returns ContainerOptions:
			//Keywords
			'"options"' ':'
			options=EString
	;

EString returns ecore::EString:
	VALID_STRING;

//EClass ContainerCredentialsUsername
ContainerCredentialsUsername returns ContainerCredentialsUsername:
			//Keywords
			'"username"' ':'
			username=EString
	;

//EClass ContainerCredentialsPassword
ContainerCredentialsPassword returns ContainerCredentialsPassword:
			//Keywords
			'"password"' ':'
			password=EString
	;

//EClass ContainerCredentialsAdditionalProperties
ContainerCredentialsAdditionalProperties returns ContainerCredentialsAdditionalProperties:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			additionalProperties=JsonDocument
	;

//EClass JsonDocument
JsonDocument returns jsonMM::JsonDocument:
			//EReference is not a keyword
			value=Value
	;

//EClass StringValue
StringValue returns jsonMM::StringValue:
			value=EString
	;

//EClass ArrayValue
ArrayValue returns jsonMM::ArrayValue:
	{jsonMM::ArrayValue}
			//EReference is not a keyword
			'['(value+=Value ( "," value+=Value)* )?']'
	;

//EClass NullValue
NullValue returns jsonMM::NullValue:
			value=NullEnum
	;

//EClass NumberValue
NumberValue returns jsonMM::NumberValue:
			value=EDouble
	;

//EClass ObjectValue
ObjectValue returns jsonMM::ObjectValue:
	{jsonMM::ObjectValue}
	'{'
			//EReference is not a keyword
			(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	'}';

//EClass BooleanValue
BooleanValue returns jsonMM::BooleanValue:
			value=EBoolean
	;

enum NullEnum returns jsonMM::NullEnum:
				null = 'null';

EDouble returns ecore::EDouble:
	E_INT | E_DOUBLE;

//EClass KeyValuePair
KeyValuePair returns jsonMM::KeyValuePair:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			value=Value
	;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

//EClass Env
Env returns Env:
			//EReference is not a keyword
			env=EnvAbstract
	;

//EClass EnvTypeString
EnvTypeString returns EnvTypeString:
			env=EString
	;

//EClass EnvTypeInteger
EnvTypeInteger returns EnvTypeInteger:
			env=EDoubleObject
	;

//EClass EnvTypeNumber
EnvTypeNumber returns EnvTypeNumber:
			env=EDoubleObject
	;

//EClass EnvTypeBoolean
EnvTypeBoolean returns EnvTypeBoolean:
			env=EBooleanObject
	;

//EClass EnvTypeObject
EnvTypeObject returns EnvTypeObject:
	{EnvTypeObject}
			//EReference is not a keyword
			'{'(env+=EnvPropertiesAbstract ( "," env+=EnvPropertiesAbstract)* )?'}'
	;

//EClass EnvTypeArray
EnvTypeArray returns EnvTypeArray:
	{EnvTypeArray}
			//EReference is not a keyword
			'['(env+=EnvItems ( "," env+=EnvItems)* )?']'
	;

//EClass EnvTypeNull
EnvTypeNull returns EnvTypeNull:
			//EReference is not a keyword
			env=NullValue
	;

EDoubleObject returns ecore::EDoubleObject:
	E_INT | E_DOUBLE;

EBooleanObject returns ecore::EBooleanObject:
	'true' | 'false';

//EClass EnvAdditionalProperties
EnvAdditionalProperties returns EnvAdditionalProperties:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			additionalProperties=JsonDocument
	;

//EClass EnvItems
EnvItems returns EnvItems:
			//EReference is not a keyword
			items=JsonDocument
	;

//EClass ContainerPortsItems
ContainerPortsItems returns ContainerPortsItems:
			//EReference is not a keyword
			items=ContainerPortsItemsAbstract
	;

//EClass ContainerPortsItemsTypeString
ContainerPortsItemsTypeString returns ContainerPortsItemsTypeString:
			items=EString
	;

//EClass ContainerPortsItemsTypeInteger
ContainerPortsItemsTypeInteger returns ContainerPortsItemsTypeInteger:
			items=EDoubleObject
	;

//EClass ContainerPortsItemsTypeNumber
ContainerPortsItemsTypeNumber returns ContainerPortsItemsTypeNumber:
			items=EDoubleObject
	;

//EClass ContainerPortsItemsTypeBoolean
ContainerPortsItemsTypeBoolean returns ContainerPortsItemsTypeBoolean:
			items=EBooleanObject
	;

//EClass ContainerPortsItemsTypeObject
ContainerPortsItemsTypeObject returns ContainerPortsItemsTypeObject:
	{ContainerPortsItemsTypeObject}
			//EReference is not a keyword
			'{'(items+=ContainerPortsItemsPropertiesAbstract ( "," items+=ContainerPortsItemsPropertiesAbstract)* )?'}'
	;

//EClass ContainerPortsItemsTypeArray
ContainerPortsItemsTypeArray returns ContainerPortsItemsTypeArray:
	{ContainerPortsItemsTypeArray}
			//EReference is not a keyword
			'['(items+=ContainerPortsItemsItems ( "," items+=ContainerPortsItemsItems)* )?']'
	;

//EClass ContainerPortsItemsTypeNull
ContainerPortsItemsTypeNull returns ContainerPortsItemsTypeNull:
			//EReference is not a keyword
			items=NullValue
	;

//EClass ContainerPortsItemsAdditionalProperties
ContainerPortsItemsAdditionalProperties returns ContainerPortsItemsAdditionalProperties:
			//KeyValue
			key=EString
			':'
			//EReference is not a keyword
			additionalProperties=JsonDocument
	;

//EClass ContainerPortsItemsItems
ContainerPortsItemsItems returns ContainerPortsItemsItems:
			//EReference is not a keyword
			items=JsonDocument
	;

//EClass ContainerVolumesItems
ContainerVolumesItems returns ContainerVolumesItems:
			items=EString
	;

/**
 * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
 */
@Override 
terminal INT returns ecore::EInt: 
	('0' |  (('1'..'9') ('0'..'9')*))
;

VALID_STRING: STRING  | KEYWORD ;


/**
 * In JSON the single quote for String is not admitted
 */
@Override 
terminal STRING:
	'"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
;	


terminal E_INT :
	'-'? INT;


KEYWORD:  
'"container"'  | 
'"image"'  | 
'"password"'  | 
'"credentials"'  | 
'"volumes"'  | 
'"options"'  | 
'"env"'  | 
'"ports"'  | 
'"username"' 
;


terminal E_DOUBLE :
	'-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
;


