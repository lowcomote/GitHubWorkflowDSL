/*
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.parser.antlr;

import com.google.inject.Inject;
import githubwf.githubwf.parser.antlr.internal.InternalGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenParser;
import githubwf.githubwf.services.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenGrammarAccess;
import org.eclipse.xtext.parser.antlr.AbstractAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;

public class GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenParser extends AbstractAntlrParser {

	@Inject
	private GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenGrammarAccess grammarAccess;

	@Override
	protected void setInitialHiddenTokens(XtextTokenStream tokenStream) {
		tokenStream.setInitialHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT");
	}
	

	@Override
	protected InternalGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenParser createParser(XtextTokenStream stream) {
		return new InternalGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenParser(stream, getGrammarAccess());
	}

	@Override 
	protected String getDefaultRuleName() {
		return "GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Then";
	}

	public GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ThenGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
