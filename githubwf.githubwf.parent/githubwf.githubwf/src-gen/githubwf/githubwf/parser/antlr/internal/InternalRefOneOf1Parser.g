/*
 * generated by Xtext 2.23.0
 */
parser grammar InternalRefOneOf1Parser;

options {
	tokenVocab=InternalRefOneOf1Lexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package githubwf.githubwf.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import githubwf.githubwf.services.RefOneOf1GrammarAccess;

}

@members {

 	private RefOneOf1GrammarAccess grammarAccess;

    public InternalRefOneOf1Parser(TokenStream input, RefOneOf1GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RefOneOf1";
   	}

   	@Override
   	protected RefOneOf1GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRefOneOf1
entryRuleRefOneOf1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefOneOf1Rule()); }
	iv_ruleRefOneOf1=ruleRefOneOf1
	{ $current=$iv_ruleRefOneOf1.current; }
	EOF;

// Rule RefOneOf1
ruleRefOneOf1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRefOneOf1Access().getRefNullValueParserRuleCall_0());
			}
			lv_ref_0_0=ruleNullValue
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRefOneOf1Rule());
				}
				set(
					$current,
					"ref",
					lv_ref_0_0,
					"githubwf.githubwf.RefOneOf1.NullValue");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNullValue
entryRuleNullValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNullValueRule()); }
	iv_ruleNullValue=ruleNullValue
	{ $current=$iv_ruleNullValue.current; }
	EOF;

// Rule NullValue
ruleNullValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0());
			}
			lv_value_0_0=ruleNullEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNullValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"githubwf.githubwf.RefOneOf1.NullEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Rule NullEnum
ruleNullEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0=Null
		{
			$current = grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getNullEnumAccess().getNullEnumLiteralDeclaration());
		}
	)
;
