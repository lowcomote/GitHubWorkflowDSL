/*
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PermissionsOneOf1GrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class PermissionsOneOf1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.PermissionsOneOf1");
		private final Assignment cPermissionsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPermissionsPermissions_45eventParserRuleCall_0 = (RuleCall)cPermissionsAssignment.eContents().get(0);
		
		////EClass PermissionsOneOf1
		//PermissionsOneOf1 returns PermissionsOneOf1:
		//            //EReference is not a keyword
		//            permissions=Permissions_45event
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//permissions=Permissions_45event
		public Assignment getPermissionsAssignment() { return cPermissionsAssignment; }
		
		//Permissions_45event
		public RuleCall getPermissionsPermissions_45eventParserRuleCall_0() { return cPermissionsPermissions_45eventParserRuleCall_0; }
	}
	public class Permissions_45eventPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPermissions_45eventActionsParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPermissions_45eventChecksParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPermissions_45eventContentsParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPermissions_45eventDeploymentsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cPermissions_45eventDiscussionsParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cPermissions_45eventId_45tokenParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cPermissions_45eventIssuesParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cPermissions_45eventPackagesParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cPermissions_45eventPagesParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPermissions_45eventPull_45requestsParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cPermissions_45eventRepository_45projectsParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cPermissions_45eventSecurity_45eventsParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cPermissions_45eventStatusesParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//Permissions_45eventPropertiesAbstract returns Permissions_45eventPropertiesAbstract:
		//    Permissions_45eventActions | Permissions_45eventChecks | Permissions_45eventContents | Permissions_45eventDeployments | Permissions_45eventDiscussions | Permissions_45eventId_45token | Permissions_45eventIssues | Permissions_45eventPackages | Permissions_45eventPages | Permissions_45eventPull_45requests | Permissions_45eventRepository_45projects | Permissions_45eventSecurity_45events | Permissions_45eventStatuses;
		@Override public ParserRule getRule() { return rule; }
		
		//Permissions_45eventActions | Permissions_45eventChecks | Permissions_45eventContents | Permissions_45eventDeployments | Permissions_45eventDiscussions | Permissions_45eventId_45token | Permissions_45eventIssues | Permissions_45eventPackages | Permissions_45eventPages | Permissions_45eventPull_45requests | Permissions_45eventRepository_45projects | Permissions_45eventSecurity_45events | Permissions_45eventStatuses
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Permissions_45eventActions
		public RuleCall getPermissions_45eventActionsParserRuleCall_0() { return cPermissions_45eventActionsParserRuleCall_0; }
		
		//Permissions_45eventChecks
		public RuleCall getPermissions_45eventChecksParserRuleCall_1() { return cPermissions_45eventChecksParserRuleCall_1; }
		
		//Permissions_45eventContents
		public RuleCall getPermissions_45eventContentsParserRuleCall_2() { return cPermissions_45eventContentsParserRuleCall_2; }
		
		//Permissions_45eventDeployments
		public RuleCall getPermissions_45eventDeploymentsParserRuleCall_3() { return cPermissions_45eventDeploymentsParserRuleCall_3; }
		
		//Permissions_45eventDiscussions
		public RuleCall getPermissions_45eventDiscussionsParserRuleCall_4() { return cPermissions_45eventDiscussionsParserRuleCall_4; }
		
		//Permissions_45eventId_45token
		public RuleCall getPermissions_45eventId_45tokenParserRuleCall_5() { return cPermissions_45eventId_45tokenParserRuleCall_5; }
		
		//Permissions_45eventIssues
		public RuleCall getPermissions_45eventIssuesParserRuleCall_6() { return cPermissions_45eventIssuesParserRuleCall_6; }
		
		//Permissions_45eventPackages
		public RuleCall getPermissions_45eventPackagesParserRuleCall_7() { return cPermissions_45eventPackagesParserRuleCall_7; }
		
		//Permissions_45eventPages
		public RuleCall getPermissions_45eventPagesParserRuleCall_8() { return cPermissions_45eventPagesParserRuleCall_8; }
		
		//Permissions_45eventPull_45requests
		public RuleCall getPermissions_45eventPull_45requestsParserRuleCall_9() { return cPermissions_45eventPull_45requestsParserRuleCall_9; }
		
		//Permissions_45eventRepository_45projects
		public RuleCall getPermissions_45eventRepository_45projectsParserRuleCall_10() { return cPermissions_45eventRepository_45projectsParserRuleCall_10; }
		
		//Permissions_45eventSecurity_45events
		public RuleCall getPermissions_45eventSecurity_45eventsParserRuleCall_11() { return cPermissions_45eventSecurity_45eventsParserRuleCall_11; }
		
		//Permissions_45eventStatuses
		public RuleCall getPermissions_45eventStatusesParserRuleCall_12() { return cPermissions_45eventStatusesParserRuleCall_12; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArrayValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNullValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNumberValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBooleanValueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Value returns jsonMM::Value:
		//    StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
		@Override public ParserRule getRule() { return rule; }
		
		//StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_0() { return cStringValueParserRuleCall_0; }
		
		//ArrayValue
		public RuleCall getArrayValueParserRuleCall_1() { return cArrayValueParserRuleCall_1; }
		
		//NullValue
		public RuleCall getNullValueParserRuleCall_2() { return cNullValueParserRuleCall_2; }
		
		//NumberValue
		public RuleCall getNumberValueParserRuleCall_3() { return cNumberValueParserRuleCall_3; }
		
		//ObjectValue
		public RuleCall getObjectValueParserRuleCall_4() { return cObjectValueParserRuleCall_4; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_5() { return cBooleanValueParserRuleCall_5; }
	}
	public class Permissions_45eventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPermissions_45eventAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cPermissions_45eventAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cPermissions_45eventPermissions_45eventPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cPermissions_45eventAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cPermissions_45eventAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cPermissions_45eventPermissions_45eventPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cPermissions_45eventAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Permissions_45event
		//Permissions_45event returns Permissions_45event:
		//    {Permissions_45event}
		//            //EReference is not a keyword
		//            '{'(permissions_45event+=Permissions_45eventPropertiesAbstract ( "," permissions_45event+=Permissions_45eventPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Permissions_45event}
		//        //EReference is not a keyword
		//        '{'(permissions_45event+=Permissions_45eventPropertiesAbstract ( "," permissions_45event+=Permissions_45eventPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Permissions_45event}
		public Action getPermissions_45eventAction_0() { return cPermissions_45eventAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(permissions_45event+=Permissions_45eventPropertiesAbstract ( "," permissions_45event+=Permissions_45eventPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//permissions_45event+=Permissions_45eventPropertiesAbstract
		public Assignment getPermissions_45eventAssignment_2_0() { return cPermissions_45eventAssignment_2_0; }
		
		//Permissions_45eventPropertiesAbstract
		public RuleCall getPermissions_45eventPermissions_45eventPropertiesAbstractParserRuleCall_2_0_0() { return cPermissions_45eventPermissions_45eventPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," permissions_45event+=Permissions_45eventPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//permissions_45event+=Permissions_45eventPropertiesAbstract
		public Assignment getPermissions_45eventAssignment_2_1_1() { return cPermissions_45eventAssignment_2_1_1; }
		
		//Permissions_45eventPropertiesAbstract
		public RuleCall getPermissions_45eventPermissions_45eventPropertiesAbstractParserRuleCall_2_1_1_0() { return cPermissions_45eventPermissions_45eventPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class Permissions_45eventActionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventActions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cActionsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cActionsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventActions
		//Permissions_45eventActions returns Permissions_45eventActions:
		//            //Keywords
		//            '"actions"' ':'
		//            actions=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"actions"' ':'
		//actions=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"actions"'
		public Keyword getActionsKeyword_0() { return cActionsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//actions=Permissions_45level
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getActionsPermissions_45levelParserRuleCall_2_0() { return cActionsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventChecksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventChecks");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChecksKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cChecksAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cChecksPermissions_45levelParserRuleCall_2_0 = (RuleCall)cChecksAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventChecks
		//Permissions_45eventChecks returns Permissions_45eventChecks:
		//            //Keywords
		//            '"checks"' ':'
		//            checks=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"checks"' ':'
		//checks=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"checks"'
		public Keyword getChecksKeyword_0() { return cChecksKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//checks=Permissions_45level
		public Assignment getChecksAssignment_2() { return cChecksAssignment_2; }
		
		//Permissions_45level
		public RuleCall getChecksPermissions_45levelParserRuleCall_2_0() { return cChecksPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventContentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventContents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContentsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContentsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cContentsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventContents
		//Permissions_45eventContents returns Permissions_45eventContents:
		//            //Keywords
		//            '"contents"' ':'
		//            contents=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"contents"' ':'
		//contents=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"contents"'
		public Keyword getContentsKeyword_0() { return cContentsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//contents=Permissions_45level
		public Assignment getContentsAssignment_2() { return cContentsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getContentsPermissions_45levelParserRuleCall_2_0() { return cContentsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventDeploymentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventDeployments");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeploymentsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDeploymentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDeploymentsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cDeploymentsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventDeployments
		//Permissions_45eventDeployments returns Permissions_45eventDeployments:
		//            //Keywords
		//            '"deployments"' ':'
		//            deployments=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"deployments"' ':'
		//deployments=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"deployments"'
		public Keyword getDeploymentsKeyword_0() { return cDeploymentsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//deployments=Permissions_45level
		public Assignment getDeploymentsAssignment_2() { return cDeploymentsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getDeploymentsPermissions_45levelParserRuleCall_2_0() { return cDeploymentsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventDiscussionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventDiscussions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiscussionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDiscussionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDiscussionsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cDiscussionsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventDiscussions
		//Permissions_45eventDiscussions returns Permissions_45eventDiscussions:
		//            //Keywords
		//            '"discussions"' ':'
		//            discussions=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"discussions"' ':'
		//discussions=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"discussions"'
		public Keyword getDiscussionsKeyword_0() { return cDiscussionsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//discussions=Permissions_45level
		public Assignment getDiscussionsAssignment_2() { return cDiscussionsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getDiscussionsPermissions_45levelParserRuleCall_2_0() { return cDiscussionsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventId_45tokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventId_45token");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdTokenKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cId_45tokenAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cId_45tokenPermissions_45levelParserRuleCall_2_0 = (RuleCall)cId_45tokenAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventId_45token
		//Permissions_45eventId_45token returns Permissions_45eventId_45token:
		//            //Keywords
		//            '"id-token"' ':'
		//            id_45token=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"id-token"' ':'
		//id_45token=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"id-token"'
		public Keyword getIdTokenKeyword_0() { return cIdTokenKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//id_45token=Permissions_45level
		public Assignment getId_45tokenAssignment_2() { return cId_45tokenAssignment_2; }
		
		//Permissions_45level
		public RuleCall getId_45tokenPermissions_45levelParserRuleCall_2_0() { return cId_45tokenPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventIssuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventIssues");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIssuesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIssuesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIssuesPermissions_45levelParserRuleCall_2_0 = (RuleCall)cIssuesAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventIssues
		//Permissions_45eventIssues returns Permissions_45eventIssues:
		//            //Keywords
		//            '"issues"' ':'
		//            issues=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"issues"' ':'
		//issues=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"issues"'
		public Keyword getIssuesKeyword_0() { return cIssuesKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//issues=Permissions_45level
		public Assignment getIssuesAssignment_2() { return cIssuesAssignment_2; }
		
		//Permissions_45level
		public RuleCall getIssuesPermissions_45levelParserRuleCall_2_0() { return cIssuesPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventPackagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventPackages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackagesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPackagesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPackagesPermissions_45levelParserRuleCall_2_0 = (RuleCall)cPackagesAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventPackages
		//Permissions_45eventPackages returns Permissions_45eventPackages:
		//            //Keywords
		//            '"packages"' ':'
		//            packages=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"packages"' ':'
		//packages=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"packages"'
		public Keyword getPackagesKeyword_0() { return cPackagesKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//packages=Permissions_45level
		public Assignment getPackagesAssignment_2() { return cPackagesAssignment_2; }
		
		//Permissions_45level
		public RuleCall getPackagesPermissions_45levelParserRuleCall_2_0() { return cPackagesPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventPagesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventPages");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPagesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPagesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPagesPermissions_45levelParserRuleCall_2_0 = (RuleCall)cPagesAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventPages
		//Permissions_45eventPages returns Permissions_45eventPages:
		//            //Keywords
		//            '"pages"' ':'
		//            pages=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"pages"' ':'
		//pages=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"pages"'
		public Keyword getPagesKeyword_0() { return cPagesKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//pages=Permissions_45level
		public Assignment getPagesAssignment_2() { return cPagesAssignment_2; }
		
		//Permissions_45level
		public RuleCall getPagesPermissions_45levelParserRuleCall_2_0() { return cPagesPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventPull_45requestsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventPull_45requests");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPullRequestsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPull_45requestsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPull_45requestsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cPull_45requestsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventPull_45requests
		//Permissions_45eventPull_45requests returns Permissions_45eventPull_45requests:
		//            //Keywords
		//            '"pull-requests"' ':'
		//            pull_45requests=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"pull-requests"' ':'
		//pull_45requests=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"pull-requests"'
		public Keyword getPullRequestsKeyword_0() { return cPullRequestsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//pull_45requests=Permissions_45level
		public Assignment getPull_45requestsAssignment_2() { return cPull_45requestsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getPull_45requestsPermissions_45levelParserRuleCall_2_0() { return cPull_45requestsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventRepository_45projectsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventRepository_45projects");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRepositoryProjectsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRepository_45projectsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRepository_45projectsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cRepository_45projectsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventRepository_45projects
		//Permissions_45eventRepository_45projects returns Permissions_45eventRepository_45projects:
		//            //Keywords
		//            '"repository-projects"' ':'
		//            repository_45projects=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"repository-projects"' ':'
		//repository_45projects=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"repository-projects"'
		public Keyword getRepositoryProjectsKeyword_0() { return cRepositoryProjectsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//repository_45projects=Permissions_45level
		public Assignment getRepository_45projectsAssignment_2() { return cRepository_45projectsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getRepository_45projectsPermissions_45levelParserRuleCall_2_0() { return cRepository_45projectsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventSecurity_45eventsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventSecurity_45events");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSecurityEventsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSecurity_45eventsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSecurity_45eventsPermissions_45levelParserRuleCall_2_0 = (RuleCall)cSecurity_45eventsAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventSecurity_45events
		//Permissions_45eventSecurity_45events returns Permissions_45eventSecurity_45events:
		//            //Keywords
		//            '"security-events"' ':'
		//            security_45events=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"security-events"' ':'
		//security_45events=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"security-events"'
		public Keyword getSecurityEventsKeyword_0() { return cSecurityEventsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//security_45events=Permissions_45level
		public Assignment getSecurity_45eventsAssignment_2() { return cSecurity_45eventsAssignment_2; }
		
		//Permissions_45level
		public RuleCall getSecurity_45eventsPermissions_45levelParserRuleCall_2_0() { return cSecurity_45eventsPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45eventStatusesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45eventStatuses");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStatusesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStatusesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatusesPermissions_45levelParserRuleCall_2_0 = (RuleCall)cStatusesAssignment_2.eContents().get(0);
		
		////EClass Permissions_45eventStatuses
		//Permissions_45eventStatuses returns Permissions_45eventStatuses:
		//            //Keywords
		//            '"statuses"' ':'
		//            statuses=Permissions_45level
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"statuses"' ':'
		//statuses=Permissions_45level
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"statuses"'
		public Keyword getStatusesKeyword_0() { return cStatusesKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//statuses=Permissions_45level
		public Assignment getStatusesAssignment_2() { return cStatusesAssignment_2; }
		
		//Permissions_45level
		public RuleCall getStatusesPermissions_45levelParserRuleCall_2_0() { return cStatusesPermissions_45levelParserRuleCall_2_0; }
	}
	public class Permissions_45levelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.Permissions_45level");
		private final Assignment cPermissions_45levelAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPermissions_45levelJsonDocumentParserRuleCall_0 = (RuleCall)cPermissions_45levelAssignment.eContents().get(0);
		
		////EClass Permissions_45level
		//Permissions_45level returns Permissions_45level:
		//            //EReference is not a keyword
		//            permissions_45level=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//permissions_45level=JsonDocument
		public Assignment getPermissions_45levelAssignment() { return cPermissions_45levelAssignment; }
		
		//JsonDocument
		public RuleCall getPermissions_45levelJsonDocumentParserRuleCall_0() { return cPermissions_45levelJsonDocumentParserRuleCall_0; }
	}
	public class JsonDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.JsonDocument");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass JsonDocument
		//JsonDocument returns jsonMM::JsonDocument:
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_0() { return cValueValueParserRuleCall_0; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass StringValue
		//StringValue returns jsonMM::StringValue:
		//            value=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class ArrayValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.ArrayValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArrayValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValueValueParserRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_1_0 = (RuleCall)cValueAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ArrayValue
		//ArrayValue returns jsonMM::ArrayValue:
		//    {jsonMM::ArrayValue}
		//            //EReference is not a keyword
		//            '['(value+=Value ( "," value+=Value)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ArrayValue}
		//        //EReference is not a keyword
		//        '['(value+=Value ( "," value+=Value)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ArrayValue}
		public Action getArrayValueAction_0() { return cArrayValueAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(value+=Value ( "," value+=Value)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//value+=Value
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0_0() { return cValueValueParserRuleCall_2_0_0; }
		
		//( "," value+=Value)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//value+=Value
		public Assignment getValueAssignment_2_1_1() { return cValueAssignment_2_1_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_1_1_0() { return cValueValueParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class NullValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.NullValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNullEnumEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NullValue
		//NullValue returns jsonMM::NullValue:
		//            value=NullEnum
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NullEnum
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NullEnum
		public RuleCall getValueNullEnumEnumRuleCall_0() { return cValueNullEnumEnumRuleCall_0; }
	}
	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.NumberValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEDoubleParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NumberValue
		//NumberValue returns jsonMM::NumberValue:
		//            value=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EDouble
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_0() { return cValueEDoubleParserRuleCall_0; }
	}
	public class ObjectValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.ObjectValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cKeyvaluepairAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_0_0 = (RuleCall)cKeyvaluepairAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cKeyvaluepairAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0 = (RuleCall)cKeyvaluepairAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ObjectValue
		//ObjectValue returns jsonMM::ObjectValue:
		//    {jsonMM::ObjectValue}
		//    '{'
		//            //EReference is not a keyword
		//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ObjectValue}
		//'{'
		//        //EReference is not a keyword
		//        (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ObjectValue}
		public Action getObjectValueAction_0() { return cObjectValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		////EReference is not a keyword
		//(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_0() { return cKeyvaluepairAssignment_2_0; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_0_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_0_0; }
		
		//( "," keyvaluepair+=KeyValuePair)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_1_1() { return cKeyvaluepairAssignment_2_1_1; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEBooleanParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass BooleanValue
		//BooleanValue returns jsonMM::BooleanValue:
		//            value=EBoolean
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EBoolean
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_0() { return cValueEBooleanParserRuleCall_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.EString");
		private final RuleCall cVALID_STRINGParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString returns ecore::EString:
		//    VALID_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//VALID_STRING
		public RuleCall getVALID_STRINGParserRuleCall() { return cVALID_STRINGParserRuleCall; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.EDouble");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDouble returns ecore::EDouble:
		//    E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class KeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.KeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		////EClass KeyValuePair
		//KeyValuePair returns jsonMM::KeyValuePair:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//value=Value
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class VALID_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.VALID_STRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VALID_STRING: STRING  | KEYWORD ;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING  | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cRepositoryProjectsKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cDiscussionsKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cIdTokenKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cPackagesKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cIssuesKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cDeploymentsKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cChecksKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cPagesKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cSecurityEventsKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cContentsKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cStatusesKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cActionsKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		private final Keyword cPullRequestsKeyword_12 = (Keyword)cAlternatives.eContents().get(12);
		
		//KEYWORD:
		//'"repository-projects"'  |
		//'"discussions"'  |
		//'"id-token"'  |
		//'"packages"'  |
		//'"issues"'  |
		//'"deployments"'  |
		//'"checks"'  |
		//'"pages"'  |
		//'"security-events"'  |
		//'"contents"'  |
		//'"statuses"'  |
		//'"actions"'  |
		//'"pull-requests"'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'"repository-projects"'  |
		//'"discussions"'  |
		//'"id-token"'  |
		//'"packages"'  |
		//'"issues"'  |
		//'"deployments"'  |
		//'"checks"'  |
		//'"pages"'  |
		//'"security-events"'  |
		//'"contents"'  |
		//'"statuses"'  |
		//'"actions"'  |
		//'"pull-requests"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'"repository-projects"'
		public Keyword getRepositoryProjectsKeyword_0() { return cRepositoryProjectsKeyword_0; }
		
		//'"discussions"'
		public Keyword getDiscussionsKeyword_1() { return cDiscussionsKeyword_1; }
		
		//'"id-token"'
		public Keyword getIdTokenKeyword_2() { return cIdTokenKeyword_2; }
		
		//'"packages"'
		public Keyword getPackagesKeyword_3() { return cPackagesKeyword_3; }
		
		//'"issues"'
		public Keyword getIssuesKeyword_4() { return cIssuesKeyword_4; }
		
		//'"deployments"'
		public Keyword getDeploymentsKeyword_5() { return cDeploymentsKeyword_5; }
		
		//'"checks"'
		public Keyword getChecksKeyword_6() { return cChecksKeyword_6; }
		
		//'"pages"'
		public Keyword getPagesKeyword_7() { return cPagesKeyword_7; }
		
		//'"security-events"'
		public Keyword getSecurityEventsKeyword_8() { return cSecurityEventsKeyword_8; }
		
		//'"contents"'
		public Keyword getContentsKeyword_9() { return cContentsKeyword_9; }
		
		//'"statuses"'
		public Keyword getStatusesKeyword_10() { return cStatusesKeyword_10; }
		
		//'"actions"'
		public Keyword getActionsKeyword_11() { return cActionsKeyword_11; }
		
		//'"pull-requests"'
		public Keyword getPullRequestsKeyword_12() { return cPullRequestsKeyword_12; }
	}
	
	public class NullEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.NullEnum");
		private final EnumLiteralDeclaration cNullEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNullNullKeyword_0 = (Keyword)cNullEnumLiteralDeclaration.eContents().get(0);
		
		//enum NullEnum returns jsonMM::NullEnum:
		//                null = 'null';
		public EnumRule getRule() { return rule; }
		
		//null = 'null'
		public EnumLiteralDeclaration getNullEnumLiteralDeclaration() { return cNullEnumLiteralDeclaration; }
		
		//'null'
		public Keyword getNullNullKeyword_0() { return cNullNullKeyword_0; }
	}
	
	private final PermissionsOneOf1Elements pPermissionsOneOf1;
	private final Permissions_45eventPropertiesAbstractElements pPermissions_45eventPropertiesAbstract;
	private final ValueElements pValue;
	private final Permissions_45eventElements pPermissions_45event;
	private final Permissions_45eventActionsElements pPermissions_45eventActions;
	private final Permissions_45eventChecksElements pPermissions_45eventChecks;
	private final Permissions_45eventContentsElements pPermissions_45eventContents;
	private final Permissions_45eventDeploymentsElements pPermissions_45eventDeployments;
	private final Permissions_45eventDiscussionsElements pPermissions_45eventDiscussions;
	private final Permissions_45eventId_45tokenElements pPermissions_45eventId_45token;
	private final Permissions_45eventIssuesElements pPermissions_45eventIssues;
	private final Permissions_45eventPackagesElements pPermissions_45eventPackages;
	private final Permissions_45eventPagesElements pPermissions_45eventPages;
	private final Permissions_45eventPull_45requestsElements pPermissions_45eventPull_45requests;
	private final Permissions_45eventRepository_45projectsElements pPermissions_45eventRepository_45projects;
	private final Permissions_45eventSecurity_45eventsElements pPermissions_45eventSecurity_45events;
	private final Permissions_45eventStatusesElements pPermissions_45eventStatuses;
	private final Permissions_45levelElements pPermissions_45level;
	private final JsonDocumentElements pJsonDocument;
	private final StringValueElements pStringValue;
	private final ArrayValueElements pArrayValue;
	private final NullValueElements pNullValue;
	private final NumberValueElements pNumberValue;
	private final ObjectValueElements pObjectValue;
	private final BooleanValueElements pBooleanValue;
	private final EStringElements pEString;
	private final NullEnumElements eNullEnum;
	private final EDoubleElements pEDouble;
	private final KeyValuePairElements pKeyValuePair;
	private final EBooleanElements pEBoolean;
	private final TerminalRule tINT;
	private final VALID_STRINGElements pVALID_STRING;
	private final TerminalRule tSTRING;
	private final TerminalRule tE_INT;
	private final KEYWORDElements pKEYWORD;
	private final TerminalRule tE_DOUBLE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PermissionsOneOf1GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPermissionsOneOf1 = new PermissionsOneOf1Elements();
		this.pPermissions_45eventPropertiesAbstract = new Permissions_45eventPropertiesAbstractElements();
		this.pValue = new ValueElements();
		this.pPermissions_45event = new Permissions_45eventElements();
		this.pPermissions_45eventActions = new Permissions_45eventActionsElements();
		this.pPermissions_45eventChecks = new Permissions_45eventChecksElements();
		this.pPermissions_45eventContents = new Permissions_45eventContentsElements();
		this.pPermissions_45eventDeployments = new Permissions_45eventDeploymentsElements();
		this.pPermissions_45eventDiscussions = new Permissions_45eventDiscussionsElements();
		this.pPermissions_45eventId_45token = new Permissions_45eventId_45tokenElements();
		this.pPermissions_45eventIssues = new Permissions_45eventIssuesElements();
		this.pPermissions_45eventPackages = new Permissions_45eventPackagesElements();
		this.pPermissions_45eventPages = new Permissions_45eventPagesElements();
		this.pPermissions_45eventPull_45requests = new Permissions_45eventPull_45requestsElements();
		this.pPermissions_45eventRepository_45projects = new Permissions_45eventRepository_45projectsElements();
		this.pPermissions_45eventSecurity_45events = new Permissions_45eventSecurity_45eventsElements();
		this.pPermissions_45eventStatuses = new Permissions_45eventStatusesElements();
		this.pPermissions_45level = new Permissions_45levelElements();
		this.pJsonDocument = new JsonDocumentElements();
		this.pStringValue = new StringValueElements();
		this.pArrayValue = new ArrayValueElements();
		this.pNullValue = new NullValueElements();
		this.pNumberValue = new NumberValueElements();
		this.pObjectValue = new ObjectValueElements();
		this.pBooleanValue = new BooleanValueElements();
		this.pEString = new EStringElements();
		this.eNullEnum = new NullEnumElements();
		this.pEDouble = new EDoubleElements();
		this.pKeyValuePair = new KeyValuePairElements();
		this.pEBoolean = new EBooleanElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.INT");
		this.pVALID_STRING = new VALID_STRINGElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.STRING");
		this.tE_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.E_INT");
		this.pKEYWORD = new KEYWORDElements();
		this.tE_DOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.PermissionsOneOf1.E_DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("githubwf.githubwf.PermissionsOneOf1".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass PermissionsOneOf1
	//PermissionsOneOf1 returns PermissionsOneOf1:
	//            //EReference is not a keyword
	//            permissions=Permissions_45event
	//    ;
	public PermissionsOneOf1Elements getPermissionsOneOf1Access() {
		return pPermissionsOneOf1;
	}
	
	public ParserRule getPermissionsOneOf1Rule() {
		return getPermissionsOneOf1Access().getRule();
	}
	
	//Permissions_45eventPropertiesAbstract returns Permissions_45eventPropertiesAbstract:
	//    Permissions_45eventActions | Permissions_45eventChecks | Permissions_45eventContents | Permissions_45eventDeployments | Permissions_45eventDiscussions | Permissions_45eventId_45token | Permissions_45eventIssues | Permissions_45eventPackages | Permissions_45eventPages | Permissions_45eventPull_45requests | Permissions_45eventRepository_45projects | Permissions_45eventSecurity_45events | Permissions_45eventStatuses;
	public Permissions_45eventPropertiesAbstractElements getPermissions_45eventPropertiesAbstractAccess() {
		return pPermissions_45eventPropertiesAbstract;
	}
	
	public ParserRule getPermissions_45eventPropertiesAbstractRule() {
		return getPermissions_45eventPropertiesAbstractAccess().getRule();
	}
	
	//Value returns jsonMM::Value:
	//    StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	////EClass Permissions_45event
	//Permissions_45event returns Permissions_45event:
	//    {Permissions_45event}
	//            //EReference is not a keyword
	//            '{'(permissions_45event+=Permissions_45eventPropertiesAbstract ( "," permissions_45event+=Permissions_45eventPropertiesAbstract)* )?'}'
	//    ;
	public Permissions_45eventElements getPermissions_45eventAccess() {
		return pPermissions_45event;
	}
	
	public ParserRule getPermissions_45eventRule() {
		return getPermissions_45eventAccess().getRule();
	}
	
	////EClass Permissions_45eventActions
	//Permissions_45eventActions returns Permissions_45eventActions:
	//            //Keywords
	//            '"actions"' ':'
	//            actions=Permissions_45level
	//    ;
	public Permissions_45eventActionsElements getPermissions_45eventActionsAccess() {
		return pPermissions_45eventActions;
	}
	
	public ParserRule getPermissions_45eventActionsRule() {
		return getPermissions_45eventActionsAccess().getRule();
	}
	
	////EClass Permissions_45eventChecks
	//Permissions_45eventChecks returns Permissions_45eventChecks:
	//            //Keywords
	//            '"checks"' ':'
	//            checks=Permissions_45level
	//    ;
	public Permissions_45eventChecksElements getPermissions_45eventChecksAccess() {
		return pPermissions_45eventChecks;
	}
	
	public ParserRule getPermissions_45eventChecksRule() {
		return getPermissions_45eventChecksAccess().getRule();
	}
	
	////EClass Permissions_45eventContents
	//Permissions_45eventContents returns Permissions_45eventContents:
	//            //Keywords
	//            '"contents"' ':'
	//            contents=Permissions_45level
	//    ;
	public Permissions_45eventContentsElements getPermissions_45eventContentsAccess() {
		return pPermissions_45eventContents;
	}
	
	public ParserRule getPermissions_45eventContentsRule() {
		return getPermissions_45eventContentsAccess().getRule();
	}
	
	////EClass Permissions_45eventDeployments
	//Permissions_45eventDeployments returns Permissions_45eventDeployments:
	//            //Keywords
	//            '"deployments"' ':'
	//            deployments=Permissions_45level
	//    ;
	public Permissions_45eventDeploymentsElements getPermissions_45eventDeploymentsAccess() {
		return pPermissions_45eventDeployments;
	}
	
	public ParserRule getPermissions_45eventDeploymentsRule() {
		return getPermissions_45eventDeploymentsAccess().getRule();
	}
	
	////EClass Permissions_45eventDiscussions
	//Permissions_45eventDiscussions returns Permissions_45eventDiscussions:
	//            //Keywords
	//            '"discussions"' ':'
	//            discussions=Permissions_45level
	//    ;
	public Permissions_45eventDiscussionsElements getPermissions_45eventDiscussionsAccess() {
		return pPermissions_45eventDiscussions;
	}
	
	public ParserRule getPermissions_45eventDiscussionsRule() {
		return getPermissions_45eventDiscussionsAccess().getRule();
	}
	
	////EClass Permissions_45eventId_45token
	//Permissions_45eventId_45token returns Permissions_45eventId_45token:
	//            //Keywords
	//            '"id-token"' ':'
	//            id_45token=Permissions_45level
	//    ;
	public Permissions_45eventId_45tokenElements getPermissions_45eventId_45tokenAccess() {
		return pPermissions_45eventId_45token;
	}
	
	public ParserRule getPermissions_45eventId_45tokenRule() {
		return getPermissions_45eventId_45tokenAccess().getRule();
	}
	
	////EClass Permissions_45eventIssues
	//Permissions_45eventIssues returns Permissions_45eventIssues:
	//            //Keywords
	//            '"issues"' ':'
	//            issues=Permissions_45level
	//    ;
	public Permissions_45eventIssuesElements getPermissions_45eventIssuesAccess() {
		return pPermissions_45eventIssues;
	}
	
	public ParserRule getPermissions_45eventIssuesRule() {
		return getPermissions_45eventIssuesAccess().getRule();
	}
	
	////EClass Permissions_45eventPackages
	//Permissions_45eventPackages returns Permissions_45eventPackages:
	//            //Keywords
	//            '"packages"' ':'
	//            packages=Permissions_45level
	//    ;
	public Permissions_45eventPackagesElements getPermissions_45eventPackagesAccess() {
		return pPermissions_45eventPackages;
	}
	
	public ParserRule getPermissions_45eventPackagesRule() {
		return getPermissions_45eventPackagesAccess().getRule();
	}
	
	////EClass Permissions_45eventPages
	//Permissions_45eventPages returns Permissions_45eventPages:
	//            //Keywords
	//            '"pages"' ':'
	//            pages=Permissions_45level
	//    ;
	public Permissions_45eventPagesElements getPermissions_45eventPagesAccess() {
		return pPermissions_45eventPages;
	}
	
	public ParserRule getPermissions_45eventPagesRule() {
		return getPermissions_45eventPagesAccess().getRule();
	}
	
	////EClass Permissions_45eventPull_45requests
	//Permissions_45eventPull_45requests returns Permissions_45eventPull_45requests:
	//            //Keywords
	//            '"pull-requests"' ':'
	//            pull_45requests=Permissions_45level
	//    ;
	public Permissions_45eventPull_45requestsElements getPermissions_45eventPull_45requestsAccess() {
		return pPermissions_45eventPull_45requests;
	}
	
	public ParserRule getPermissions_45eventPull_45requestsRule() {
		return getPermissions_45eventPull_45requestsAccess().getRule();
	}
	
	////EClass Permissions_45eventRepository_45projects
	//Permissions_45eventRepository_45projects returns Permissions_45eventRepository_45projects:
	//            //Keywords
	//            '"repository-projects"' ':'
	//            repository_45projects=Permissions_45level
	//    ;
	public Permissions_45eventRepository_45projectsElements getPermissions_45eventRepository_45projectsAccess() {
		return pPermissions_45eventRepository_45projects;
	}
	
	public ParserRule getPermissions_45eventRepository_45projectsRule() {
		return getPermissions_45eventRepository_45projectsAccess().getRule();
	}
	
	////EClass Permissions_45eventSecurity_45events
	//Permissions_45eventSecurity_45events returns Permissions_45eventSecurity_45events:
	//            //Keywords
	//            '"security-events"' ':'
	//            security_45events=Permissions_45level
	//    ;
	public Permissions_45eventSecurity_45eventsElements getPermissions_45eventSecurity_45eventsAccess() {
		return pPermissions_45eventSecurity_45events;
	}
	
	public ParserRule getPermissions_45eventSecurity_45eventsRule() {
		return getPermissions_45eventSecurity_45eventsAccess().getRule();
	}
	
	////EClass Permissions_45eventStatuses
	//Permissions_45eventStatuses returns Permissions_45eventStatuses:
	//            //Keywords
	//            '"statuses"' ':'
	//            statuses=Permissions_45level
	//    ;
	public Permissions_45eventStatusesElements getPermissions_45eventStatusesAccess() {
		return pPermissions_45eventStatuses;
	}
	
	public ParserRule getPermissions_45eventStatusesRule() {
		return getPermissions_45eventStatusesAccess().getRule();
	}
	
	////EClass Permissions_45level
	//Permissions_45level returns Permissions_45level:
	//            //EReference is not a keyword
	//            permissions_45level=JsonDocument
	//    ;
	public Permissions_45levelElements getPermissions_45levelAccess() {
		return pPermissions_45level;
	}
	
	public ParserRule getPermissions_45levelRule() {
		return getPermissions_45levelAccess().getRule();
	}
	
	////EClass JsonDocument
	//JsonDocument returns jsonMM::JsonDocument:
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public JsonDocumentElements getJsonDocumentAccess() {
		return pJsonDocument;
	}
	
	public ParserRule getJsonDocumentRule() {
		return getJsonDocumentAccess().getRule();
	}
	
	////EClass StringValue
	//StringValue returns jsonMM::StringValue:
	//            value=EString
	//    ;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	////EClass ArrayValue
	//ArrayValue returns jsonMM::ArrayValue:
	//    {jsonMM::ArrayValue}
	//            //EReference is not a keyword
	//            '['(value+=Value ( "," value+=Value)* )?']'
	//    ;
	public ArrayValueElements getArrayValueAccess() {
		return pArrayValue;
	}
	
	public ParserRule getArrayValueRule() {
		return getArrayValueAccess().getRule();
	}
	
	////EClass NullValue
	//NullValue returns jsonMM::NullValue:
	//            value=NullEnum
	//    ;
	public NullValueElements getNullValueAccess() {
		return pNullValue;
	}
	
	public ParserRule getNullValueRule() {
		return getNullValueAccess().getRule();
	}
	
	////EClass NumberValue
	//NumberValue returns jsonMM::NumberValue:
	//            value=EDouble
	//    ;
	public NumberValueElements getNumberValueAccess() {
		return pNumberValue;
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}
	
	////EClass ObjectValue
	//ObjectValue returns jsonMM::ObjectValue:
	//    {jsonMM::ObjectValue}
	//    '{'
	//            //EReference is not a keyword
	//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	//    '}';
	public ObjectValueElements getObjectValueAccess() {
		return pObjectValue;
	}
	
	public ParserRule getObjectValueRule() {
		return getObjectValueAccess().getRule();
	}
	
	////EClass BooleanValue
	//BooleanValue returns jsonMM::BooleanValue:
	//            value=EBoolean
	//    ;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    VALID_STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum NullEnum returns jsonMM::NullEnum:
	//                null = 'null';
	public NullEnumElements getNullEnumAccess() {
		return eNullEnum;
	}
	
	public EnumRule getNullEnumRule() {
		return getNullEnumAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    E_INT | E_DOUBLE;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	////EClass KeyValuePair
	//KeyValuePair returns jsonMM::KeyValuePair:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public KeyValuePairElements getKeyValuePairAccess() {
		return pKeyValuePair;
	}
	
	public ParserRule getKeyValuePairRule() {
		return getKeyValuePairAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	///**
	// * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
	// */
	//@Override
	//terminal INT returns ecore::EInt:
	//    ('0' |  (('1'..'9') ('0'..'9')*))
	//;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//VALID_STRING: STRING  | KEYWORD ;
	public VALID_STRINGElements getVALID_STRINGAccess() {
		return pVALID_STRING;
	}
	
	public ParserRule getVALID_STRINGRule() {
		return getVALID_STRINGAccess().getRule();
	}
	
	///**
	// * In JSON the single quote for String is not admitted
	// */
	//@Override
	//terminal STRING:
	//    '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
	//;
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal E_INT :
	//    '-'? INT;
	public TerminalRule getE_INTRule() {
		return tE_INT;
	}
	
	//KEYWORD:
	//'"repository-projects"'  |
	//'"discussions"'  |
	//'"id-token"'  |
	//'"packages"'  |
	//'"issues"'  |
	//'"deployments"'  |
	//'"checks"'  |
	//'"pages"'  |
	//'"security-events"'  |
	//'"contents"'  |
	//'"statuses"'  |
	//'"actions"'  |
	//'"pull-requests"'
	//;
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal E_DOUBLE :
	//    '-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
	//;
	public TerminalRule getE_DOUBLERule() {
		return tE_DOUBLE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
