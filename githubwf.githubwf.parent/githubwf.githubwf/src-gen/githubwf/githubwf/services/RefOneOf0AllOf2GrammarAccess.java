/*
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RefOneOf0AllOf2GrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RefOneOf0AllOf2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRefRefOneOf0AllOf2AbstractParserRuleCall_0 = (RuleCall)cRefAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2
		//RefOneOf0AllOf2 returns RefOneOf0AllOf2:
		//            //EReference is not a keyword
		//            ref=RefOneOf0AllOf2Abstract
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//ref=RefOneOf0AllOf2Abstract
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//RefOneOf0AllOf2Abstract
		public RuleCall getRefRefOneOf0AllOf2AbstractParserRuleCall_0() { return cRefRefOneOf0AllOf2AbstractParserRuleCall_0; }
	}
	public class RefOneOf0AllOf2AbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2Abstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRefOneOf0AllOf2TypeNumberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRefOneOf0AllOf2TypeStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRefOneOf0AllOf2TypeIntegerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cRefOneOf0AllOf2TypeBooleanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cRefOneOf0AllOf2TypeObjectParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cRefOneOf0AllOf2TypeArrayParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cRefOneOf0AllOf2TypeNullParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//RefOneOf0AllOf2Abstract returns RefOneOf0AllOf2Abstract:
		//    =>RefOneOf0AllOf2TypeNumber | RefOneOf0AllOf2TypeString | RefOneOf0AllOf2TypeInteger | RefOneOf0AllOf2TypeBoolean | RefOneOf0AllOf2TypeObject | RefOneOf0AllOf2TypeArray | RefOneOf0AllOf2TypeNull;
		@Override public ParserRule getRule() { return rule; }
		
		//=>RefOneOf0AllOf2TypeNumber | RefOneOf0AllOf2TypeString | RefOneOf0AllOf2TypeInteger | RefOneOf0AllOf2TypeBoolean | RefOneOf0AllOf2TypeObject | RefOneOf0AllOf2TypeArray | RefOneOf0AllOf2TypeNull
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//=>RefOneOf0AllOf2TypeNumber
		public RuleCall getRefOneOf0AllOf2TypeNumberParserRuleCall_0() { return cRefOneOf0AllOf2TypeNumberParserRuleCall_0; }
		
		//RefOneOf0AllOf2TypeString
		public RuleCall getRefOneOf0AllOf2TypeStringParserRuleCall_1() { return cRefOneOf0AllOf2TypeStringParserRuleCall_1; }
		
		//RefOneOf0AllOf2TypeInteger
		public RuleCall getRefOneOf0AllOf2TypeIntegerParserRuleCall_2() { return cRefOneOf0AllOf2TypeIntegerParserRuleCall_2; }
		
		//RefOneOf0AllOf2TypeBoolean
		public RuleCall getRefOneOf0AllOf2TypeBooleanParserRuleCall_3() { return cRefOneOf0AllOf2TypeBooleanParserRuleCall_3; }
		
		//RefOneOf0AllOf2TypeObject
		public RuleCall getRefOneOf0AllOf2TypeObjectParserRuleCall_4() { return cRefOneOf0AllOf2TypeObjectParserRuleCall_4; }
		
		//RefOneOf0AllOf2TypeArray
		public RuleCall getRefOneOf0AllOf2TypeArrayParserRuleCall_5() { return cRefOneOf0AllOf2TypeArrayParserRuleCall_5; }
		
		//RefOneOf0AllOf2TypeNull
		public RuleCall getRefOneOf0AllOf2TypeNullParserRuleCall_6() { return cRefOneOf0AllOf2TypeNullParserRuleCall_6; }
	}
	public class RefOneOf0AllOf2PropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2PropertiesAbstract");
		private final RuleCall cRefOneOf0AllOf2AdditionalPropertiesParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//RefOneOf0AllOf2PropertiesAbstract returns RefOneOf0AllOf2PropertiesAbstract:
		//    =>RefOneOf0AllOf2AdditionalProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//=>RefOneOf0AllOf2AdditionalProperties
		public RuleCall getRefOneOf0AllOf2AdditionalPropertiesParserRuleCall() { return cRefOneOf0AllOf2AdditionalPropertiesParserRuleCall; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArrayValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNullValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNumberValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBooleanValueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Value returns jsonMM::Value:
		//    StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
		@Override public ParserRule getRule() { return rule; }
		
		//StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_0() { return cStringValueParserRuleCall_0; }
		
		//ArrayValue
		public RuleCall getArrayValueParserRuleCall_1() { return cArrayValueParserRuleCall_1; }
		
		//NullValue
		public RuleCall getNullValueParserRuleCall_2() { return cNullValueParserRuleCall_2; }
		
		//NumberValue
		public RuleCall getNumberValueParserRuleCall_3() { return cNumberValueParserRuleCall_3; }
		
		//ObjectValue
		public RuleCall getObjectValueParserRuleCall_4() { return cObjectValueParserRuleCall_4; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_5() { return cBooleanValueParserRuleCall_5; }
	}
	public class RefOneOf0AllOf2TypeStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeString");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRefEStringParserRuleCall_0 = (RuleCall)cRefAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2TypeString
		//RefOneOf0AllOf2TypeString returns RefOneOf0AllOf2TypeString:
		//            ref=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//ref=EString
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//EString
		public RuleCall getRefEStringParserRuleCall_0() { return cRefEStringParserRuleCall_0; }
	}
	public class RefOneOf0AllOf2TypeIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeInteger");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRefEDoubleObjectParserRuleCall_0 = (RuleCall)cRefAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2TypeInteger
		//RefOneOf0AllOf2TypeInteger returns RefOneOf0AllOf2TypeInteger:
		//            ref=EDoubleObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//ref=EDoubleObject
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//EDoubleObject
		public RuleCall getRefEDoubleObjectParserRuleCall_0() { return cRefEDoubleObjectParserRuleCall_0; }
	}
	public class RefOneOf0AllOf2TypeNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeNumber");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRefEDoubleObjectParserRuleCall_0 = (RuleCall)cRefAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2TypeNumber
		//RefOneOf0AllOf2TypeNumber returns RefOneOf0AllOf2TypeNumber:
		//            ref=EDoubleObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//ref=EDoubleObject
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//EDoubleObject
		public RuleCall getRefEDoubleObjectParserRuleCall_0() { return cRefEDoubleObjectParserRuleCall_0; }
	}
	public class RefOneOf0AllOf2TypeBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeBoolean");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRefEBooleanObjectParserRuleCall_0 = (RuleCall)cRefAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2TypeBoolean
		//RefOneOf0AllOf2TypeBoolean returns RefOneOf0AllOf2TypeBoolean:
		//            ref=EBooleanObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//ref=EBooleanObject
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//EBooleanObject
		public RuleCall getRefEBooleanObjectParserRuleCall_0() { return cRefEBooleanObjectParserRuleCall_0; }
	}
	public class RefOneOf0AllOf2TypeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRefOneOf0AllOf2TypeObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cRefAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cRefRefOneOf0AllOf2PropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cRefAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cRefAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cRefRefOneOf0AllOf2PropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cRefAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass RefOneOf0AllOf2TypeObject
		//RefOneOf0AllOf2TypeObject returns RefOneOf0AllOf2TypeObject:
		//    {RefOneOf0AllOf2TypeObject}
		//            //EReference is not a keyword
		//            '{'(ref+=RefOneOf0AllOf2PropertiesAbstract ( "," ref+=RefOneOf0AllOf2PropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RefOneOf0AllOf2TypeObject}
		//        //EReference is not a keyword
		//        '{'(ref+=RefOneOf0AllOf2PropertiesAbstract ( "," ref+=RefOneOf0AllOf2PropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{RefOneOf0AllOf2TypeObject}
		public Action getRefOneOf0AllOf2TypeObjectAction_0() { return cRefOneOf0AllOf2TypeObjectAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(ref+=RefOneOf0AllOf2PropertiesAbstract ( "," ref+=RefOneOf0AllOf2PropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//ref+=RefOneOf0AllOf2PropertiesAbstract
		public Assignment getRefAssignment_2_0() { return cRefAssignment_2_0; }
		
		//RefOneOf0AllOf2PropertiesAbstract
		public RuleCall getRefRefOneOf0AllOf2PropertiesAbstractParserRuleCall_2_0_0() { return cRefRefOneOf0AllOf2PropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," ref+=RefOneOf0AllOf2PropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//ref+=RefOneOf0AllOf2PropertiesAbstract
		public Assignment getRefAssignment_2_1_1() { return cRefAssignment_2_1_1; }
		
		//RefOneOf0AllOf2PropertiesAbstract
		public RuleCall getRefRefOneOf0AllOf2PropertiesAbstractParserRuleCall_2_1_1_0() { return cRefRefOneOf0AllOf2PropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class RefOneOf0AllOf2TypeArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRefOneOf0AllOf2TypeArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cRefAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cRefRefOneOf0AllOf2ItemsParserRuleCall_2_0_0 = (RuleCall)cRefAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cRefAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cRefRefOneOf0AllOf2ItemsParserRuleCall_2_1_1_0 = (RuleCall)cRefAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass RefOneOf0AllOf2TypeArray
		//RefOneOf0AllOf2TypeArray returns RefOneOf0AllOf2TypeArray:
		//    {RefOneOf0AllOf2TypeArray}
		//            //EReference is not a keyword
		//            '['(ref+=RefOneOf0AllOf2Items ( "," ref+=RefOneOf0AllOf2Items)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{RefOneOf0AllOf2TypeArray}
		//        //EReference is not a keyword
		//        '['(ref+=RefOneOf0AllOf2Items ( "," ref+=RefOneOf0AllOf2Items)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{RefOneOf0AllOf2TypeArray}
		public Action getRefOneOf0AllOf2TypeArrayAction_0() { return cRefOneOf0AllOf2TypeArrayAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(ref+=RefOneOf0AllOf2Items ( "," ref+=RefOneOf0AllOf2Items)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//ref+=RefOneOf0AllOf2Items
		public Assignment getRefAssignment_2_0() { return cRefAssignment_2_0; }
		
		//RefOneOf0AllOf2Items
		public RuleCall getRefRefOneOf0AllOf2ItemsParserRuleCall_2_0_0() { return cRefRefOneOf0AllOf2ItemsParserRuleCall_2_0_0; }
		
		//( "," ref+=RefOneOf0AllOf2Items)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//ref+=RefOneOf0AllOf2Items
		public Assignment getRefAssignment_2_1_1() { return cRefAssignment_2_1_1; }
		
		//RefOneOf0AllOf2Items
		public RuleCall getRefRefOneOf0AllOf2ItemsParserRuleCall_2_1_1_0() { return cRefRefOneOf0AllOf2ItemsParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class RefOneOf0AllOf2TypeNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2TypeNull");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cRefNullValueParserRuleCall_0 = (RuleCall)cRefAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2TypeNull
		//RefOneOf0AllOf2TypeNull returns RefOneOf0AllOf2TypeNull:
		//            //EReference is not a keyword
		//            ref=NullValue
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//ref=NullValue
		public Assignment getRefAssignment() { return cRefAssignment; }
		
		//NullValue
		public RuleCall getRefNullValueParserRuleCall_0() { return cRefNullValueParserRuleCall_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.EString");
		private final RuleCall cVALID_STRINGParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString returns ecore::EString:
		//    VALID_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//VALID_STRING
		public RuleCall getVALID_STRINGParserRuleCall() { return cVALID_STRINGParserRuleCall; }
	}
	public class EDoubleObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.EDoubleObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDoubleObject returns ecore::EDoubleObject:
		//    E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject returns ecore::EBooleanObject:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class RefOneOf0AllOf2AdditionalPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2AdditionalProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdditionalPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdditionalPropertiesJsonDocumentParserRuleCall_2_0 = (RuleCall)cAdditionalPropertiesAssignment_2.eContents().get(0);
		
		////EClass RefOneOf0AllOf2AdditionalProperties
		//RefOneOf0AllOf2AdditionalProperties returns RefOneOf0AllOf2AdditionalProperties:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            additionalProperties=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Assignment getAdditionalPropertiesAssignment_2() { return cAdditionalPropertiesAssignment_2; }
		
		//JsonDocument
		public RuleCall getAdditionalPropertiesJsonDocumentParserRuleCall_2_0() { return cAdditionalPropertiesJsonDocumentParserRuleCall_2_0; }
	}
	public class JsonDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.JsonDocument");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass JsonDocument
		//JsonDocument returns jsonMM::JsonDocument:
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_0() { return cValueValueParserRuleCall_0; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass StringValue
		//StringValue returns jsonMM::StringValue:
		//            value=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class ArrayValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.ArrayValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArrayValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValueValueParserRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_1_0 = (RuleCall)cValueAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ArrayValue
		//ArrayValue returns jsonMM::ArrayValue:
		//    {jsonMM::ArrayValue}
		//            //EReference is not a keyword
		//            '['(value+=Value ( "," value+=Value)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ArrayValue}
		//        //EReference is not a keyword
		//        '['(value+=Value ( "," value+=Value)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ArrayValue}
		public Action getArrayValueAction_0() { return cArrayValueAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(value+=Value ( "," value+=Value)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//value+=Value
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0_0() { return cValueValueParserRuleCall_2_0_0; }
		
		//( "," value+=Value)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//value+=Value
		public Assignment getValueAssignment_2_1_1() { return cValueAssignment_2_1_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_1_1_0() { return cValueValueParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class NullValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.NullValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNullEnumEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NullValue
		//NullValue returns jsonMM::NullValue:
		//            value=NullEnum
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NullEnum
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NullEnum
		public RuleCall getValueNullEnumEnumRuleCall_0() { return cValueNullEnumEnumRuleCall_0; }
	}
	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.NumberValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEDoubleParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NumberValue
		//NumberValue returns jsonMM::NumberValue:
		//            value=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EDouble
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_0() { return cValueEDoubleParserRuleCall_0; }
	}
	public class ObjectValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.ObjectValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cKeyvaluepairAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_0_0 = (RuleCall)cKeyvaluepairAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cKeyvaluepairAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0 = (RuleCall)cKeyvaluepairAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ObjectValue
		//ObjectValue returns jsonMM::ObjectValue:
		//    {jsonMM::ObjectValue}
		//    '{'
		//            //EReference is not a keyword
		//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ObjectValue}
		//'{'
		//        //EReference is not a keyword
		//        (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ObjectValue}
		public Action getObjectValueAction_0() { return cObjectValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		////EReference is not a keyword
		//(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_0() { return cKeyvaluepairAssignment_2_0; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_0_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_0_0; }
		
		//( "," keyvaluepair+=KeyValuePair)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_1_1() { return cKeyvaluepairAssignment_2_1_1; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEBooleanParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass BooleanValue
		//BooleanValue returns jsonMM::BooleanValue:
		//            value=EBoolean
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EBoolean
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_0() { return cValueEBooleanParserRuleCall_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.EDouble");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDouble returns ecore::EDouble:
		//    E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class KeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.KeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		////EClass KeyValuePair
		//KeyValuePair returns jsonMM::KeyValuePair:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//value=Value
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class RefOneOf0AllOf2ItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.RefOneOf0AllOf2Items");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsJsonDocumentParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass RefOneOf0AllOf2Items
		//RefOneOf0AllOf2Items returns RefOneOf0AllOf2Items:
		//            //EReference is not a keyword
		//            items=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=JsonDocument
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//JsonDocument
		public RuleCall getItemsJsonDocumentParserRuleCall_0() { return cItemsJsonDocumentParserRuleCall_0; }
	}
	public class VALID_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.VALID_STRING");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//VALID_STRING: STRING  ;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	
	public class NullEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.NullEnum");
		private final EnumLiteralDeclaration cNullEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNullNullKeyword_0 = (Keyword)cNullEnumLiteralDeclaration.eContents().get(0);
		
		//enum NullEnum returns jsonMM::NullEnum:
		//                null = 'null';
		public EnumRule getRule() { return rule; }
		
		//null = 'null'
		public EnumLiteralDeclaration getNullEnumLiteralDeclaration() { return cNullEnumLiteralDeclaration; }
		
		//'null'
		public Keyword getNullNullKeyword_0() { return cNullNullKeyword_0; }
	}
	
	private final RefOneOf0AllOf2Elements pRefOneOf0AllOf2;
	private final RefOneOf0AllOf2AbstractElements pRefOneOf0AllOf2Abstract;
	private final RefOneOf0AllOf2PropertiesAbstractElements pRefOneOf0AllOf2PropertiesAbstract;
	private final ValueElements pValue;
	private final RefOneOf0AllOf2TypeStringElements pRefOneOf0AllOf2TypeString;
	private final RefOneOf0AllOf2TypeIntegerElements pRefOneOf0AllOf2TypeInteger;
	private final RefOneOf0AllOf2TypeNumberElements pRefOneOf0AllOf2TypeNumber;
	private final RefOneOf0AllOf2TypeBooleanElements pRefOneOf0AllOf2TypeBoolean;
	private final RefOneOf0AllOf2TypeObjectElements pRefOneOf0AllOf2TypeObject;
	private final RefOneOf0AllOf2TypeArrayElements pRefOneOf0AllOf2TypeArray;
	private final RefOneOf0AllOf2TypeNullElements pRefOneOf0AllOf2TypeNull;
	private final EStringElements pEString;
	private final EDoubleObjectElements pEDoubleObject;
	private final EBooleanObjectElements pEBooleanObject;
	private final RefOneOf0AllOf2AdditionalPropertiesElements pRefOneOf0AllOf2AdditionalProperties;
	private final JsonDocumentElements pJsonDocument;
	private final StringValueElements pStringValue;
	private final ArrayValueElements pArrayValue;
	private final NullValueElements pNullValue;
	private final NumberValueElements pNumberValue;
	private final ObjectValueElements pObjectValue;
	private final BooleanValueElements pBooleanValue;
	private final NullEnumElements eNullEnum;
	private final EDoubleElements pEDouble;
	private final KeyValuePairElements pKeyValuePair;
	private final EBooleanElements pEBoolean;
	private final RefOneOf0AllOf2ItemsElements pRefOneOf0AllOf2Items;
	private final TerminalRule tINT;
	private final VALID_STRINGElements pVALID_STRING;
	private final TerminalRule tSTRING;
	private final TerminalRule tE_INT;
	private final TerminalRule tE_DOUBLE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RefOneOf0AllOf2GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRefOneOf0AllOf2 = new RefOneOf0AllOf2Elements();
		this.pRefOneOf0AllOf2Abstract = new RefOneOf0AllOf2AbstractElements();
		this.pRefOneOf0AllOf2PropertiesAbstract = new RefOneOf0AllOf2PropertiesAbstractElements();
		this.pValue = new ValueElements();
		this.pRefOneOf0AllOf2TypeString = new RefOneOf0AllOf2TypeStringElements();
		this.pRefOneOf0AllOf2TypeInteger = new RefOneOf0AllOf2TypeIntegerElements();
		this.pRefOneOf0AllOf2TypeNumber = new RefOneOf0AllOf2TypeNumberElements();
		this.pRefOneOf0AllOf2TypeBoolean = new RefOneOf0AllOf2TypeBooleanElements();
		this.pRefOneOf0AllOf2TypeObject = new RefOneOf0AllOf2TypeObjectElements();
		this.pRefOneOf0AllOf2TypeArray = new RefOneOf0AllOf2TypeArrayElements();
		this.pRefOneOf0AllOf2TypeNull = new RefOneOf0AllOf2TypeNullElements();
		this.pEString = new EStringElements();
		this.pEDoubleObject = new EDoubleObjectElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pRefOneOf0AllOf2AdditionalProperties = new RefOneOf0AllOf2AdditionalPropertiesElements();
		this.pJsonDocument = new JsonDocumentElements();
		this.pStringValue = new StringValueElements();
		this.pArrayValue = new ArrayValueElements();
		this.pNullValue = new NullValueElements();
		this.pNumberValue = new NumberValueElements();
		this.pObjectValue = new ObjectValueElements();
		this.pBooleanValue = new BooleanValueElements();
		this.eNullEnum = new NullEnumElements();
		this.pEDouble = new EDoubleElements();
		this.pKeyValuePair = new KeyValuePairElements();
		this.pEBoolean = new EBooleanElements();
		this.pRefOneOf0AllOf2Items = new RefOneOf0AllOf2ItemsElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.INT");
		this.pVALID_STRING = new VALID_STRINGElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.STRING");
		this.tE_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.E_INT");
		this.tE_DOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.RefOneOf0AllOf2.E_DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("githubwf.githubwf.RefOneOf0AllOf2".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass RefOneOf0AllOf2
	//RefOneOf0AllOf2 returns RefOneOf0AllOf2:
	//            //EReference is not a keyword
	//            ref=RefOneOf0AllOf2Abstract
	//    ;
	public RefOneOf0AllOf2Elements getRefOneOf0AllOf2Access() {
		return pRefOneOf0AllOf2;
	}
	
	public ParserRule getRefOneOf0AllOf2Rule() {
		return getRefOneOf0AllOf2Access().getRule();
	}
	
	//RefOneOf0AllOf2Abstract returns RefOneOf0AllOf2Abstract:
	//    =>RefOneOf0AllOf2TypeNumber | RefOneOf0AllOf2TypeString | RefOneOf0AllOf2TypeInteger | RefOneOf0AllOf2TypeBoolean | RefOneOf0AllOf2TypeObject | RefOneOf0AllOf2TypeArray | RefOneOf0AllOf2TypeNull;
	public RefOneOf0AllOf2AbstractElements getRefOneOf0AllOf2AbstractAccess() {
		return pRefOneOf0AllOf2Abstract;
	}
	
	public ParserRule getRefOneOf0AllOf2AbstractRule() {
		return getRefOneOf0AllOf2AbstractAccess().getRule();
	}
	
	//RefOneOf0AllOf2PropertiesAbstract returns RefOneOf0AllOf2PropertiesAbstract:
	//    =>RefOneOf0AllOf2AdditionalProperties;
	public RefOneOf0AllOf2PropertiesAbstractElements getRefOneOf0AllOf2PropertiesAbstractAccess() {
		return pRefOneOf0AllOf2PropertiesAbstract;
	}
	
	public ParserRule getRefOneOf0AllOf2PropertiesAbstractRule() {
		return getRefOneOf0AllOf2PropertiesAbstractAccess().getRule();
	}
	
	//Value returns jsonMM::Value:
	//    StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeString
	//RefOneOf0AllOf2TypeString returns RefOneOf0AllOf2TypeString:
	//            ref=EString
	//    ;
	public RefOneOf0AllOf2TypeStringElements getRefOneOf0AllOf2TypeStringAccess() {
		return pRefOneOf0AllOf2TypeString;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeStringRule() {
		return getRefOneOf0AllOf2TypeStringAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeInteger
	//RefOneOf0AllOf2TypeInteger returns RefOneOf0AllOf2TypeInteger:
	//            ref=EDoubleObject
	//    ;
	public RefOneOf0AllOf2TypeIntegerElements getRefOneOf0AllOf2TypeIntegerAccess() {
		return pRefOneOf0AllOf2TypeInteger;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeIntegerRule() {
		return getRefOneOf0AllOf2TypeIntegerAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeNumber
	//RefOneOf0AllOf2TypeNumber returns RefOneOf0AllOf2TypeNumber:
	//            ref=EDoubleObject
	//    ;
	public RefOneOf0AllOf2TypeNumberElements getRefOneOf0AllOf2TypeNumberAccess() {
		return pRefOneOf0AllOf2TypeNumber;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeNumberRule() {
		return getRefOneOf0AllOf2TypeNumberAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeBoolean
	//RefOneOf0AllOf2TypeBoolean returns RefOneOf0AllOf2TypeBoolean:
	//            ref=EBooleanObject
	//    ;
	public RefOneOf0AllOf2TypeBooleanElements getRefOneOf0AllOf2TypeBooleanAccess() {
		return pRefOneOf0AllOf2TypeBoolean;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeBooleanRule() {
		return getRefOneOf0AllOf2TypeBooleanAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeObject
	//RefOneOf0AllOf2TypeObject returns RefOneOf0AllOf2TypeObject:
	//    {RefOneOf0AllOf2TypeObject}
	//            //EReference is not a keyword
	//            '{'(ref+=RefOneOf0AllOf2PropertiesAbstract ( "," ref+=RefOneOf0AllOf2PropertiesAbstract)* )?'}'
	//    ;
	public RefOneOf0AllOf2TypeObjectElements getRefOneOf0AllOf2TypeObjectAccess() {
		return pRefOneOf0AllOf2TypeObject;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeObjectRule() {
		return getRefOneOf0AllOf2TypeObjectAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeArray
	//RefOneOf0AllOf2TypeArray returns RefOneOf0AllOf2TypeArray:
	//    {RefOneOf0AllOf2TypeArray}
	//            //EReference is not a keyword
	//            '['(ref+=RefOneOf0AllOf2Items ( "," ref+=RefOneOf0AllOf2Items)* )?']'
	//    ;
	public RefOneOf0AllOf2TypeArrayElements getRefOneOf0AllOf2TypeArrayAccess() {
		return pRefOneOf0AllOf2TypeArray;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeArrayRule() {
		return getRefOneOf0AllOf2TypeArrayAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2TypeNull
	//RefOneOf0AllOf2TypeNull returns RefOneOf0AllOf2TypeNull:
	//            //EReference is not a keyword
	//            ref=NullValue
	//    ;
	public RefOneOf0AllOf2TypeNullElements getRefOneOf0AllOf2TypeNullAccess() {
		return pRefOneOf0AllOf2TypeNull;
	}
	
	public ParserRule getRefOneOf0AllOf2TypeNullRule() {
		return getRefOneOf0AllOf2TypeNullAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    VALID_STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EDoubleObject returns ecore::EDoubleObject:
	//    E_INT | E_DOUBLE;
	public EDoubleObjectElements getEDoubleObjectAccess() {
		return pEDoubleObject;
	}
	
	public ParserRule getEDoubleObjectRule() {
		return getEDoubleObjectAccess().getRule();
	}
	
	//EBooleanObject returns ecore::EBooleanObject:
	//    'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2AdditionalProperties
	//RefOneOf0AllOf2AdditionalProperties returns RefOneOf0AllOf2AdditionalProperties:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            additionalProperties=JsonDocument
	//    ;
	public RefOneOf0AllOf2AdditionalPropertiesElements getRefOneOf0AllOf2AdditionalPropertiesAccess() {
		return pRefOneOf0AllOf2AdditionalProperties;
	}
	
	public ParserRule getRefOneOf0AllOf2AdditionalPropertiesRule() {
		return getRefOneOf0AllOf2AdditionalPropertiesAccess().getRule();
	}
	
	////EClass JsonDocument
	//JsonDocument returns jsonMM::JsonDocument:
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public JsonDocumentElements getJsonDocumentAccess() {
		return pJsonDocument;
	}
	
	public ParserRule getJsonDocumentRule() {
		return getJsonDocumentAccess().getRule();
	}
	
	////EClass StringValue
	//StringValue returns jsonMM::StringValue:
	//            value=EString
	//    ;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	////EClass ArrayValue
	//ArrayValue returns jsonMM::ArrayValue:
	//    {jsonMM::ArrayValue}
	//            //EReference is not a keyword
	//            '['(value+=Value ( "," value+=Value)* )?']'
	//    ;
	public ArrayValueElements getArrayValueAccess() {
		return pArrayValue;
	}
	
	public ParserRule getArrayValueRule() {
		return getArrayValueAccess().getRule();
	}
	
	////EClass NullValue
	//NullValue returns jsonMM::NullValue:
	//            value=NullEnum
	//    ;
	public NullValueElements getNullValueAccess() {
		return pNullValue;
	}
	
	public ParserRule getNullValueRule() {
		return getNullValueAccess().getRule();
	}
	
	////EClass NumberValue
	//NumberValue returns jsonMM::NumberValue:
	//            value=EDouble
	//    ;
	public NumberValueElements getNumberValueAccess() {
		return pNumberValue;
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}
	
	////EClass ObjectValue
	//ObjectValue returns jsonMM::ObjectValue:
	//    {jsonMM::ObjectValue}
	//    '{'
	//            //EReference is not a keyword
	//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	//    '}';
	public ObjectValueElements getObjectValueAccess() {
		return pObjectValue;
	}
	
	public ParserRule getObjectValueRule() {
		return getObjectValueAccess().getRule();
	}
	
	////EClass BooleanValue
	//BooleanValue returns jsonMM::BooleanValue:
	//            value=EBoolean
	//    ;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//enum NullEnum returns jsonMM::NullEnum:
	//                null = 'null';
	public NullEnumElements getNullEnumAccess() {
		return eNullEnum;
	}
	
	public EnumRule getNullEnumRule() {
		return getNullEnumAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    E_INT | E_DOUBLE;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	////EClass KeyValuePair
	//KeyValuePair returns jsonMM::KeyValuePair:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public KeyValuePairElements getKeyValuePairAccess() {
		return pKeyValuePair;
	}
	
	public ParserRule getKeyValuePairRule() {
		return getKeyValuePairAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	////EClass RefOneOf0AllOf2Items
	//RefOneOf0AllOf2Items returns RefOneOf0AllOf2Items:
	//            //EReference is not a keyword
	//            items=JsonDocument
	//    ;
	public RefOneOf0AllOf2ItemsElements getRefOneOf0AllOf2ItemsAccess() {
		return pRefOneOf0AllOf2Items;
	}
	
	public ParserRule getRefOneOf0AllOf2ItemsRule() {
		return getRefOneOf0AllOf2ItemsAccess().getRule();
	}
	
	///**
	// * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
	// */
	//@Override
	//terminal INT returns ecore::EInt:
	//    ('0' |  (('1'..'9') ('0'..'9')*))
	//;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//VALID_STRING: STRING  ;
	public VALID_STRINGElements getVALID_STRINGAccess() {
		return pVALID_STRING;
	}
	
	public ParserRule getVALID_STRINGRule() {
		return getVALID_STRINGAccess().getRule();
	}
	
	///**
	// * In JSON the single quote for String is not admitted
	// */
	//@Override
	//terminal STRING:
	//    '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
	//;
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal E_INT :
	//    '-'? INT;
	public TerminalRule getE_INTRule() {
		return tE_INT;
	}
	
	//terminal E_DOUBLE :
	//    '-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
	//;
	public TerminalRule getE_DOUBLERule() {
		return tE_DOUBLE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
