/*
 * generated by Xtext 2.29.0
 */
package githubwf.githubwf.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class NormalJobContainerOneOf1GrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class NormalJobContainerOneOf1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.NormalJobContainerOneOf1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContainerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContainerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContainerContainerParserRuleCall_2_0 = (RuleCall)cContainerAssignment_2.eContents().get(0);
		
		////EClass NormalJobContainerOneOf1
		//NormalJobContainerOneOf1 returns NormalJobContainerOneOf1:
		//            //Keywords
		//            '"container"' ':'
		//            container=Container
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"container"' ':'
		//container=Container
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"container"'
		public Keyword getContainerKeyword_0() { return cContainerKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//container=Container
		public Assignment getContainerAssignment_2() { return cContainerAssignment_2; }
		
		//Container
		public RuleCall getContainerContainerParserRuleCall_2_0() { return cContainerContainerParserRuleCall_2_0; }
	}
	public class ContainerPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContainerImageParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContainerCredentialsParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cContainerEnvParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cContainerPortsParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cContainerVolumesParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cContainerOptionsParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ContainerPropertiesAbstract returns ContainerPropertiesAbstract:
		//    ContainerImage | ContainerCredentials | ContainerEnv | ContainerPorts | ContainerVolumes | ContainerOptions;
		@Override public ParserRule getRule() { return rule; }
		
		//ContainerImage | ContainerCredentials | ContainerEnv | ContainerPorts | ContainerVolumes | ContainerOptions
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContainerImage
		public RuleCall getContainerImageParserRuleCall_0() { return cContainerImageParserRuleCall_0; }
		
		//ContainerCredentials
		public RuleCall getContainerCredentialsParserRuleCall_1() { return cContainerCredentialsParserRuleCall_1; }
		
		//ContainerEnv
		public RuleCall getContainerEnvParserRuleCall_2() { return cContainerEnvParserRuleCall_2; }
		
		//ContainerPorts
		public RuleCall getContainerPortsParserRuleCall_3() { return cContainerPortsParserRuleCall_3; }
		
		//ContainerVolumes
		public RuleCall getContainerVolumesParserRuleCall_4() { return cContainerVolumesParserRuleCall_4; }
		
		//ContainerOptions
		public RuleCall getContainerOptionsParserRuleCall_5() { return cContainerOptionsParserRuleCall_5; }
	}
	public class ContainerCredentialsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerCredentialsPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContainerCredentialsUsernameParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContainerCredentialsPasswordParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cContainerCredentialsAdditionalPropertiesParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ContainerCredentialsPropertiesAbstract returns ContainerCredentialsPropertiesAbstract:
		//    ContainerCredentialsUsername | ContainerCredentialsPassword | =>ContainerCredentialsAdditionalProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//ContainerCredentialsUsername | ContainerCredentialsPassword | =>ContainerCredentialsAdditionalProperties
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContainerCredentialsUsername
		public RuleCall getContainerCredentialsUsernameParserRuleCall_0() { return cContainerCredentialsUsernameParserRuleCall_0; }
		
		//ContainerCredentialsPassword
		public RuleCall getContainerCredentialsPasswordParserRuleCall_1() { return cContainerCredentialsPasswordParserRuleCall_1; }
		
		//=>ContainerCredentialsAdditionalProperties
		public RuleCall getContainerCredentialsAdditionalPropertiesParserRuleCall_2() { return cContainerCredentialsAdditionalPropertiesParserRuleCall_2; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArrayValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNullValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNumberValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBooleanValueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Value returns jsonMM::Value:
		//    StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
		@Override public ParserRule getRule() { return rule; }
		
		//StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_0() { return cStringValueParserRuleCall_0; }
		
		//ArrayValue
		public RuleCall getArrayValueParserRuleCall_1() { return cArrayValueParserRuleCall_1; }
		
		//NullValue
		public RuleCall getNullValueParserRuleCall_2() { return cNullValueParserRuleCall_2; }
		
		//NumberValue
		public RuleCall getNumberValueParserRuleCall_3() { return cNumberValueParserRuleCall_3; }
		
		//ObjectValue
		public RuleCall getObjectValueParserRuleCall_4() { return cObjectValueParserRuleCall_4; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_5() { return cBooleanValueParserRuleCall_5; }
	}
	public class EnvAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEnvTypeNumberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnvTypeStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnvTypeIntegerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEnvTypeBooleanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cEnvTypeObjectParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEnvTypeArrayParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEnvTypeNullParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//EnvAbstract returns EnvAbstract:
		//    =>EnvTypeNumber | EnvTypeString | EnvTypeInteger | EnvTypeBoolean | EnvTypeObject | EnvTypeArray | EnvTypeNull;
		@Override public ParserRule getRule() { return rule; }
		
		//=>EnvTypeNumber | EnvTypeString | EnvTypeInteger | EnvTypeBoolean | EnvTypeObject | EnvTypeArray | EnvTypeNull
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//=>EnvTypeNumber
		public RuleCall getEnvTypeNumberParserRuleCall_0() { return cEnvTypeNumberParserRuleCall_0; }
		
		//EnvTypeString
		public RuleCall getEnvTypeStringParserRuleCall_1() { return cEnvTypeStringParserRuleCall_1; }
		
		//EnvTypeInteger
		public RuleCall getEnvTypeIntegerParserRuleCall_2() { return cEnvTypeIntegerParserRuleCall_2; }
		
		//EnvTypeBoolean
		public RuleCall getEnvTypeBooleanParserRuleCall_3() { return cEnvTypeBooleanParserRuleCall_3; }
		
		//EnvTypeObject
		public RuleCall getEnvTypeObjectParserRuleCall_4() { return cEnvTypeObjectParserRuleCall_4; }
		
		//EnvTypeArray
		public RuleCall getEnvTypeArrayParserRuleCall_5() { return cEnvTypeArrayParserRuleCall_5; }
		
		//EnvTypeNull
		public RuleCall getEnvTypeNullParserRuleCall_6() { return cEnvTypeNullParserRuleCall_6; }
	}
	public class EnvPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvPropertiesAbstract");
		private final RuleCall cEnvAdditionalPropertiesParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EnvPropertiesAbstract returns EnvPropertiesAbstract:
		//    =>EnvAdditionalProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//=>EnvAdditionalProperties
		public RuleCall getEnvAdditionalPropertiesParserRuleCall() { return cEnvAdditionalPropertiesParserRuleCall; }
	}
	public class ContainerPortsItemsAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContainerPortsItemsTypeNumberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cContainerPortsItemsTypeStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cContainerPortsItemsTypeIntegerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cContainerPortsItemsTypeBooleanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cContainerPortsItemsTypeObjectParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cContainerPortsItemsTypeArrayParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cContainerPortsItemsTypeNullParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ContainerPortsItemsAbstract returns ContainerPortsItemsAbstract:
		//    =>ContainerPortsItemsTypeNumber | ContainerPortsItemsTypeString | ContainerPortsItemsTypeInteger | ContainerPortsItemsTypeBoolean | ContainerPortsItemsTypeObject | ContainerPortsItemsTypeArray | ContainerPortsItemsTypeNull;
		@Override public ParserRule getRule() { return rule; }
		
		//=>ContainerPortsItemsTypeNumber | ContainerPortsItemsTypeString | ContainerPortsItemsTypeInteger | ContainerPortsItemsTypeBoolean | ContainerPortsItemsTypeObject | ContainerPortsItemsTypeArray | ContainerPortsItemsTypeNull
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//=>ContainerPortsItemsTypeNumber
		public RuleCall getContainerPortsItemsTypeNumberParserRuleCall_0() { return cContainerPortsItemsTypeNumberParserRuleCall_0; }
		
		//ContainerPortsItemsTypeString
		public RuleCall getContainerPortsItemsTypeStringParserRuleCall_1() { return cContainerPortsItemsTypeStringParserRuleCall_1; }
		
		//ContainerPortsItemsTypeInteger
		public RuleCall getContainerPortsItemsTypeIntegerParserRuleCall_2() { return cContainerPortsItemsTypeIntegerParserRuleCall_2; }
		
		//ContainerPortsItemsTypeBoolean
		public RuleCall getContainerPortsItemsTypeBooleanParserRuleCall_3() { return cContainerPortsItemsTypeBooleanParserRuleCall_3; }
		
		//ContainerPortsItemsTypeObject
		public RuleCall getContainerPortsItemsTypeObjectParserRuleCall_4() { return cContainerPortsItemsTypeObjectParserRuleCall_4; }
		
		//ContainerPortsItemsTypeArray
		public RuleCall getContainerPortsItemsTypeArrayParserRuleCall_5() { return cContainerPortsItemsTypeArrayParserRuleCall_5; }
		
		//ContainerPortsItemsTypeNull
		public RuleCall getContainerPortsItemsTypeNullParserRuleCall_6() { return cContainerPortsItemsTypeNullParserRuleCall_6; }
	}
	public class ContainerPortsItemsPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsPropertiesAbstract");
		private final RuleCall cContainerPortsItemsAdditionalPropertiesParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ContainerPortsItemsPropertiesAbstract returns ContainerPortsItemsPropertiesAbstract:
		//    =>ContainerPortsItemsAdditionalProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//=>ContainerPortsItemsAdditionalProperties
		public RuleCall getContainerPortsItemsAdditionalPropertiesParserRuleCall() { return cContainerPortsItemsAdditionalPropertiesParserRuleCall; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cContainerAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cContainerContainerPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cContainerAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cContainerAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cContainerContainerPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cContainerAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Container
		//Container returns Container:
		//    {Container}
		//            //EReference is not a keyword
		//            '{'(container+=ContainerPropertiesAbstract ( "," container+=ContainerPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{Container}
		//        //EReference is not a keyword
		//        '{'(container+=ContainerPropertiesAbstract ( "," container+=ContainerPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{Container}
		public Action getContainerAction_0() { return cContainerAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(container+=ContainerPropertiesAbstract ( "," container+=ContainerPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//container+=ContainerPropertiesAbstract
		public Assignment getContainerAssignment_2_0() { return cContainerAssignment_2_0; }
		
		//ContainerPropertiesAbstract
		public RuleCall getContainerContainerPropertiesAbstractParserRuleCall_2_0_0() { return cContainerContainerPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," container+=ContainerPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//container+=ContainerPropertiesAbstract
		public Assignment getContainerAssignment_2_1_1() { return cContainerAssignment_2_1_1; }
		
		//ContainerPropertiesAbstract
		public RuleCall getContainerContainerPropertiesAbstractParserRuleCall_2_1_1_0() { return cContainerContainerPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ContainerImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerImage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImageAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImageEStringParserRuleCall_2_0 = (RuleCall)cImageAssignment_2.eContents().get(0);
		
		////EClass ContainerImage
		//ContainerImage returns ContainerImage:
		//            //Keywords
		//            '"image"' ':'
		//            image=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"image"' ':'
		//image=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"image"'
		public Keyword getImageKeyword_0() { return cImageKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//image=EString
		public Assignment getImageAssignment_2() { return cImageAssignment_2; }
		
		//EString
		public RuleCall getImageEStringParserRuleCall_2_0() { return cImageEStringParserRuleCall_2_0; }
	}
	public class ContainerCredentialsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerCredentials");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerCredentialsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCredentialsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCredentialsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cCredentialsContainerCredentialsPropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cCredentialsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCredentialsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCredentialsContainerCredentialsPropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cCredentialsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass ContainerCredentials
		//ContainerCredentials returns ContainerCredentials:
		//    {ContainerCredentials}
		//            //Keywords
		//            '"credentials"' ':'
		//            '{'(credentials+=ContainerCredentialsPropertiesAbstract ( "," credentials+=ContainerCredentialsPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ContainerCredentials}
		//        //Keywords
		//        '"credentials"' ':'
		//        '{'(credentials+=ContainerCredentialsPropertiesAbstract ( "," credentials+=ContainerCredentialsPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{ContainerCredentials}
		public Action getContainerCredentialsAction_0() { return cContainerCredentialsAction_0; }
		
		////Keywords
		//'"credentials"'
		public Keyword getCredentialsKeyword_1() { return cCredentialsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(credentials+=ContainerCredentialsPropertiesAbstract ( "," credentials+=ContainerCredentialsPropertiesAbstract)* )?
		public Group getGroup_4() { return cGroup_4; }
		
		//credentials+=ContainerCredentialsPropertiesAbstract
		public Assignment getCredentialsAssignment_4_0() { return cCredentialsAssignment_4_0; }
		
		//ContainerCredentialsPropertiesAbstract
		public RuleCall getCredentialsContainerCredentialsPropertiesAbstractParserRuleCall_4_0_0() { return cCredentialsContainerCredentialsPropertiesAbstractParserRuleCall_4_0_0; }
		
		//( "," credentials+=ContainerCredentialsPropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//credentials+=ContainerCredentialsPropertiesAbstract
		public Assignment getCredentialsAssignment_4_1_1() { return cCredentialsAssignment_4_1_1; }
		
		//ContainerCredentialsPropertiesAbstract
		public RuleCall getCredentialsContainerCredentialsPropertiesAbstractParserRuleCall_4_1_1_0() { return cCredentialsContainerCredentialsPropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ContainerEnvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerEnv");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnvKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cEnvAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEnvEnvParserRuleCall_2_0 = (RuleCall)cEnvAssignment_2.eContents().get(0);
		
		////EClass ContainerEnv
		//ContainerEnv returns ContainerEnv:
		//            //Keywords
		//            '"env"' ':'
		//            env=Env
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"env"' ':'
		//env=Env
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"env"'
		public Keyword getEnvKeyword_0() { return cEnvKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//env=Env
		public Assignment getEnvAssignment_2() { return cEnvAssignment_2; }
		
		//Env
		public RuleCall getEnvEnvParserRuleCall_2_0() { return cEnvEnvParserRuleCall_2_0; }
	}
	public class ContainerPortsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPorts");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPortsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPortsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPortsContainerPortsItemsParserRuleCall_3_0 = (RuleCall)cPortsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPortsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPortsContainerPortsItemsParserRuleCall_4_1_0 = (RuleCall)cPortsAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass ContainerPorts
		//ContainerPorts returns ContainerPorts:
		//            //Keywords
		//            '"ports"' ':'
		//            '['ports+=ContainerPortsItems ( "," ports+=ContainerPortsItems)* ']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"ports"' ':'
		//'['ports+=ContainerPortsItems ( "," ports+=ContainerPortsItems)* ']'
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"ports"'
		public Keyword getPortsKeyword_0() { return cPortsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//ports+=ContainerPortsItems
		public Assignment getPortsAssignment_3() { return cPortsAssignment_3; }
		
		//ContainerPortsItems
		public RuleCall getPortsContainerPortsItemsParserRuleCall_3_0() { return cPortsContainerPortsItemsParserRuleCall_3_0; }
		
		//( "," ports+=ContainerPortsItems)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//ports+=ContainerPortsItems
		public Assignment getPortsAssignment_4_1() { return cPortsAssignment_4_1; }
		
		//ContainerPortsItems
		public RuleCall getPortsContainerPortsItemsParserRuleCall_4_1_0() { return cPortsContainerPortsItemsParserRuleCall_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ContainerVolumesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerVolumes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVolumesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVolumesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVolumesContainerVolumesItemsParserRuleCall_3_0 = (RuleCall)cVolumesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cVolumesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cVolumesContainerVolumesItemsParserRuleCall_4_1_0 = (RuleCall)cVolumesAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass ContainerVolumes
		//ContainerVolumes returns ContainerVolumes:
		//            //Keywords
		//            '"volumes"' ':'
		//            '['volumes+=ContainerVolumesItems ( "," volumes+=ContainerVolumesItems)* ']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"volumes"' ':'
		//'['volumes+=ContainerVolumesItems ( "," volumes+=ContainerVolumesItems)* ']'
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"volumes"'
		public Keyword getVolumesKeyword_0() { return cVolumesKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2() { return cLeftSquareBracketKeyword_2; }
		
		//volumes+=ContainerVolumesItems
		public Assignment getVolumesAssignment_3() { return cVolumesAssignment_3; }
		
		//ContainerVolumesItems
		public RuleCall getVolumesContainerVolumesItemsParserRuleCall_3_0() { return cVolumesContainerVolumesItemsParserRuleCall_3_0; }
		
		//( "," volumes+=ContainerVolumesItems)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//volumes+=ContainerVolumesItems
		public Assignment getVolumesAssignment_4_1() { return cVolumesAssignment_4_1; }
		
		//ContainerVolumesItems
		public RuleCall getVolumesContainerVolumesItemsParserRuleCall_4_1_0() { return cVolumesContainerVolumesItemsParserRuleCall_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ContainerOptionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerOptions");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOptionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cOptionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cOptionsEStringParserRuleCall_2_0 = (RuleCall)cOptionsAssignment_2.eContents().get(0);
		
		////EClass ContainerOptions
		//ContainerOptions returns ContainerOptions:
		//            //Keywords
		//            '"options"' ':'
		//            options=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"options"' ':'
		//options=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"options"'
		public Keyword getOptionsKeyword_0() { return cOptionsKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//options=EString
		public Assignment getOptionsAssignment_2() { return cOptionsAssignment_2; }
		
		//EString
		public RuleCall getOptionsEStringParserRuleCall_2_0() { return cOptionsEStringParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EString");
		private final RuleCall cVALID_STRINGParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString returns ecore::EString:
		//    VALID_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//VALID_STRING
		public RuleCall getVALID_STRINGParserRuleCall() { return cVALID_STRINGParserRuleCall; }
	}
	public class ContainerCredentialsUsernameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerCredentialsUsername");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUsernameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUsernameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUsernameEStringParserRuleCall_2_0 = (RuleCall)cUsernameAssignment_2.eContents().get(0);
		
		////EClass ContainerCredentialsUsername
		//ContainerCredentialsUsername returns ContainerCredentialsUsername:
		//            //Keywords
		//            '"username"' ':'
		//            username=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"username"' ':'
		//username=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"username"'
		public Keyword getUsernameKeyword_0() { return cUsernameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//username=EString
		public Assignment getUsernameAssignment_2() { return cUsernameAssignment_2; }
		
		//EString
		public RuleCall getUsernameEStringParserRuleCall_2_0() { return cUsernameEStringParserRuleCall_2_0; }
	}
	public class ContainerCredentialsPasswordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerCredentialsPassword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPasswordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPasswordAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPasswordEStringParserRuleCall_2_0 = (RuleCall)cPasswordAssignment_2.eContents().get(0);
		
		////EClass ContainerCredentialsPassword
		//ContainerCredentialsPassword returns ContainerCredentialsPassword:
		//            //Keywords
		//            '"password"' ':'
		//            password=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"password"' ':'
		//password=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"password"'
		public Keyword getPasswordKeyword_0() { return cPasswordKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//password=EString
		public Assignment getPasswordAssignment_2() { return cPasswordAssignment_2; }
		
		//EString
		public RuleCall getPasswordEStringParserRuleCall_2_0() { return cPasswordEStringParserRuleCall_2_0; }
	}
	public class ContainerCredentialsAdditionalPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerCredentialsAdditionalProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdditionalPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdditionalPropertiesJsonDocumentParserRuleCall_2_0 = (RuleCall)cAdditionalPropertiesAssignment_2.eContents().get(0);
		
		////EClass ContainerCredentialsAdditionalProperties
		//ContainerCredentialsAdditionalProperties returns ContainerCredentialsAdditionalProperties:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            additionalProperties=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Assignment getAdditionalPropertiesAssignment_2() { return cAdditionalPropertiesAssignment_2; }
		
		//JsonDocument
		public RuleCall getAdditionalPropertiesJsonDocumentParserRuleCall_2_0() { return cAdditionalPropertiesJsonDocumentParserRuleCall_2_0; }
	}
	public class JsonDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.JsonDocument");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass JsonDocument
		//JsonDocument returns jsonMM::JsonDocument:
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_0() { return cValueValueParserRuleCall_0; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass StringValue
		//StringValue returns jsonMM::StringValue:
		//            value=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class ArrayValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ArrayValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArrayValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValueValueParserRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_1_0 = (RuleCall)cValueAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ArrayValue
		//ArrayValue returns jsonMM::ArrayValue:
		//    {jsonMM::ArrayValue}
		//            //EReference is not a keyword
		//            '['(value+=Value ( "," value+=Value)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ArrayValue}
		//        //EReference is not a keyword
		//        '['(value+=Value ( "," value+=Value)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ArrayValue}
		public Action getArrayValueAction_0() { return cArrayValueAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(value+=Value ( "," value+=Value)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//value+=Value
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0_0() { return cValueValueParserRuleCall_2_0_0; }
		
		//( "," value+=Value)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//value+=Value
		public Assignment getValueAssignment_2_1_1() { return cValueAssignment_2_1_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_1_1_0() { return cValueValueParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class NullValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.NullValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNullEnumEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NullValue
		//NullValue returns jsonMM::NullValue:
		//            value=NullEnum
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NullEnum
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NullEnum
		public RuleCall getValueNullEnumEnumRuleCall_0() { return cValueNullEnumEnumRuleCall_0; }
	}
	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.NumberValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEDoubleParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NumberValue
		//NumberValue returns jsonMM::NumberValue:
		//            value=EDouble
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EDouble
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_0() { return cValueEDoubleParserRuleCall_0; }
	}
	public class ObjectValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ObjectValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cKeyvaluepairAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_0_0 = (RuleCall)cKeyvaluepairAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cKeyvaluepairAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0 = (RuleCall)cKeyvaluepairAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ObjectValue
		//ObjectValue returns jsonMM::ObjectValue:
		//    {jsonMM::ObjectValue}
		//    '{'
		//            //EReference is not a keyword
		//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ObjectValue}
		//'{'
		//        //EReference is not a keyword
		//        (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ObjectValue}
		public Action getObjectValueAction_0() { return cObjectValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		////EReference is not a keyword
		//(keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_0() { return cKeyvaluepairAssignment_2_0; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_0_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_0_0; }
		
		//( "," keyvaluepair+=KeyValuePair)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_1_1() { return cKeyvaluepairAssignment_2_1_1; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEBooleanParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass BooleanValue
		//BooleanValue returns jsonMM::BooleanValue:
		//            value=EBoolean
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EBoolean
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_0() { return cValueEBooleanParserRuleCall_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EDouble");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDouble returns ecore::EDouble:
		//    E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class KeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.KeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		////EClass KeyValuePair
		//KeyValuePair returns jsonMM::KeyValuePair:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            value=Value
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//value=Value
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean returns ecore::EBoolean:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EnvElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.Env");
		private final Assignment cEnvAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvEnvAbstractParserRuleCall_0 = (RuleCall)cEnvAssignment.eContents().get(0);
		
		////EClass Env
		//Env returns Env:
		//            //EReference is not a keyword
		//            env=EnvAbstract
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//env=EnvAbstract
		public Assignment getEnvAssignment() { return cEnvAssignment; }
		
		//EnvAbstract
		public RuleCall getEnvEnvAbstractParserRuleCall_0() { return cEnvEnvAbstractParserRuleCall_0; }
	}
	public class EnvTypeStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeString");
		private final Assignment cEnvAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvEStringParserRuleCall_0 = (RuleCall)cEnvAssignment.eContents().get(0);
		
		////EClass EnvTypeString
		//EnvTypeString returns EnvTypeString:
		//            env=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//env=EString
		public Assignment getEnvAssignment() { return cEnvAssignment; }
		
		//EString
		public RuleCall getEnvEStringParserRuleCall_0() { return cEnvEStringParserRuleCall_0; }
	}
	public class EnvTypeIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeInteger");
		private final Assignment cEnvAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvEDoubleObjectParserRuleCall_0 = (RuleCall)cEnvAssignment.eContents().get(0);
		
		////EClass EnvTypeInteger
		//EnvTypeInteger returns EnvTypeInteger:
		//            env=EDoubleObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//env=EDoubleObject
		public Assignment getEnvAssignment() { return cEnvAssignment; }
		
		//EDoubleObject
		public RuleCall getEnvEDoubleObjectParserRuleCall_0() { return cEnvEDoubleObjectParserRuleCall_0; }
	}
	public class EnvTypeNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeNumber");
		private final Assignment cEnvAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvEDoubleObjectParserRuleCall_0 = (RuleCall)cEnvAssignment.eContents().get(0);
		
		////EClass EnvTypeNumber
		//EnvTypeNumber returns EnvTypeNumber:
		//            env=EDoubleObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//env=EDoubleObject
		public Assignment getEnvAssignment() { return cEnvAssignment; }
		
		//EDoubleObject
		public RuleCall getEnvEDoubleObjectParserRuleCall_0() { return cEnvEDoubleObjectParserRuleCall_0; }
	}
	public class EnvTypeBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeBoolean");
		private final Assignment cEnvAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvEBooleanObjectParserRuleCall_0 = (RuleCall)cEnvAssignment.eContents().get(0);
		
		////EClass EnvTypeBoolean
		//EnvTypeBoolean returns EnvTypeBoolean:
		//            env=EBooleanObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//env=EBooleanObject
		public Assignment getEnvAssignment() { return cEnvAssignment; }
		
		//EBooleanObject
		public RuleCall getEnvEBooleanObjectParserRuleCall_0() { return cEnvEBooleanObjectParserRuleCall_0; }
	}
	public class EnvTypeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvTypeObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cEnvAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cEnvEnvPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cEnvAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cEnvAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cEnvEnvPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cEnvAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass EnvTypeObject
		//EnvTypeObject returns EnvTypeObject:
		//    {EnvTypeObject}
		//            //EReference is not a keyword
		//            '{'(env+=EnvPropertiesAbstract ( "," env+=EnvPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvTypeObject}
		//        //EReference is not a keyword
		//        '{'(env+=EnvPropertiesAbstract ( "," env+=EnvPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{EnvTypeObject}
		public Action getEnvTypeObjectAction_0() { return cEnvTypeObjectAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(env+=EnvPropertiesAbstract ( "," env+=EnvPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//env+=EnvPropertiesAbstract
		public Assignment getEnvAssignment_2_0() { return cEnvAssignment_2_0; }
		
		//EnvPropertiesAbstract
		public RuleCall getEnvEnvPropertiesAbstractParserRuleCall_2_0_0() { return cEnvEnvPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," env+=EnvPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//env+=EnvPropertiesAbstract
		public Assignment getEnvAssignment_2_1_1() { return cEnvAssignment_2_1_1; }
		
		//EnvPropertiesAbstract
		public RuleCall getEnvEnvPropertiesAbstractParserRuleCall_2_1_1_0() { return cEnvEnvPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class EnvTypeArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvTypeArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cEnvAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cEnvEnvItemsParserRuleCall_2_0_0 = (RuleCall)cEnvAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cEnvAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cEnvEnvItemsParserRuleCall_2_1_1_0 = (RuleCall)cEnvAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass EnvTypeArray
		//EnvTypeArray returns EnvTypeArray:
		//    {EnvTypeArray}
		//            //EReference is not a keyword
		//            '['(env+=EnvItems ( "," env+=EnvItems)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{EnvTypeArray}
		//        //EReference is not a keyword
		//        '['(env+=EnvItems ( "," env+=EnvItems)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{EnvTypeArray}
		public Action getEnvTypeArrayAction_0() { return cEnvTypeArrayAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(env+=EnvItems ( "," env+=EnvItems)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//env+=EnvItems
		public Assignment getEnvAssignment_2_0() { return cEnvAssignment_2_0; }
		
		//EnvItems
		public RuleCall getEnvEnvItemsParserRuleCall_2_0_0() { return cEnvEnvItemsParserRuleCall_2_0_0; }
		
		//( "," env+=EnvItems)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//env+=EnvItems
		public Assignment getEnvAssignment_2_1_1() { return cEnvAssignment_2_1_1; }
		
		//EnvItems
		public RuleCall getEnvEnvItemsParserRuleCall_2_1_1_0() { return cEnvEnvItemsParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class EnvTypeNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvTypeNull");
		private final Assignment cEnvAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEnvNullValueParserRuleCall_0 = (RuleCall)cEnvAssignment.eContents().get(0);
		
		////EClass EnvTypeNull
		//EnvTypeNull returns EnvTypeNull:
		//            //EReference is not a keyword
		//            env=NullValue
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//env=NullValue
		public Assignment getEnvAssignment() { return cEnvAssignment; }
		
		//NullValue
		public RuleCall getEnvNullValueParserRuleCall_0() { return cEnvNullValueParserRuleCall_0; }
	}
	public class EDoubleObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EDoubleObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDoubleObject returns ecore::EDoubleObject:
		//    E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject returns ecore::EBooleanObject:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EnvAdditionalPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvAdditionalProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdditionalPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdditionalPropertiesJsonDocumentParserRuleCall_2_0 = (RuleCall)cAdditionalPropertiesAssignment_2.eContents().get(0);
		
		////EClass EnvAdditionalProperties
		//EnvAdditionalProperties returns EnvAdditionalProperties:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            additionalProperties=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Assignment getAdditionalPropertiesAssignment_2() { return cAdditionalPropertiesAssignment_2; }
		
		//JsonDocument
		public RuleCall getAdditionalPropertiesJsonDocumentParserRuleCall_2_0() { return cAdditionalPropertiesJsonDocumentParserRuleCall_2_0; }
	}
	public class EnvItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.EnvItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsJsonDocumentParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass EnvItems
		//EnvItems returns EnvItems:
		//            //EReference is not a keyword
		//            items=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=JsonDocument
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//JsonDocument
		public RuleCall getItemsJsonDocumentParserRuleCall_0() { return cItemsJsonDocumentParserRuleCall_0; }
	}
	public class ContainerPortsItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsContainerPortsItemsAbstractParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItems
		//ContainerPortsItems returns ContainerPortsItems:
		//            //EReference is not a keyword
		//            items=ContainerPortsItemsAbstract
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=ContainerPortsItemsAbstract
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//ContainerPortsItemsAbstract
		public RuleCall getItemsContainerPortsItemsAbstractParserRuleCall_0() { return cItemsContainerPortsItemsAbstractParserRuleCall_0; }
	}
	public class ContainerPortsItemsTypeStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeString");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEStringParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItemsTypeString
		//ContainerPortsItemsTypeString returns ContainerPortsItemsTypeString:
		//            items=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EString
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EString
		public RuleCall getItemsEStringParserRuleCall_0() { return cItemsEStringParserRuleCall_0; }
	}
	public class ContainerPortsItemsTypeIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeInteger");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEDoubleObjectParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItemsTypeInteger
		//ContainerPortsItemsTypeInteger returns ContainerPortsItemsTypeInteger:
		//            items=EDoubleObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EDoubleObject
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EDoubleObject
		public RuleCall getItemsEDoubleObjectParserRuleCall_0() { return cItemsEDoubleObjectParserRuleCall_0; }
	}
	public class ContainerPortsItemsTypeNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeNumber");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEDoubleObjectParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItemsTypeNumber
		//ContainerPortsItemsTypeNumber returns ContainerPortsItemsTypeNumber:
		//            items=EDoubleObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EDoubleObject
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EDoubleObject
		public RuleCall getItemsEDoubleObjectParserRuleCall_0() { return cItemsEDoubleObjectParserRuleCall_0; }
	}
	public class ContainerPortsItemsTypeBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeBoolean");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEBooleanObjectParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItemsTypeBoolean
		//ContainerPortsItemsTypeBoolean returns ContainerPortsItemsTypeBoolean:
		//            items=EBooleanObject
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EBooleanObject
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EBooleanObject
		public RuleCall getItemsEBooleanObjectParserRuleCall_0() { return cItemsEBooleanObjectParserRuleCall_0; }
	}
	public class ContainerPortsItemsTypeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerPortsItemsTypeObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cItemsContainerPortsItemsPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cItemsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cItemsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cItemsContainerPortsItemsPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cItemsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ContainerPortsItemsTypeObject
		//ContainerPortsItemsTypeObject returns ContainerPortsItemsTypeObject:
		//    {ContainerPortsItemsTypeObject}
		//            //EReference is not a keyword
		//            '{'(items+=ContainerPortsItemsPropertiesAbstract ( "," items+=ContainerPortsItemsPropertiesAbstract)* )?'}'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ContainerPortsItemsTypeObject}
		//        //EReference is not a keyword
		//        '{'(items+=ContainerPortsItemsPropertiesAbstract ( "," items+=ContainerPortsItemsPropertiesAbstract)* )?'}'
		public Group getGroup() { return cGroup; }
		
		//{ContainerPortsItemsTypeObject}
		public Action getContainerPortsItemsTypeObjectAction_0() { return cContainerPortsItemsTypeObjectAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(items+=ContainerPortsItemsPropertiesAbstract ( "," items+=ContainerPortsItemsPropertiesAbstract)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//items+=ContainerPortsItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_0() { return cItemsAssignment_2_0; }
		
		//ContainerPortsItemsPropertiesAbstract
		public RuleCall getItemsContainerPortsItemsPropertiesAbstractParserRuleCall_2_0_0() { return cItemsContainerPortsItemsPropertiesAbstractParserRuleCall_2_0_0; }
		
		//( "," items+=ContainerPortsItemsPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//items+=ContainerPortsItemsPropertiesAbstract
		public Assignment getItemsAssignment_2_1_1() { return cItemsAssignment_2_1_1; }
		
		//ContainerPortsItemsPropertiesAbstract
		public RuleCall getItemsContainerPortsItemsPropertiesAbstractParserRuleCall_2_1_1_0() { return cItemsContainerPortsItemsPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ContainerPortsItemsTypeArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerPortsItemsTypeArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cItemsAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cItemsContainerPortsItemsItemsParserRuleCall_2_0_0 = (RuleCall)cItemsAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cItemsAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cItemsContainerPortsItemsItemsParserRuleCall_2_1_1_0 = (RuleCall)cItemsAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ContainerPortsItemsTypeArray
		//ContainerPortsItemsTypeArray returns ContainerPortsItemsTypeArray:
		//    {ContainerPortsItemsTypeArray}
		//            //EReference is not a keyword
		//            '['(items+=ContainerPortsItemsItems ( "," items+=ContainerPortsItemsItems)* )?']'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{ContainerPortsItemsTypeArray}
		//        //EReference is not a keyword
		//        '['(items+=ContainerPortsItemsItems ( "," items+=ContainerPortsItemsItems)* )?']'
		public Group getGroup() { return cGroup; }
		
		//{ContainerPortsItemsTypeArray}
		public Action getContainerPortsItemsTypeArrayAction_0() { return cContainerPortsItemsTypeArrayAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(items+=ContainerPortsItemsItems ( "," items+=ContainerPortsItemsItems)* )?
		public Group getGroup_2() { return cGroup_2; }
		
		//items+=ContainerPortsItemsItems
		public Assignment getItemsAssignment_2_0() { return cItemsAssignment_2_0; }
		
		//ContainerPortsItemsItems
		public RuleCall getItemsContainerPortsItemsItemsParserRuleCall_2_0_0() { return cItemsContainerPortsItemsItemsParserRuleCall_2_0_0; }
		
		//( "," items+=ContainerPortsItemsItems)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//items+=ContainerPortsItemsItems
		public Assignment getItemsAssignment_2_1_1() { return cItemsAssignment_2_1_1; }
		
		//ContainerPortsItemsItems
		public RuleCall getItemsContainerPortsItemsItemsParserRuleCall_2_1_1_0() { return cItemsContainerPortsItemsItemsParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class ContainerPortsItemsTypeNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsTypeNull");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsNullValueParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItemsTypeNull
		//ContainerPortsItemsTypeNull returns ContainerPortsItemsTypeNull:
		//            //EReference is not a keyword
		//            items=NullValue
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=NullValue
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//NullValue
		public RuleCall getItemsNullValueParserRuleCall_0() { return cItemsNullValueParserRuleCall_0; }
	}
	public class ContainerPortsItemsAdditionalPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsAdditionalProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdditionalPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdditionalPropertiesJsonDocumentParserRuleCall_2_0 = (RuleCall)cAdditionalPropertiesAssignment_2.eContents().get(0);
		
		////EClass ContainerPortsItemsAdditionalProperties
		//ContainerPortsItemsAdditionalProperties returns ContainerPortsItemsAdditionalProperties:
		//            //KeyValue
		//            key=EString
		//            ':'
		//            //EReference is not a keyword
		//            additionalProperties=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString
		//':'
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Assignment getAdditionalPropertiesAssignment_2() { return cAdditionalPropertiesAssignment_2; }
		
		//JsonDocument
		public RuleCall getAdditionalPropertiesJsonDocumentParserRuleCall_2_0() { return cAdditionalPropertiesJsonDocumentParserRuleCall_2_0; }
	}
	public class ContainerPortsItemsItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerPortsItemsItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsJsonDocumentParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerPortsItemsItems
		//ContainerPortsItemsItems returns ContainerPortsItemsItems:
		//            //EReference is not a keyword
		//            items=JsonDocument
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=JsonDocument
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//JsonDocument
		public RuleCall getItemsJsonDocumentParserRuleCall_0() { return cItemsJsonDocumentParserRuleCall_0; }
	}
	public class ContainerVolumesItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.ContainerVolumesItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsEStringParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ContainerVolumesItems
		//ContainerVolumesItems returns ContainerVolumesItems:
		//            items=EString
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//items=EString
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//EString
		public RuleCall getItemsEStringParserRuleCall_0() { return cItemsEStringParserRuleCall_0; }
	}
	public class VALID_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.VALID_STRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VALID_STRING: STRING  | KEYWORD ;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING  | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cContainerKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cImageKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cPasswordKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cCredentialsKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cVolumesKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cOptionsKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cEnvKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cPortsKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cUsernameKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		
		//KEYWORD:
		//'"container"'  |
		//'"image"'  |
		//'"password"'  |
		//'"credentials"'  |
		//'"volumes"'  |
		//'"options"'  |
		//'"env"'  |
		//'"ports"'  |
		//'"username"'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'"container"'  |
		//'"image"'  |
		//'"password"'  |
		//'"credentials"'  |
		//'"volumes"'  |
		//'"options"'  |
		//'"env"'  |
		//'"ports"'  |
		//'"username"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'"container"'
		public Keyword getContainerKeyword_0() { return cContainerKeyword_0; }
		
		//'"image"'
		public Keyword getImageKeyword_1() { return cImageKeyword_1; }
		
		//'"password"'
		public Keyword getPasswordKeyword_2() { return cPasswordKeyword_2; }
		
		//'"credentials"'
		public Keyword getCredentialsKeyword_3() { return cCredentialsKeyword_3; }
		
		//'"volumes"'
		public Keyword getVolumesKeyword_4() { return cVolumesKeyword_4; }
		
		//'"options"'
		public Keyword getOptionsKeyword_5() { return cOptionsKeyword_5; }
		
		//'"env"'
		public Keyword getEnvKeyword_6() { return cEnvKeyword_6; }
		
		//'"ports"'
		public Keyword getPortsKeyword_7() { return cPortsKeyword_7; }
		
		//'"username"'
		public Keyword getUsernameKeyword_8() { return cUsernameKeyword_8; }
	}
	
	public class NullEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.NullEnum");
		private final EnumLiteralDeclaration cNullEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNullNullKeyword_0 = (Keyword)cNullEnumLiteralDeclaration.eContents().get(0);
		
		//enum NullEnum returns jsonMM::NullEnum:
		//                null = 'null';
		public EnumRule getRule() { return rule; }
		
		//null = 'null'
		public EnumLiteralDeclaration getNullEnumLiteralDeclaration() { return cNullEnumLiteralDeclaration; }
		
		//'null'
		public Keyword getNullNullKeyword_0() { return cNullNullKeyword_0; }
	}
	
	private final NormalJobContainerOneOf1Elements pNormalJobContainerOneOf1;
	private final ContainerPropertiesAbstractElements pContainerPropertiesAbstract;
	private final ContainerCredentialsPropertiesAbstractElements pContainerCredentialsPropertiesAbstract;
	private final ValueElements pValue;
	private final EnvAbstractElements pEnvAbstract;
	private final EnvPropertiesAbstractElements pEnvPropertiesAbstract;
	private final ContainerPortsItemsAbstractElements pContainerPortsItemsAbstract;
	private final ContainerPortsItemsPropertiesAbstractElements pContainerPortsItemsPropertiesAbstract;
	private final ContainerElements pContainer;
	private final ContainerImageElements pContainerImage;
	private final ContainerCredentialsElements pContainerCredentials;
	private final ContainerEnvElements pContainerEnv;
	private final ContainerPortsElements pContainerPorts;
	private final ContainerVolumesElements pContainerVolumes;
	private final ContainerOptionsElements pContainerOptions;
	private final EStringElements pEString;
	private final ContainerCredentialsUsernameElements pContainerCredentialsUsername;
	private final ContainerCredentialsPasswordElements pContainerCredentialsPassword;
	private final ContainerCredentialsAdditionalPropertiesElements pContainerCredentialsAdditionalProperties;
	private final JsonDocumentElements pJsonDocument;
	private final StringValueElements pStringValue;
	private final ArrayValueElements pArrayValue;
	private final NullValueElements pNullValue;
	private final NumberValueElements pNumberValue;
	private final ObjectValueElements pObjectValue;
	private final BooleanValueElements pBooleanValue;
	private final NullEnumElements eNullEnum;
	private final EDoubleElements pEDouble;
	private final KeyValuePairElements pKeyValuePair;
	private final EBooleanElements pEBoolean;
	private final EnvElements pEnv;
	private final EnvTypeStringElements pEnvTypeString;
	private final EnvTypeIntegerElements pEnvTypeInteger;
	private final EnvTypeNumberElements pEnvTypeNumber;
	private final EnvTypeBooleanElements pEnvTypeBoolean;
	private final EnvTypeObjectElements pEnvTypeObject;
	private final EnvTypeArrayElements pEnvTypeArray;
	private final EnvTypeNullElements pEnvTypeNull;
	private final EDoubleObjectElements pEDoubleObject;
	private final EBooleanObjectElements pEBooleanObject;
	private final EnvAdditionalPropertiesElements pEnvAdditionalProperties;
	private final EnvItemsElements pEnvItems;
	private final ContainerPortsItemsElements pContainerPortsItems;
	private final ContainerPortsItemsTypeStringElements pContainerPortsItemsTypeString;
	private final ContainerPortsItemsTypeIntegerElements pContainerPortsItemsTypeInteger;
	private final ContainerPortsItemsTypeNumberElements pContainerPortsItemsTypeNumber;
	private final ContainerPortsItemsTypeBooleanElements pContainerPortsItemsTypeBoolean;
	private final ContainerPortsItemsTypeObjectElements pContainerPortsItemsTypeObject;
	private final ContainerPortsItemsTypeArrayElements pContainerPortsItemsTypeArray;
	private final ContainerPortsItemsTypeNullElements pContainerPortsItemsTypeNull;
	private final ContainerPortsItemsAdditionalPropertiesElements pContainerPortsItemsAdditionalProperties;
	private final ContainerPortsItemsItemsElements pContainerPortsItemsItems;
	private final ContainerVolumesItemsElements pContainerVolumesItems;
	private final TerminalRule tINT;
	private final VALID_STRINGElements pVALID_STRING;
	private final TerminalRule tSTRING;
	private final TerminalRule tE_INT;
	private final KEYWORDElements pKEYWORD;
	private final TerminalRule tE_DOUBLE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public NormalJobContainerOneOf1GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pNormalJobContainerOneOf1 = new NormalJobContainerOneOf1Elements();
		this.pContainerPropertiesAbstract = new ContainerPropertiesAbstractElements();
		this.pContainerCredentialsPropertiesAbstract = new ContainerCredentialsPropertiesAbstractElements();
		this.pValue = new ValueElements();
		this.pEnvAbstract = new EnvAbstractElements();
		this.pEnvPropertiesAbstract = new EnvPropertiesAbstractElements();
		this.pContainerPortsItemsAbstract = new ContainerPortsItemsAbstractElements();
		this.pContainerPortsItemsPropertiesAbstract = new ContainerPortsItemsPropertiesAbstractElements();
		this.pContainer = new ContainerElements();
		this.pContainerImage = new ContainerImageElements();
		this.pContainerCredentials = new ContainerCredentialsElements();
		this.pContainerEnv = new ContainerEnvElements();
		this.pContainerPorts = new ContainerPortsElements();
		this.pContainerVolumes = new ContainerVolumesElements();
		this.pContainerOptions = new ContainerOptionsElements();
		this.pEString = new EStringElements();
		this.pContainerCredentialsUsername = new ContainerCredentialsUsernameElements();
		this.pContainerCredentialsPassword = new ContainerCredentialsPasswordElements();
		this.pContainerCredentialsAdditionalProperties = new ContainerCredentialsAdditionalPropertiesElements();
		this.pJsonDocument = new JsonDocumentElements();
		this.pStringValue = new StringValueElements();
		this.pArrayValue = new ArrayValueElements();
		this.pNullValue = new NullValueElements();
		this.pNumberValue = new NumberValueElements();
		this.pObjectValue = new ObjectValueElements();
		this.pBooleanValue = new BooleanValueElements();
		this.eNullEnum = new NullEnumElements();
		this.pEDouble = new EDoubleElements();
		this.pKeyValuePair = new KeyValuePairElements();
		this.pEBoolean = new EBooleanElements();
		this.pEnv = new EnvElements();
		this.pEnvTypeString = new EnvTypeStringElements();
		this.pEnvTypeInteger = new EnvTypeIntegerElements();
		this.pEnvTypeNumber = new EnvTypeNumberElements();
		this.pEnvTypeBoolean = new EnvTypeBooleanElements();
		this.pEnvTypeObject = new EnvTypeObjectElements();
		this.pEnvTypeArray = new EnvTypeArrayElements();
		this.pEnvTypeNull = new EnvTypeNullElements();
		this.pEDoubleObject = new EDoubleObjectElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pEnvAdditionalProperties = new EnvAdditionalPropertiesElements();
		this.pEnvItems = new EnvItemsElements();
		this.pContainerPortsItems = new ContainerPortsItemsElements();
		this.pContainerPortsItemsTypeString = new ContainerPortsItemsTypeStringElements();
		this.pContainerPortsItemsTypeInteger = new ContainerPortsItemsTypeIntegerElements();
		this.pContainerPortsItemsTypeNumber = new ContainerPortsItemsTypeNumberElements();
		this.pContainerPortsItemsTypeBoolean = new ContainerPortsItemsTypeBooleanElements();
		this.pContainerPortsItemsTypeObject = new ContainerPortsItemsTypeObjectElements();
		this.pContainerPortsItemsTypeArray = new ContainerPortsItemsTypeArrayElements();
		this.pContainerPortsItemsTypeNull = new ContainerPortsItemsTypeNullElements();
		this.pContainerPortsItemsAdditionalProperties = new ContainerPortsItemsAdditionalPropertiesElements();
		this.pContainerPortsItemsItems = new ContainerPortsItemsItemsElements();
		this.pContainerVolumesItems = new ContainerVolumesItemsElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.INT");
		this.pVALID_STRING = new VALID_STRINGElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.STRING");
		this.tE_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.E_INT");
		this.pKEYWORD = new KEYWORDElements();
		this.tE_DOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.NormalJobContainerOneOf1.E_DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("githubwf.githubwf.NormalJobContainerOneOf1".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass NormalJobContainerOneOf1
	//NormalJobContainerOneOf1 returns NormalJobContainerOneOf1:
	//            //Keywords
	//            '"container"' ':'
	//            container=Container
	//    ;
	public NormalJobContainerOneOf1Elements getNormalJobContainerOneOf1Access() {
		return pNormalJobContainerOneOf1;
	}
	
	public ParserRule getNormalJobContainerOneOf1Rule() {
		return getNormalJobContainerOneOf1Access().getRule();
	}
	
	//ContainerPropertiesAbstract returns ContainerPropertiesAbstract:
	//    ContainerImage | ContainerCredentials | ContainerEnv | ContainerPorts | ContainerVolumes | ContainerOptions;
	public ContainerPropertiesAbstractElements getContainerPropertiesAbstractAccess() {
		return pContainerPropertiesAbstract;
	}
	
	public ParserRule getContainerPropertiesAbstractRule() {
		return getContainerPropertiesAbstractAccess().getRule();
	}
	
	//ContainerCredentialsPropertiesAbstract returns ContainerCredentialsPropertiesAbstract:
	//    ContainerCredentialsUsername | ContainerCredentialsPassword | =>ContainerCredentialsAdditionalProperties;
	public ContainerCredentialsPropertiesAbstractElements getContainerCredentialsPropertiesAbstractAccess() {
		return pContainerCredentialsPropertiesAbstract;
	}
	
	public ParserRule getContainerCredentialsPropertiesAbstractRule() {
		return getContainerCredentialsPropertiesAbstractAccess().getRule();
	}
	
	//Value returns jsonMM::Value:
	//    StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//EnvAbstract returns EnvAbstract:
	//    =>EnvTypeNumber | EnvTypeString | EnvTypeInteger | EnvTypeBoolean | EnvTypeObject | EnvTypeArray | EnvTypeNull;
	public EnvAbstractElements getEnvAbstractAccess() {
		return pEnvAbstract;
	}
	
	public ParserRule getEnvAbstractRule() {
		return getEnvAbstractAccess().getRule();
	}
	
	//EnvPropertiesAbstract returns EnvPropertiesAbstract:
	//    =>EnvAdditionalProperties;
	public EnvPropertiesAbstractElements getEnvPropertiesAbstractAccess() {
		return pEnvPropertiesAbstract;
	}
	
	public ParserRule getEnvPropertiesAbstractRule() {
		return getEnvPropertiesAbstractAccess().getRule();
	}
	
	//ContainerPortsItemsAbstract returns ContainerPortsItemsAbstract:
	//    =>ContainerPortsItemsTypeNumber | ContainerPortsItemsTypeString | ContainerPortsItemsTypeInteger | ContainerPortsItemsTypeBoolean | ContainerPortsItemsTypeObject | ContainerPortsItemsTypeArray | ContainerPortsItemsTypeNull;
	public ContainerPortsItemsAbstractElements getContainerPortsItemsAbstractAccess() {
		return pContainerPortsItemsAbstract;
	}
	
	public ParserRule getContainerPortsItemsAbstractRule() {
		return getContainerPortsItemsAbstractAccess().getRule();
	}
	
	//ContainerPortsItemsPropertiesAbstract returns ContainerPortsItemsPropertiesAbstract:
	//    =>ContainerPortsItemsAdditionalProperties;
	public ContainerPortsItemsPropertiesAbstractElements getContainerPortsItemsPropertiesAbstractAccess() {
		return pContainerPortsItemsPropertiesAbstract;
	}
	
	public ParserRule getContainerPortsItemsPropertiesAbstractRule() {
		return getContainerPortsItemsPropertiesAbstractAccess().getRule();
	}
	
	////EClass Container
	//Container returns Container:
	//    {Container}
	//            //EReference is not a keyword
	//            '{'(container+=ContainerPropertiesAbstract ( "," container+=ContainerPropertiesAbstract)* )?'}'
	//    ;
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	////EClass ContainerImage
	//ContainerImage returns ContainerImage:
	//            //Keywords
	//            '"image"' ':'
	//            image=EString
	//    ;
	public ContainerImageElements getContainerImageAccess() {
		return pContainerImage;
	}
	
	public ParserRule getContainerImageRule() {
		return getContainerImageAccess().getRule();
	}
	
	////EClass ContainerCredentials
	//ContainerCredentials returns ContainerCredentials:
	//    {ContainerCredentials}
	//            //Keywords
	//            '"credentials"' ':'
	//            '{'(credentials+=ContainerCredentialsPropertiesAbstract ( "," credentials+=ContainerCredentialsPropertiesAbstract)* )?'}'
	//    ;
	public ContainerCredentialsElements getContainerCredentialsAccess() {
		return pContainerCredentials;
	}
	
	public ParserRule getContainerCredentialsRule() {
		return getContainerCredentialsAccess().getRule();
	}
	
	////EClass ContainerEnv
	//ContainerEnv returns ContainerEnv:
	//            //Keywords
	//            '"env"' ':'
	//            env=Env
	//    ;
	public ContainerEnvElements getContainerEnvAccess() {
		return pContainerEnv;
	}
	
	public ParserRule getContainerEnvRule() {
		return getContainerEnvAccess().getRule();
	}
	
	////EClass ContainerPorts
	//ContainerPorts returns ContainerPorts:
	//            //Keywords
	//            '"ports"' ':'
	//            '['ports+=ContainerPortsItems ( "," ports+=ContainerPortsItems)* ']'
	//    ;
	public ContainerPortsElements getContainerPortsAccess() {
		return pContainerPorts;
	}
	
	public ParserRule getContainerPortsRule() {
		return getContainerPortsAccess().getRule();
	}
	
	////EClass ContainerVolumes
	//ContainerVolumes returns ContainerVolumes:
	//            //Keywords
	//            '"volumes"' ':'
	//            '['volumes+=ContainerVolumesItems ( "," volumes+=ContainerVolumesItems)* ']'
	//    ;
	public ContainerVolumesElements getContainerVolumesAccess() {
		return pContainerVolumes;
	}
	
	public ParserRule getContainerVolumesRule() {
		return getContainerVolumesAccess().getRule();
	}
	
	////EClass ContainerOptions
	//ContainerOptions returns ContainerOptions:
	//            //Keywords
	//            '"options"' ':'
	//            options=EString
	//    ;
	public ContainerOptionsElements getContainerOptionsAccess() {
		return pContainerOptions;
	}
	
	public ParserRule getContainerOptionsRule() {
		return getContainerOptionsAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    VALID_STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	////EClass ContainerCredentialsUsername
	//ContainerCredentialsUsername returns ContainerCredentialsUsername:
	//            //Keywords
	//            '"username"' ':'
	//            username=EString
	//    ;
	public ContainerCredentialsUsernameElements getContainerCredentialsUsernameAccess() {
		return pContainerCredentialsUsername;
	}
	
	public ParserRule getContainerCredentialsUsernameRule() {
		return getContainerCredentialsUsernameAccess().getRule();
	}
	
	////EClass ContainerCredentialsPassword
	//ContainerCredentialsPassword returns ContainerCredentialsPassword:
	//            //Keywords
	//            '"password"' ':'
	//            password=EString
	//    ;
	public ContainerCredentialsPasswordElements getContainerCredentialsPasswordAccess() {
		return pContainerCredentialsPassword;
	}
	
	public ParserRule getContainerCredentialsPasswordRule() {
		return getContainerCredentialsPasswordAccess().getRule();
	}
	
	////EClass ContainerCredentialsAdditionalProperties
	//ContainerCredentialsAdditionalProperties returns ContainerCredentialsAdditionalProperties:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            additionalProperties=JsonDocument
	//    ;
	public ContainerCredentialsAdditionalPropertiesElements getContainerCredentialsAdditionalPropertiesAccess() {
		return pContainerCredentialsAdditionalProperties;
	}
	
	public ParserRule getContainerCredentialsAdditionalPropertiesRule() {
		return getContainerCredentialsAdditionalPropertiesAccess().getRule();
	}
	
	////EClass JsonDocument
	//JsonDocument returns jsonMM::JsonDocument:
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public JsonDocumentElements getJsonDocumentAccess() {
		return pJsonDocument;
	}
	
	public ParserRule getJsonDocumentRule() {
		return getJsonDocumentAccess().getRule();
	}
	
	////EClass StringValue
	//StringValue returns jsonMM::StringValue:
	//            value=EString
	//    ;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	////EClass ArrayValue
	//ArrayValue returns jsonMM::ArrayValue:
	//    {jsonMM::ArrayValue}
	//            //EReference is not a keyword
	//            '['(value+=Value ( "," value+=Value)* )?']'
	//    ;
	public ArrayValueElements getArrayValueAccess() {
		return pArrayValue;
	}
	
	public ParserRule getArrayValueRule() {
		return getArrayValueAccess().getRule();
	}
	
	////EClass NullValue
	//NullValue returns jsonMM::NullValue:
	//            value=NullEnum
	//    ;
	public NullValueElements getNullValueAccess() {
		return pNullValue;
	}
	
	public ParserRule getNullValueRule() {
		return getNullValueAccess().getRule();
	}
	
	////EClass NumberValue
	//NumberValue returns jsonMM::NumberValue:
	//            value=EDouble
	//    ;
	public NumberValueElements getNumberValueAccess() {
		return pNumberValue;
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}
	
	////EClass ObjectValue
	//ObjectValue returns jsonMM::ObjectValue:
	//    {jsonMM::ObjectValue}
	//    '{'
	//            //EReference is not a keyword
	//            (keyvaluepair+=KeyValuePair ( "," keyvaluepair+=KeyValuePair)* )?
	//    '}';
	public ObjectValueElements getObjectValueAccess() {
		return pObjectValue;
	}
	
	public ParserRule getObjectValueRule() {
		return getObjectValueAccess().getRule();
	}
	
	////EClass BooleanValue
	//BooleanValue returns jsonMM::BooleanValue:
	//            value=EBoolean
	//    ;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//enum NullEnum returns jsonMM::NullEnum:
	//                null = 'null';
	public NullEnumElements getNullEnumAccess() {
		return eNullEnum;
	}
	
	public EnumRule getNullEnumRule() {
		return getNullEnumAccess().getRule();
	}
	
	//EDouble returns ecore::EDouble:
	//    E_INT | E_DOUBLE;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	////EClass KeyValuePair
	//KeyValuePair returns jsonMM::KeyValuePair:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            value=Value
	//    ;
	public KeyValuePairElements getKeyValuePairAccess() {
		return pKeyValuePair;
	}
	
	public ParserRule getKeyValuePairRule() {
		return getKeyValuePairAccess().getRule();
	}
	
	//EBoolean returns ecore::EBoolean:
	//    'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	////EClass Env
	//Env returns Env:
	//            //EReference is not a keyword
	//            env=EnvAbstract
	//    ;
	public EnvElements getEnvAccess() {
		return pEnv;
	}
	
	public ParserRule getEnvRule() {
		return getEnvAccess().getRule();
	}
	
	////EClass EnvTypeString
	//EnvTypeString returns EnvTypeString:
	//            env=EString
	//    ;
	public EnvTypeStringElements getEnvTypeStringAccess() {
		return pEnvTypeString;
	}
	
	public ParserRule getEnvTypeStringRule() {
		return getEnvTypeStringAccess().getRule();
	}
	
	////EClass EnvTypeInteger
	//EnvTypeInteger returns EnvTypeInteger:
	//            env=EDoubleObject
	//    ;
	public EnvTypeIntegerElements getEnvTypeIntegerAccess() {
		return pEnvTypeInteger;
	}
	
	public ParserRule getEnvTypeIntegerRule() {
		return getEnvTypeIntegerAccess().getRule();
	}
	
	////EClass EnvTypeNumber
	//EnvTypeNumber returns EnvTypeNumber:
	//            env=EDoubleObject
	//    ;
	public EnvTypeNumberElements getEnvTypeNumberAccess() {
		return pEnvTypeNumber;
	}
	
	public ParserRule getEnvTypeNumberRule() {
		return getEnvTypeNumberAccess().getRule();
	}
	
	////EClass EnvTypeBoolean
	//EnvTypeBoolean returns EnvTypeBoolean:
	//            env=EBooleanObject
	//    ;
	public EnvTypeBooleanElements getEnvTypeBooleanAccess() {
		return pEnvTypeBoolean;
	}
	
	public ParserRule getEnvTypeBooleanRule() {
		return getEnvTypeBooleanAccess().getRule();
	}
	
	////EClass EnvTypeObject
	//EnvTypeObject returns EnvTypeObject:
	//    {EnvTypeObject}
	//            //EReference is not a keyword
	//            '{'(env+=EnvPropertiesAbstract ( "," env+=EnvPropertiesAbstract)* )?'}'
	//    ;
	public EnvTypeObjectElements getEnvTypeObjectAccess() {
		return pEnvTypeObject;
	}
	
	public ParserRule getEnvTypeObjectRule() {
		return getEnvTypeObjectAccess().getRule();
	}
	
	////EClass EnvTypeArray
	//EnvTypeArray returns EnvTypeArray:
	//    {EnvTypeArray}
	//            //EReference is not a keyword
	//            '['(env+=EnvItems ( "," env+=EnvItems)* )?']'
	//    ;
	public EnvTypeArrayElements getEnvTypeArrayAccess() {
		return pEnvTypeArray;
	}
	
	public ParserRule getEnvTypeArrayRule() {
		return getEnvTypeArrayAccess().getRule();
	}
	
	////EClass EnvTypeNull
	//EnvTypeNull returns EnvTypeNull:
	//            //EReference is not a keyword
	//            env=NullValue
	//    ;
	public EnvTypeNullElements getEnvTypeNullAccess() {
		return pEnvTypeNull;
	}
	
	public ParserRule getEnvTypeNullRule() {
		return getEnvTypeNullAccess().getRule();
	}
	
	//EDoubleObject returns ecore::EDoubleObject:
	//    E_INT | E_DOUBLE;
	public EDoubleObjectElements getEDoubleObjectAccess() {
		return pEDoubleObject;
	}
	
	public ParserRule getEDoubleObjectRule() {
		return getEDoubleObjectAccess().getRule();
	}
	
	//EBooleanObject returns ecore::EBooleanObject:
	//    'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	////EClass EnvAdditionalProperties
	//EnvAdditionalProperties returns EnvAdditionalProperties:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            additionalProperties=JsonDocument
	//    ;
	public EnvAdditionalPropertiesElements getEnvAdditionalPropertiesAccess() {
		return pEnvAdditionalProperties;
	}
	
	public ParserRule getEnvAdditionalPropertiesRule() {
		return getEnvAdditionalPropertiesAccess().getRule();
	}
	
	////EClass EnvItems
	//EnvItems returns EnvItems:
	//            //EReference is not a keyword
	//            items=JsonDocument
	//    ;
	public EnvItemsElements getEnvItemsAccess() {
		return pEnvItems;
	}
	
	public ParserRule getEnvItemsRule() {
		return getEnvItemsAccess().getRule();
	}
	
	////EClass ContainerPortsItems
	//ContainerPortsItems returns ContainerPortsItems:
	//            //EReference is not a keyword
	//            items=ContainerPortsItemsAbstract
	//    ;
	public ContainerPortsItemsElements getContainerPortsItemsAccess() {
		return pContainerPortsItems;
	}
	
	public ParserRule getContainerPortsItemsRule() {
		return getContainerPortsItemsAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeString
	//ContainerPortsItemsTypeString returns ContainerPortsItemsTypeString:
	//            items=EString
	//    ;
	public ContainerPortsItemsTypeStringElements getContainerPortsItemsTypeStringAccess() {
		return pContainerPortsItemsTypeString;
	}
	
	public ParserRule getContainerPortsItemsTypeStringRule() {
		return getContainerPortsItemsTypeStringAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeInteger
	//ContainerPortsItemsTypeInteger returns ContainerPortsItemsTypeInteger:
	//            items=EDoubleObject
	//    ;
	public ContainerPortsItemsTypeIntegerElements getContainerPortsItemsTypeIntegerAccess() {
		return pContainerPortsItemsTypeInteger;
	}
	
	public ParserRule getContainerPortsItemsTypeIntegerRule() {
		return getContainerPortsItemsTypeIntegerAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeNumber
	//ContainerPortsItemsTypeNumber returns ContainerPortsItemsTypeNumber:
	//            items=EDoubleObject
	//    ;
	public ContainerPortsItemsTypeNumberElements getContainerPortsItemsTypeNumberAccess() {
		return pContainerPortsItemsTypeNumber;
	}
	
	public ParserRule getContainerPortsItemsTypeNumberRule() {
		return getContainerPortsItemsTypeNumberAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeBoolean
	//ContainerPortsItemsTypeBoolean returns ContainerPortsItemsTypeBoolean:
	//            items=EBooleanObject
	//    ;
	public ContainerPortsItemsTypeBooleanElements getContainerPortsItemsTypeBooleanAccess() {
		return pContainerPortsItemsTypeBoolean;
	}
	
	public ParserRule getContainerPortsItemsTypeBooleanRule() {
		return getContainerPortsItemsTypeBooleanAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeObject
	//ContainerPortsItemsTypeObject returns ContainerPortsItemsTypeObject:
	//    {ContainerPortsItemsTypeObject}
	//            //EReference is not a keyword
	//            '{'(items+=ContainerPortsItemsPropertiesAbstract ( "," items+=ContainerPortsItemsPropertiesAbstract)* )?'}'
	//    ;
	public ContainerPortsItemsTypeObjectElements getContainerPortsItemsTypeObjectAccess() {
		return pContainerPortsItemsTypeObject;
	}
	
	public ParserRule getContainerPortsItemsTypeObjectRule() {
		return getContainerPortsItemsTypeObjectAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeArray
	//ContainerPortsItemsTypeArray returns ContainerPortsItemsTypeArray:
	//    {ContainerPortsItemsTypeArray}
	//            //EReference is not a keyword
	//            '['(items+=ContainerPortsItemsItems ( "," items+=ContainerPortsItemsItems)* )?']'
	//    ;
	public ContainerPortsItemsTypeArrayElements getContainerPortsItemsTypeArrayAccess() {
		return pContainerPortsItemsTypeArray;
	}
	
	public ParserRule getContainerPortsItemsTypeArrayRule() {
		return getContainerPortsItemsTypeArrayAccess().getRule();
	}
	
	////EClass ContainerPortsItemsTypeNull
	//ContainerPortsItemsTypeNull returns ContainerPortsItemsTypeNull:
	//            //EReference is not a keyword
	//            items=NullValue
	//    ;
	public ContainerPortsItemsTypeNullElements getContainerPortsItemsTypeNullAccess() {
		return pContainerPortsItemsTypeNull;
	}
	
	public ParserRule getContainerPortsItemsTypeNullRule() {
		return getContainerPortsItemsTypeNullAccess().getRule();
	}
	
	////EClass ContainerPortsItemsAdditionalProperties
	//ContainerPortsItemsAdditionalProperties returns ContainerPortsItemsAdditionalProperties:
	//            //KeyValue
	//            key=EString
	//            ':'
	//            //EReference is not a keyword
	//            additionalProperties=JsonDocument
	//    ;
	public ContainerPortsItemsAdditionalPropertiesElements getContainerPortsItemsAdditionalPropertiesAccess() {
		return pContainerPortsItemsAdditionalProperties;
	}
	
	public ParserRule getContainerPortsItemsAdditionalPropertiesRule() {
		return getContainerPortsItemsAdditionalPropertiesAccess().getRule();
	}
	
	////EClass ContainerPortsItemsItems
	//ContainerPortsItemsItems returns ContainerPortsItemsItems:
	//            //EReference is not a keyword
	//            items=JsonDocument
	//    ;
	public ContainerPortsItemsItemsElements getContainerPortsItemsItemsAccess() {
		return pContainerPortsItemsItems;
	}
	
	public ParserRule getContainerPortsItemsItemsRule() {
		return getContainerPortsItemsItemsAccess().getRule();
	}
	
	////EClass ContainerVolumesItems
	//ContainerVolumesItems returns ContainerVolumesItems:
	//            items=EString
	//    ;
	public ContainerVolumesItemsElements getContainerVolumesItemsAccess() {
		return pContainerVolumesItems;
	}
	
	public ParserRule getContainerVolumesItemsRule() {
		return getContainerVolumesItemsAccess().getRule();
	}
	
	///**
	// * In JSON the first digit of an integer can not be 0, unless it is 0 itself.
	// */
	//@Override
	//terminal INT returns ecore::EInt:
	//    ('0' |  (('1'..'9') ('0'..'9')*))
	//;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//VALID_STRING: STRING  | KEYWORD ;
	public VALID_STRINGElements getVALID_STRINGAccess() {
		return pVALID_STRING;
	}
	
	public ParserRule getVALID_STRINGRule() {
		return getVALID_STRINGAccess().getRule();
	}
	
	///**
	// * In JSON the single quote for String is not admitted
	// */
	//@Override
	//terminal STRING:
	//    '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"'
	//;
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal E_INT :
	//    '-'? INT;
	public TerminalRule getE_INTRule() {
		return tE_INT;
	}
	
	//KEYWORD:
	//'"container"'  |
	//'"image"'  |
	//'"password"'  |
	//'"credentials"'  |
	//'"volumes"'  |
	//'"options"'  |
	//'"env"'  |
	//'"ports"'  |
	//'"username"'
	//;
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal E_DOUBLE :
	//    '-'? INT ('.' INT+)? (('E'|'e') ('+'|'-')? INT)?
	//;
	public TerminalRule getE_DOUBLERule() {
		return tE_DOUBLE;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
