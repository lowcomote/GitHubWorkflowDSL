/*
 * generated by Xtext 2.23.0
 */
package githubwf.githubwf.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GithubwfRootConcurrencyOneOf1GrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class GithubwfRootConcurrencyOneOf1Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.GithubwfRootConcurrencyOneOf1");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cConcurrencyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConcurrencyAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConcurrencyConcurrencyParserRuleCall_2_0 = (RuleCall)cConcurrencyAssignment_2.eContents().get(0);
		
		////EClass GithubwfRootConcurrencyOneOf1
		//GithubwfRootConcurrencyOneOf1: //Keywords
		//	'"concurrency"' ':' concurrency=Concurrency;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"concurrency"' ':' concurrency=Concurrency
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"concurrency"'
		public Keyword getConcurrencyKeyword_0() { return cConcurrencyKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//concurrency=Concurrency
		public Assignment getConcurrencyAssignment_2() { return cConcurrencyAssignment_2; }
		
		//Concurrency
		public RuleCall getConcurrencyConcurrencyParserRuleCall_2_0() { return cConcurrencyConcurrencyParserRuleCall_2_0; }
	}
	public class ConcurrencyPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyPropertiesAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConcurrencyGroupParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConcurrencyCancel_45in_45progressParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConcurrencyPropertiesAbstract:
		//	ConcurrencyGroup | ConcurrencyCancel_45in_45progress;
		@Override public ParserRule getRule() { return rule; }
		
		//ConcurrencyGroup | ConcurrencyCancel_45in_45progress
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ConcurrencyGroup
		public RuleCall getConcurrencyGroupParserRuleCall_0() { return cConcurrencyGroupParserRuleCall_0; }
		
		//ConcurrencyCancel_45in_45progress
		public RuleCall getConcurrencyCancel_45in_45progressParserRuleCall_1() { return cConcurrencyCancel_45in_45progressParserRuleCall_1; }
	}
	public class ConcurrencyCancel_45in_45progressAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressAbstract");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeNumberParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeIntegerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeBooleanParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeObjectParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeArrayParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cConcurrencyCancel_45in_45progressTypeNullParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ConcurrencyCancel_45in_45progressAbstract:
		//	=> ConcurrencyCancel_45in_45progressTypeNumber | ConcurrencyCancel_45in_45progressTypeString |
		//	ConcurrencyCancel_45in_45progressTypeInteger | ConcurrencyCancel_45in_45progressTypeBoolean |
		//	ConcurrencyCancel_45in_45progressTypeObject | ConcurrencyCancel_45in_45progressTypeArray |
		//	ConcurrencyCancel_45in_45progressTypeNull;
		@Override public ParserRule getRule() { return rule; }
		
		//=> ConcurrencyCancel_45in_45progressTypeNumber | ConcurrencyCancel_45in_45progressTypeString |
		//ConcurrencyCancel_45in_45progressTypeInteger | ConcurrencyCancel_45in_45progressTypeBoolean |
		//ConcurrencyCancel_45in_45progressTypeObject | ConcurrencyCancel_45in_45progressTypeArray |
		//ConcurrencyCancel_45in_45progressTypeNull
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//=> ConcurrencyCancel_45in_45progressTypeNumber
		public RuleCall getConcurrencyCancel_45in_45progressTypeNumberParserRuleCall_0() { return cConcurrencyCancel_45in_45progressTypeNumberParserRuleCall_0; }
		
		//ConcurrencyCancel_45in_45progressTypeString
		public RuleCall getConcurrencyCancel_45in_45progressTypeStringParserRuleCall_1() { return cConcurrencyCancel_45in_45progressTypeStringParserRuleCall_1; }
		
		//ConcurrencyCancel_45in_45progressTypeInteger
		public RuleCall getConcurrencyCancel_45in_45progressTypeIntegerParserRuleCall_2() { return cConcurrencyCancel_45in_45progressTypeIntegerParserRuleCall_2; }
		
		//ConcurrencyCancel_45in_45progressTypeBoolean
		public RuleCall getConcurrencyCancel_45in_45progressTypeBooleanParserRuleCall_3() { return cConcurrencyCancel_45in_45progressTypeBooleanParserRuleCall_3; }
		
		//ConcurrencyCancel_45in_45progressTypeObject
		public RuleCall getConcurrencyCancel_45in_45progressTypeObjectParserRuleCall_4() { return cConcurrencyCancel_45in_45progressTypeObjectParserRuleCall_4; }
		
		//ConcurrencyCancel_45in_45progressTypeArray
		public RuleCall getConcurrencyCancel_45in_45progressTypeArrayParserRuleCall_5() { return cConcurrencyCancel_45in_45progressTypeArrayParserRuleCall_5; }
		
		//ConcurrencyCancel_45in_45progressTypeNull
		public RuleCall getConcurrencyCancel_45in_45progressTypeNullParserRuleCall_6() { return cConcurrencyCancel_45in_45progressTypeNullParserRuleCall_6; }
	}
	public class ConcurrencyCancel_45in_45progressPropertiesAbstractElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressPropertiesAbstract");
		private final RuleCall cConcurrencyCancel_45in_45progressAdditionalPropertiesParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ConcurrencyCancel_45in_45progressPropertiesAbstract:
		//	=> ConcurrencyCancel_45in_45progressAdditionalProperties;
		@Override public ParserRule getRule() { return rule; }
		
		//=> ConcurrencyCancel_45in_45progressAdditionalProperties
		public RuleCall getConcurrencyCancel_45in_45progressAdditionalPropertiesParserRuleCall() { return cConcurrencyCancel_45in_45progressAdditionalPropertiesParserRuleCall; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cArrayValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNullValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNumberValueParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cObjectValueParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cBooleanValueParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//Value jsonMM::Value:
		//	StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
		@Override public ParserRule getRule() { return rule; }
		
		//StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//StringValue
		public RuleCall getStringValueParserRuleCall_0() { return cStringValueParserRuleCall_0; }
		
		//ArrayValue
		public RuleCall getArrayValueParserRuleCall_1() { return cArrayValueParserRuleCall_1; }
		
		//NullValue
		public RuleCall getNullValueParserRuleCall_2() { return cNullValueParserRuleCall_2; }
		
		//NumberValue
		public RuleCall getNumberValueParserRuleCall_3() { return cNumberValueParserRuleCall_3; }
		
		//ObjectValue
		public RuleCall getObjectValueParserRuleCall_4() { return cObjectValueParserRuleCall_4; }
		
		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_5() { return cBooleanValueParserRuleCall_5; }
	}
	public class ConcurrencyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.Concurrency");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConcurrencyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cConcurrencyAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_0_0 = (RuleCall)cConcurrencyAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cConcurrencyAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_1_1_0 = (RuleCall)cConcurrencyAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass Concurrency
		//Concurrency:
		//	{Concurrency}
		//	//EReference is not a keyword
		//	'{' (concurrency+=ConcurrencyPropertiesAbstract ("," concurrency+=ConcurrencyPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Concurrency} //EReference is not a keyword
		//'{' (concurrency+=ConcurrencyPropertiesAbstract ("," concurrency+=ConcurrencyPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Concurrency}
		public Action getConcurrencyAction_0() { return cConcurrencyAction_0; }
		
		////EReference is not a keyword
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(concurrency+=ConcurrencyPropertiesAbstract ("," concurrency+=ConcurrencyPropertiesAbstract)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//concurrency+=ConcurrencyPropertiesAbstract
		public Assignment getConcurrencyAssignment_2_0() { return cConcurrencyAssignment_2_0; }
		
		//ConcurrencyPropertiesAbstract
		public RuleCall getConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_0_0() { return cConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_0_0; }
		
		//("," concurrency+=ConcurrencyPropertiesAbstract)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//concurrency+=ConcurrencyPropertiesAbstract
		public Assignment getConcurrencyAssignment_2_1_1() { return cConcurrencyAssignment_2_1_1; }
		
		//ConcurrencyPropertiesAbstract
		public RuleCall getConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_1_1_0() { return cConcurrencyConcurrencyPropertiesAbstractParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ConcurrencyGroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyGroup");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cGroupAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cGroupEStringParserRuleCall_2_0 = (RuleCall)cGroupAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyGroup
		//ConcurrencyGroup: //Keywords
		//	'"group"' ':' group=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"group"' ':' group=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"group"'
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//group=EString
		public Assignment getGroupAssignment_2() { return cGroupAssignment_2; }
		
		//EString
		public RuleCall getGroupEStringParserRuleCall_2_0() { return cGroupEStringParserRuleCall_2_0; }
	}
	public class ConcurrencyCancel_45in_45progressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progress");
		private final Assignment cCancel_45in_45progressAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cCancel_45in_45progressConcurrencyCancel_45in_45progressAbstractParserRuleCall_0 = (RuleCall)cCancel_45in_45progressAssignment.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progress
		//ConcurrencyCancel_45in_45progress:
		//	cancel_45in_45progress=ConcurrencyCancel_45in_45progressAbstract;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//cancel_45in_45progress=ConcurrencyCancel_45in_45progressAbstract
		public Assignment getCancel_45in_45progressAssignment() { return cCancel_45in_45progressAssignment; }
		
		//ConcurrencyCancel_45in_45progressAbstract
		public RuleCall getCancel_45in_45progressConcurrencyCancel_45in_45progressAbstractParserRuleCall_0() { return cCancel_45in_45progressConcurrencyCancel_45in_45progressAbstractParserRuleCall_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.EString");
		private final RuleCall cVALID_STRINGParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//EString:
		//	VALID_STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//VALID_STRING
		public RuleCall getVALID_STRINGParserRuleCall() { return cVALID_STRINGParserRuleCall; }
	}
	public class ConcurrencyCancel_45in_45progressTypeStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeString");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCancelInProgressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCancel_45in_45progressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCancel_45in_45progressEStringParserRuleCall_2_0 = (RuleCall)cCancel_45in_45progressAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressTypeString
		//ConcurrencyCancel_45in_45progressTypeString: //Keywords
		//	'"cancel-in-progress"' ':' cancel_45in_45progress=EString;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"cancel-in-progress"' ':' cancel_45in_45progress=EString
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_0() { return cCancelInProgressKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//cancel_45in_45progress=EString
		public Assignment getCancel_45in_45progressAssignment_2() { return cCancel_45in_45progressAssignment_2; }
		
		//EString
		public RuleCall getCancel_45in_45progressEStringParserRuleCall_2_0() { return cCancel_45in_45progressEStringParserRuleCall_2_0; }
	}
	public class ConcurrencyCancel_45in_45progressTypeIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeInteger");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCancelInProgressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCancel_45in_45progressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCancel_45in_45progressEDoubleObjectParserRuleCall_2_0 = (RuleCall)cCancel_45in_45progressAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressTypeInteger
		//ConcurrencyCancel_45in_45progressTypeInteger: //Keywords
		//	'"cancel-in-progress"' ':' cancel_45in_45progress=EDoubleObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"cancel-in-progress"' ':' cancel_45in_45progress=EDoubleObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_0() { return cCancelInProgressKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//cancel_45in_45progress=EDoubleObject
		public Assignment getCancel_45in_45progressAssignment_2() { return cCancel_45in_45progressAssignment_2; }
		
		//EDoubleObject
		public RuleCall getCancel_45in_45progressEDoubleObjectParserRuleCall_2_0() { return cCancel_45in_45progressEDoubleObjectParserRuleCall_2_0; }
	}
	public class ConcurrencyCancel_45in_45progressTypeNumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeNumber");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCancelInProgressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCancel_45in_45progressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCancel_45in_45progressEDoubleObjectParserRuleCall_2_0 = (RuleCall)cCancel_45in_45progressAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressTypeNumber
		//ConcurrencyCancel_45in_45progressTypeNumber: //Keywords
		//	'"cancel-in-progress"' ':' cancel_45in_45progress=EDoubleObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"cancel-in-progress"' ':' cancel_45in_45progress=EDoubleObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_0() { return cCancelInProgressKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//cancel_45in_45progress=EDoubleObject
		public Assignment getCancel_45in_45progressAssignment_2() { return cCancel_45in_45progressAssignment_2; }
		
		//EDoubleObject
		public RuleCall getCancel_45in_45progressEDoubleObjectParserRuleCall_2_0() { return cCancel_45in_45progressEDoubleObjectParserRuleCall_2_0; }
	}
	public class ConcurrencyCancel_45in_45progressTypeBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeBoolean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCancelInProgressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCancel_45in_45progressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCancel_45in_45progressEBooleanObjectParserRuleCall_2_0 = (RuleCall)cCancel_45in_45progressAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressTypeBoolean
		//ConcurrencyCancel_45in_45progressTypeBoolean: //Keywords
		//	'"cancel-in-progress"' ':' cancel_45in_45progress=EBooleanObject;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"cancel-in-progress"' ':' cancel_45in_45progress=EBooleanObject
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_0() { return cCancelInProgressKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//cancel_45in_45progress=EBooleanObject
		public Assignment getCancel_45in_45progressAssignment_2() { return cCancel_45in_45progressAssignment_2; }
		
		//EBooleanObject
		public RuleCall getCancel_45in_45progressEBooleanObjectParserRuleCall_2_0() { return cCancel_45in_45progressEBooleanObjectParserRuleCall_2_0; }
	}
	public class ConcurrencyCancel_45in_45progressTypeObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConcurrencyCancel_45in_45progressTypeObjectAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCancelInProgressKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCancel_45in_45progressAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_0_0 = (RuleCall)cCancel_45in_45progressAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCancel_45in_45progressAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_1_1_0 = (RuleCall)cCancel_45in_45progressAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass ConcurrencyCancel_45in_45progressTypeObject
		//ConcurrencyCancel_45in_45progressTypeObject:
		//	{ConcurrencyCancel_45in_45progressTypeObject}
		//	//Keywords
		//	'"cancel-in-progress"' ':'
		//	'{' (cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract (","
		//	cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract)*)? '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ConcurrencyCancel_45in_45progressTypeObject} //Keywords
		//'"cancel-in-progress"' ':' '{' (cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract (","
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{ConcurrencyCancel_45in_45progressTypeObject}
		public Action getConcurrencyCancel_45in_45progressTypeObjectAction_0() { return cConcurrencyCancel_45in_45progressTypeObjectAction_0; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_1() { return cCancelInProgressKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//(cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract (","
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract
		public Assignment getCancel_45in_45progressAssignment_4_0() { return cCancel_45in_45progressAssignment_4_0; }
		
		//ConcurrencyCancel_45in_45progressPropertiesAbstract
		public RuleCall getCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_0_0() { return cCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_0_0; }
		
		//("," cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract
		public Assignment getCancel_45in_45progressAssignment_4_1_1() { return cCancel_45in_45progressAssignment_4_1_1; }
		
		//ConcurrencyCancel_45in_45progressPropertiesAbstract
		public RuleCall getCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_1_1_0() { return cCancel_45in_45progressConcurrencyCancel_45in_45progressPropertiesAbstractParserRuleCall_4_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ConcurrencyCancel_45in_45progressTypeArrayElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeArray");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConcurrencyCancel_45in_45progressTypeArrayAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCancelInProgressKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cCancel_45in_45progressAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_0_0 = (RuleCall)cCancel_45in_45progressAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cCancel_45in_45progressAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_1_1_0 = (RuleCall)cCancel_45in_45progressAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////EClass ConcurrencyCancel_45in_45progressTypeArray
		//ConcurrencyCancel_45in_45progressTypeArray:
		//	{ConcurrencyCancel_45in_45progressTypeArray}
		//	//Keywords
		//	'"cancel-in-progress"' ':'
		//	'[' (cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems (","
		//	cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{ConcurrencyCancel_45in_45progressTypeArray} //Keywords
		//'"cancel-in-progress"' ':' '[' (cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems (","
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{ConcurrencyCancel_45in_45progressTypeArray}
		public Action getConcurrencyCancel_45in_45progressTypeArrayAction_0() { return cConcurrencyCancel_45in_45progressTypeArrayAction_0; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_1() { return cCancelInProgressKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//(cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems (","
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems)*)?
		public Group getGroup_4() { return cGroup_4; }
		
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems
		public Assignment getCancel_45in_45progressAssignment_4_0() { return cCancel_45in_45progressAssignment_4_0; }
		
		//ConcurrencyCancel_45in_45progressItems
		public RuleCall getCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_0_0() { return cCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_0_0; }
		
		//("," cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems)*
		public Group getGroup_4_1() { return cGroup_4_1; }
		
		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }
		
		//cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems
		public Assignment getCancel_45in_45progressAssignment_4_1_1() { return cCancel_45in_45progressAssignment_4_1_1; }
		
		//ConcurrencyCancel_45in_45progressItems
		public RuleCall getCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_1_1_0() { return cCancel_45in_45progressConcurrencyCancel_45in_45progressItemsParserRuleCall_4_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class ConcurrencyCancel_45in_45progressTypeNullElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressTypeNull");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCancelInProgressKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCancel_45in_45progressAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCancel_45in_45progressNullValueParserRuleCall_2_0 = (RuleCall)cCancel_45in_45progressAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressTypeNull
		//ConcurrencyCancel_45in_45progressTypeNull: //Keywords
		//	'"cancel-in-progress"' ':' cancel_45in_45progress=NullValue;
		@Override public ParserRule getRule() { return rule; }
		
		////Keywords
		//'"cancel-in-progress"' ':' cancel_45in_45progress=NullValue
		public Group getGroup() { return cGroup; }
		
		////Keywords
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_0() { return cCancelInProgressKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//cancel_45in_45progress=NullValue
		public Assignment getCancel_45in_45progressAssignment_2() { return cCancel_45in_45progressAssignment_2; }
		
		//NullValue
		public RuleCall getCancel_45in_45progressNullValueParserRuleCall_2_0() { return cCancel_45in_45progressNullValueParserRuleCall_2_0; }
	}
	public class EDoubleObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.EDoubleObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDoubleObject ecore::EDoubleObject:
		//	E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject ecore::EBooleanObject:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ConcurrencyCancel_45in_45progressAdditionalPropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressAdditionalProperties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cAdditionalPropertiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cAdditionalPropertiesJsonDocumentParserRuleCall_2_0 = (RuleCall)cAdditionalPropertiesAssignment_2.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressAdditionalProperties
		//ConcurrencyCancel_45in_45progressAdditionalProperties:
		//	key=EString
		//	':'
		//	//EReference is not a keyword
		//	additionalProperties=JsonDocument;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString ':' //EReference is not a keyword
		//additionalProperties=JsonDocument
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//additionalProperties=JsonDocument
		public Assignment getAdditionalPropertiesAssignment_2() { return cAdditionalPropertiesAssignment_2; }
		
		//JsonDocument
		public RuleCall getAdditionalPropertiesJsonDocumentParserRuleCall_2_0() { return cAdditionalPropertiesJsonDocumentParserRuleCall_2_0; }
	}
	public class JsonDocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.JsonDocument");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass JsonDocument
		//JsonDocument jsonMM::JsonDocument:
		//	value=Value;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_0() { return cValueValueParserRuleCall_0; }
	}
	public class StringValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.StringValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass StringValue
		//StringValue jsonMM::StringValue:
		//	value=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class ArrayValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ArrayValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArrayValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cValueValueParserRuleCall_2_0_0 = (RuleCall)cValueAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cValueValueParserRuleCall_2_1_1_0 = (RuleCall)cValueAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ArrayValue
		//ArrayValue jsonMM::ArrayValue:
		//	{jsonMM::ArrayValue}
		//	//EReference is not a keyword
		//	'[' (value+=Value ("," value+=Value)*)? ']';
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ArrayValue} //EReference is not a keyword
		//'[' (value+=Value ("," value+=Value)*)? ']'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ArrayValue}
		public Action getArrayValueAction_0() { return cArrayValueAction_0; }
		
		////EReference is not a keyword
		//'['
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }
		
		//(value+=Value ("," value+=Value)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//value+=Value
		public Assignment getValueAssignment_2_0() { return cValueAssignment_2_0; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0_0() { return cValueValueParserRuleCall_2_0_0; }
		
		//("," value+=Value)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//value+=Value
		public Assignment getValueAssignment_2_1_1() { return cValueAssignment_2_1_1; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_1_1_0() { return cValueValueParserRuleCall_2_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}
	public class NullValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.NullValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNullEnumEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NullValue
		//NullValue jsonMM::NullValue:
		//	value=NullEnum;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NullEnum
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NullEnum
		public RuleCall getValueNullEnumEnumRuleCall_0() { return cValueNullEnumEnumRuleCall_0; }
	}
	public class NumberValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.NumberValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEDoubleParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass NumberValue
		//NumberValue jsonMM::NumberValue:
		//	value=EDouble;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EDouble
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EDouble
		public RuleCall getValueEDoubleParserRuleCall_0() { return cValueEDoubleParserRuleCall_0; }
	}
	public class ObjectValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ObjectValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cKeyvaluepairAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_0_0 = (RuleCall)cKeyvaluepairAssignment_2_0.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cGroup_2.eContents().get(1);
		private final Keyword cCommaKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cKeyvaluepairAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0 = (RuleCall)cKeyvaluepairAssignment_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		////EClass ObjectValue
		//ObjectValue jsonMM::ObjectValue:
		//	{jsonMM::ObjectValue}
		//	'{' (keyvaluepair+=KeyValuePair ("," keyvaluepair+=KeyValuePair)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{jsonMM::ObjectValue} '{' (keyvaluepair+=KeyValuePair ("," keyvaluepair+=KeyValuePair)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{jsonMM::ObjectValue}
		public Action getObjectValueAction_0() { return cObjectValueAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(keyvaluepair+=KeyValuePair ("," keyvaluepair+=KeyValuePair)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_0() { return cKeyvaluepairAssignment_2_0; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_0_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_0_0; }
		
		//("," keyvaluepair+=KeyValuePair)*
		public Group getGroup_2_1() { return cGroup_2_1; }
		
		//","
		public Keyword getCommaKeyword_2_1_0() { return cCommaKeyword_2_1_0; }
		
		//keyvaluepair+=KeyValuePair
		public Assignment getKeyvaluepairAssignment_2_1_1() { return cKeyvaluepairAssignment_2_1_1; }
		
		//KeyValuePair
		public RuleCall getKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0() { return cKeyvaluepairKeyValuePairParserRuleCall_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class BooleanValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEBooleanParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		////EClass BooleanValue
		//BooleanValue jsonMM::BooleanValue:
		//	value=EBoolean;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EBoolean
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_0() { return cValueEBooleanParserRuleCall_0; }
	}
	public class EDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.EDouble");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cE_INTTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cE_DOUBLETerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EDouble ecore::EDouble:
		//	E_INT | E_DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//E_INT | E_DOUBLE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//E_INT
		public RuleCall getE_INTTerminalRuleCall_0() { return cE_INTTerminalRuleCall_0; }
		
		//E_DOUBLE
		public RuleCall getE_DOUBLETerminalRuleCall_1() { return cE_DOUBLETerminalRuleCall_1; }
	}
	public class KeyValuePairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.KeyValuePair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		////EClass KeyValuePair
		//KeyValuePair jsonMM::KeyValuePair:
		//	key=EString
		//	':'
		//	//EReference is not a keyword
		//	value=Value;
		@Override public ParserRule getRule() { return rule; }
		
		////KeyValue
		//key=EString ':' //EReference is not a keyword
		//value=Value
		public Group getGroup() { return cGroup; }
		
		////KeyValue
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////EReference is not a keyword
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class ConcurrencyCancel_45in_45progressItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.ConcurrencyCancel_45in_45progressItems");
		private final Assignment cItemsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cItemsJsonDocumentParserRuleCall_0 = (RuleCall)cItemsAssignment.eContents().get(0);
		
		////EClass ConcurrencyCancel_45in_45progressItems
		//ConcurrencyCancel_45in_45progressItems:
		//	items=JsonDocument;
		@Override public ParserRule getRule() { return rule; }
		
		////EReference is not a keyword
		//items=JsonDocument
		public Assignment getItemsAssignment() { return cItemsAssignment; }
		
		//JsonDocument
		public RuleCall getItemsJsonDocumentParserRuleCall_0() { return cItemsJsonDocumentParserRuleCall_0; }
	}
	public class VALID_STRINGElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.VALID_STRING");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cKEYWORDParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//VALID_STRING:
		//	STRING | KEYWORD;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | KEYWORD
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//KEYWORD
		public RuleCall getKEYWORDParserRuleCall_1() { return cKEYWORDParserRuleCall_1; }
	}
	public class KEYWORDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.KEYWORD");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCancelInProgressKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cConcurrencyKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cGroupKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//KEYWORD:
		//	'"cancel-in-progress"' |
		//	'"concurrency"' |
		//	'"group"';
		@Override public ParserRule getRule() { return rule; }
		
		//'"cancel-in-progress"' | '"concurrency"' | '"group"'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'"cancel-in-progress"'
		public Keyword getCancelInProgressKeyword_0() { return cCancelInProgressKeyword_0; }
		
		//'"concurrency"'
		public Keyword getConcurrencyKeyword_1() { return cConcurrencyKeyword_1; }
		
		//'"group"'
		public Keyword getGroupKeyword_2() { return cGroupKeyword_2; }
	}
	
	public class NullEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.NullEnum");
		private final EnumLiteralDeclaration cNullEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNullNullKeyword_0 = (Keyword)cNullEnumLiteralDeclaration.eContents().get(0);
		
		//enum NullEnum returns jsonMM::NullEnum:
		//	null;
		public EnumRule getRule() { return rule; }
		
		//null
		public EnumLiteralDeclaration getNullEnumLiteralDeclaration() { return cNullEnumLiteralDeclaration; }
		
		//'null'
		public Keyword getNullNullKeyword_0() { return cNullNullKeyword_0; }
	}
	
	private final GithubwfRootConcurrencyOneOf1Elements pGithubwfRootConcurrencyOneOf1;
	private final ConcurrencyPropertiesAbstractElements pConcurrencyPropertiesAbstract;
	private final ConcurrencyCancel_45in_45progressAbstractElements pConcurrencyCancel_45in_45progressAbstract;
	private final ConcurrencyCancel_45in_45progressPropertiesAbstractElements pConcurrencyCancel_45in_45progressPropertiesAbstract;
	private final ValueElements pValue;
	private final ConcurrencyElements pConcurrency;
	private final ConcurrencyGroupElements pConcurrencyGroup;
	private final ConcurrencyCancel_45in_45progressElements pConcurrencyCancel_45in_45progress;
	private final EStringElements pEString;
	private final ConcurrencyCancel_45in_45progressTypeStringElements pConcurrencyCancel_45in_45progressTypeString;
	private final ConcurrencyCancel_45in_45progressTypeIntegerElements pConcurrencyCancel_45in_45progressTypeInteger;
	private final ConcurrencyCancel_45in_45progressTypeNumberElements pConcurrencyCancel_45in_45progressTypeNumber;
	private final ConcurrencyCancel_45in_45progressTypeBooleanElements pConcurrencyCancel_45in_45progressTypeBoolean;
	private final ConcurrencyCancel_45in_45progressTypeObjectElements pConcurrencyCancel_45in_45progressTypeObject;
	private final ConcurrencyCancel_45in_45progressTypeArrayElements pConcurrencyCancel_45in_45progressTypeArray;
	private final ConcurrencyCancel_45in_45progressTypeNullElements pConcurrencyCancel_45in_45progressTypeNull;
	private final EDoubleObjectElements pEDoubleObject;
	private final EBooleanObjectElements pEBooleanObject;
	private final ConcurrencyCancel_45in_45progressAdditionalPropertiesElements pConcurrencyCancel_45in_45progressAdditionalProperties;
	private final JsonDocumentElements pJsonDocument;
	private final StringValueElements pStringValue;
	private final ArrayValueElements pArrayValue;
	private final NullValueElements pNullValue;
	private final NumberValueElements pNumberValue;
	private final ObjectValueElements pObjectValue;
	private final BooleanValueElements pBooleanValue;
	private final NullEnumElements eNullEnum;
	private final EDoubleElements pEDouble;
	private final KeyValuePairElements pKeyValuePair;
	private final EBooleanElements pEBoolean;
	private final ConcurrencyCancel_45in_45progressItemsElements pConcurrencyCancel_45in_45progressItems;
	private final TerminalRule tINT;
	private final VALID_STRINGElements pVALID_STRING;
	private final TerminalRule tSTRING;
	private final TerminalRule tE_INT;
	private final KEYWORDElements pKEYWORD;
	private final TerminalRule tE_DOUBLE;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GithubwfRootConcurrencyOneOf1GrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGithubwfRootConcurrencyOneOf1 = new GithubwfRootConcurrencyOneOf1Elements();
		this.pConcurrencyPropertiesAbstract = new ConcurrencyPropertiesAbstractElements();
		this.pConcurrencyCancel_45in_45progressAbstract = new ConcurrencyCancel_45in_45progressAbstractElements();
		this.pConcurrencyCancel_45in_45progressPropertiesAbstract = new ConcurrencyCancel_45in_45progressPropertiesAbstractElements();
		this.pValue = new ValueElements();
		this.pConcurrency = new ConcurrencyElements();
		this.pConcurrencyGroup = new ConcurrencyGroupElements();
		this.pConcurrencyCancel_45in_45progress = new ConcurrencyCancel_45in_45progressElements();
		this.pEString = new EStringElements();
		this.pConcurrencyCancel_45in_45progressTypeString = new ConcurrencyCancel_45in_45progressTypeStringElements();
		this.pConcurrencyCancel_45in_45progressTypeInteger = new ConcurrencyCancel_45in_45progressTypeIntegerElements();
		this.pConcurrencyCancel_45in_45progressTypeNumber = new ConcurrencyCancel_45in_45progressTypeNumberElements();
		this.pConcurrencyCancel_45in_45progressTypeBoolean = new ConcurrencyCancel_45in_45progressTypeBooleanElements();
		this.pConcurrencyCancel_45in_45progressTypeObject = new ConcurrencyCancel_45in_45progressTypeObjectElements();
		this.pConcurrencyCancel_45in_45progressTypeArray = new ConcurrencyCancel_45in_45progressTypeArrayElements();
		this.pConcurrencyCancel_45in_45progressTypeNull = new ConcurrencyCancel_45in_45progressTypeNullElements();
		this.pEDoubleObject = new EDoubleObjectElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pConcurrencyCancel_45in_45progressAdditionalProperties = new ConcurrencyCancel_45in_45progressAdditionalPropertiesElements();
		this.pJsonDocument = new JsonDocumentElements();
		this.pStringValue = new StringValueElements();
		this.pArrayValue = new ArrayValueElements();
		this.pNullValue = new NullValueElements();
		this.pNumberValue = new NumberValueElements();
		this.pObjectValue = new ObjectValueElements();
		this.pBooleanValue = new BooleanValueElements();
		this.eNullEnum = new NullEnumElements();
		this.pEDouble = new EDoubleElements();
		this.pKeyValuePair = new KeyValuePairElements();
		this.pEBoolean = new EBooleanElements();
		this.pConcurrencyCancel_45in_45progressItems = new ConcurrencyCancel_45in_45progressItemsElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.INT");
		this.pVALID_STRING = new VALID_STRINGElements();
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.STRING");
		this.tE_INT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.E_INT");
		this.pKEYWORD = new KEYWORDElements();
		this.tE_DOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "githubwf.githubwf.GithubwfRootConcurrencyOneOf1.E_DOUBLE");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("githubwf.githubwf.GithubwfRootConcurrencyOneOf1".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////EClass GithubwfRootConcurrencyOneOf1
	//GithubwfRootConcurrencyOneOf1: //Keywords
	//	'"concurrency"' ':' concurrency=Concurrency;
	public GithubwfRootConcurrencyOneOf1Elements getGithubwfRootConcurrencyOneOf1Access() {
		return pGithubwfRootConcurrencyOneOf1;
	}
	
	public ParserRule getGithubwfRootConcurrencyOneOf1Rule() {
		return getGithubwfRootConcurrencyOneOf1Access().getRule();
	}
	
	//ConcurrencyPropertiesAbstract:
	//	ConcurrencyGroup | ConcurrencyCancel_45in_45progress;
	public ConcurrencyPropertiesAbstractElements getConcurrencyPropertiesAbstractAccess() {
		return pConcurrencyPropertiesAbstract;
	}
	
	public ParserRule getConcurrencyPropertiesAbstractRule() {
		return getConcurrencyPropertiesAbstractAccess().getRule();
	}
	
	//ConcurrencyCancel_45in_45progressAbstract:
	//	=> ConcurrencyCancel_45in_45progressTypeNumber | ConcurrencyCancel_45in_45progressTypeString |
	//	ConcurrencyCancel_45in_45progressTypeInteger | ConcurrencyCancel_45in_45progressTypeBoolean |
	//	ConcurrencyCancel_45in_45progressTypeObject | ConcurrencyCancel_45in_45progressTypeArray |
	//	ConcurrencyCancel_45in_45progressTypeNull;
	public ConcurrencyCancel_45in_45progressAbstractElements getConcurrencyCancel_45in_45progressAbstractAccess() {
		return pConcurrencyCancel_45in_45progressAbstract;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressAbstractRule() {
		return getConcurrencyCancel_45in_45progressAbstractAccess().getRule();
	}
	
	//ConcurrencyCancel_45in_45progressPropertiesAbstract:
	//	=> ConcurrencyCancel_45in_45progressAdditionalProperties;
	public ConcurrencyCancel_45in_45progressPropertiesAbstractElements getConcurrencyCancel_45in_45progressPropertiesAbstractAccess() {
		return pConcurrencyCancel_45in_45progressPropertiesAbstract;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressPropertiesAbstractRule() {
		return getConcurrencyCancel_45in_45progressPropertiesAbstractAccess().getRule();
	}
	
	//Value jsonMM::Value:
	//	StringValue | ArrayValue | NullValue | NumberValue | ObjectValue | BooleanValue;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	////EClass Concurrency
	//Concurrency:
	//	{Concurrency}
	//	//EReference is not a keyword
	//	'{' (concurrency+=ConcurrencyPropertiesAbstract ("," concurrency+=ConcurrencyPropertiesAbstract)*)? '}';
	public ConcurrencyElements getConcurrencyAccess() {
		return pConcurrency;
	}
	
	public ParserRule getConcurrencyRule() {
		return getConcurrencyAccess().getRule();
	}
	
	////EClass ConcurrencyGroup
	//ConcurrencyGroup: //Keywords
	//	'"group"' ':' group=EString;
	public ConcurrencyGroupElements getConcurrencyGroupAccess() {
		return pConcurrencyGroup;
	}
	
	public ParserRule getConcurrencyGroupRule() {
		return getConcurrencyGroupAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progress
	//ConcurrencyCancel_45in_45progress:
	//	cancel_45in_45progress=ConcurrencyCancel_45in_45progressAbstract;
	public ConcurrencyCancel_45in_45progressElements getConcurrencyCancel_45in_45progressAccess() {
		return pConcurrencyCancel_45in_45progress;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressRule() {
		return getConcurrencyCancel_45in_45progressAccess().getRule();
	}
	
	//EString:
	//	VALID_STRING;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeString
	//ConcurrencyCancel_45in_45progressTypeString: //Keywords
	//	'"cancel-in-progress"' ':' cancel_45in_45progress=EString;
	public ConcurrencyCancel_45in_45progressTypeStringElements getConcurrencyCancel_45in_45progressTypeStringAccess() {
		return pConcurrencyCancel_45in_45progressTypeString;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeStringRule() {
		return getConcurrencyCancel_45in_45progressTypeStringAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeInteger
	//ConcurrencyCancel_45in_45progressTypeInteger: //Keywords
	//	'"cancel-in-progress"' ':' cancel_45in_45progress=EDoubleObject;
	public ConcurrencyCancel_45in_45progressTypeIntegerElements getConcurrencyCancel_45in_45progressTypeIntegerAccess() {
		return pConcurrencyCancel_45in_45progressTypeInteger;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeIntegerRule() {
		return getConcurrencyCancel_45in_45progressTypeIntegerAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeNumber
	//ConcurrencyCancel_45in_45progressTypeNumber: //Keywords
	//	'"cancel-in-progress"' ':' cancel_45in_45progress=EDoubleObject;
	public ConcurrencyCancel_45in_45progressTypeNumberElements getConcurrencyCancel_45in_45progressTypeNumberAccess() {
		return pConcurrencyCancel_45in_45progressTypeNumber;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeNumberRule() {
		return getConcurrencyCancel_45in_45progressTypeNumberAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeBoolean
	//ConcurrencyCancel_45in_45progressTypeBoolean: //Keywords
	//	'"cancel-in-progress"' ':' cancel_45in_45progress=EBooleanObject;
	public ConcurrencyCancel_45in_45progressTypeBooleanElements getConcurrencyCancel_45in_45progressTypeBooleanAccess() {
		return pConcurrencyCancel_45in_45progressTypeBoolean;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeBooleanRule() {
		return getConcurrencyCancel_45in_45progressTypeBooleanAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeObject
	//ConcurrencyCancel_45in_45progressTypeObject:
	//	{ConcurrencyCancel_45in_45progressTypeObject}
	//	//Keywords
	//	'"cancel-in-progress"' ':'
	//	'{' (cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract (","
	//	cancel_45in_45progress+=ConcurrencyCancel_45in_45progressPropertiesAbstract)*)? '}';
	public ConcurrencyCancel_45in_45progressTypeObjectElements getConcurrencyCancel_45in_45progressTypeObjectAccess() {
		return pConcurrencyCancel_45in_45progressTypeObject;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeObjectRule() {
		return getConcurrencyCancel_45in_45progressTypeObjectAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeArray
	//ConcurrencyCancel_45in_45progressTypeArray:
	//	{ConcurrencyCancel_45in_45progressTypeArray}
	//	//Keywords
	//	'"cancel-in-progress"' ':'
	//	'[' (cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems (","
	//	cancel_45in_45progress+=ConcurrencyCancel_45in_45progressItems)*)? ']';
	public ConcurrencyCancel_45in_45progressTypeArrayElements getConcurrencyCancel_45in_45progressTypeArrayAccess() {
		return pConcurrencyCancel_45in_45progressTypeArray;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeArrayRule() {
		return getConcurrencyCancel_45in_45progressTypeArrayAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressTypeNull
	//ConcurrencyCancel_45in_45progressTypeNull: //Keywords
	//	'"cancel-in-progress"' ':' cancel_45in_45progress=NullValue;
	public ConcurrencyCancel_45in_45progressTypeNullElements getConcurrencyCancel_45in_45progressTypeNullAccess() {
		return pConcurrencyCancel_45in_45progressTypeNull;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressTypeNullRule() {
		return getConcurrencyCancel_45in_45progressTypeNullAccess().getRule();
	}
	
	//EDoubleObject ecore::EDoubleObject:
	//	E_INT | E_DOUBLE;
	public EDoubleObjectElements getEDoubleObjectAccess() {
		return pEDoubleObject;
	}
	
	public ParserRule getEDoubleObjectRule() {
		return getEDoubleObjectAccess().getRule();
	}
	
	//EBooleanObject ecore::EBooleanObject:
	//	'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressAdditionalProperties
	//ConcurrencyCancel_45in_45progressAdditionalProperties:
	//	key=EString
	//	':'
	//	//EReference is not a keyword
	//	additionalProperties=JsonDocument;
	public ConcurrencyCancel_45in_45progressAdditionalPropertiesElements getConcurrencyCancel_45in_45progressAdditionalPropertiesAccess() {
		return pConcurrencyCancel_45in_45progressAdditionalProperties;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressAdditionalPropertiesRule() {
		return getConcurrencyCancel_45in_45progressAdditionalPropertiesAccess().getRule();
	}
	
	////EClass JsonDocument
	//JsonDocument jsonMM::JsonDocument:
	//	value=Value;
	public JsonDocumentElements getJsonDocumentAccess() {
		return pJsonDocument;
	}
	
	public ParserRule getJsonDocumentRule() {
		return getJsonDocumentAccess().getRule();
	}
	
	////EClass StringValue
	//StringValue jsonMM::StringValue:
	//	value=EString;
	public StringValueElements getStringValueAccess() {
		return pStringValue;
	}
	
	public ParserRule getStringValueRule() {
		return getStringValueAccess().getRule();
	}
	
	////EClass ArrayValue
	//ArrayValue jsonMM::ArrayValue:
	//	{jsonMM::ArrayValue}
	//	//EReference is not a keyword
	//	'[' (value+=Value ("," value+=Value)*)? ']';
	public ArrayValueElements getArrayValueAccess() {
		return pArrayValue;
	}
	
	public ParserRule getArrayValueRule() {
		return getArrayValueAccess().getRule();
	}
	
	////EClass NullValue
	//NullValue jsonMM::NullValue:
	//	value=NullEnum;
	public NullValueElements getNullValueAccess() {
		return pNullValue;
	}
	
	public ParserRule getNullValueRule() {
		return getNullValueAccess().getRule();
	}
	
	////EClass NumberValue
	//NumberValue jsonMM::NumberValue:
	//	value=EDouble;
	public NumberValueElements getNumberValueAccess() {
		return pNumberValue;
	}
	
	public ParserRule getNumberValueRule() {
		return getNumberValueAccess().getRule();
	}
	
	////EClass ObjectValue
	//ObjectValue jsonMM::ObjectValue:
	//	{jsonMM::ObjectValue}
	//	'{' (keyvaluepair+=KeyValuePair ("," keyvaluepair+=KeyValuePair)*)?
	//	'}';
	public ObjectValueElements getObjectValueAccess() {
		return pObjectValue;
	}
	
	public ParserRule getObjectValueRule() {
		return getObjectValueAccess().getRule();
	}
	
	////EClass BooleanValue
	//BooleanValue jsonMM::BooleanValue:
	//	value=EBoolean;
	public BooleanValueElements getBooleanValueAccess() {
		return pBooleanValue;
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}
	
	//enum NullEnum returns jsonMM::NullEnum:
	//	null;
	public NullEnumElements getNullEnumAccess() {
		return eNullEnum;
	}
	
	public EnumRule getNullEnumRule() {
		return getNullEnumAccess().getRule();
	}
	
	//EDouble ecore::EDouble:
	//	E_INT | E_DOUBLE;
	public EDoubleElements getEDoubleAccess() {
		return pEDouble;
	}
	
	public ParserRule getEDoubleRule() {
		return getEDoubleAccess().getRule();
	}
	
	////EClass KeyValuePair
	//KeyValuePair jsonMM::KeyValuePair:
	//	key=EString
	//	':'
	//	//EReference is not a keyword
	//	value=Value;
	public KeyValuePairElements getKeyValuePairAccess() {
		return pKeyValuePair;
	}
	
	public ParserRule getKeyValuePairRule() {
		return getKeyValuePairAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	////EClass ConcurrencyCancel_45in_45progressItems
	//ConcurrencyCancel_45in_45progressItems:
	//	items=JsonDocument;
	public ConcurrencyCancel_45in_45progressItemsElements getConcurrencyCancel_45in_45progressItemsAccess() {
		return pConcurrencyCancel_45in_45progressItems;
	}
	
	public ParserRule getConcurrencyCancel_45in_45progressItemsRule() {
		return getConcurrencyCancel_45in_45progressItemsAccess().getRule();
	}
	
	//@Override
	//terminal INT returns ecore::EInt:
	//	'0' | '1'..'9' '0'..'9'*;
	public TerminalRule getINTRule() {
		return tINT;
	}
	
	//VALID_STRING:
	//	STRING | KEYWORD;
	public VALID_STRINGElements getVALID_STRINGAccess() {
		return pVALID_STRING;
	}
	
	public ParserRule getVALID_STRINGRule() {
		return getVALID_STRINGAccess().getRule();
	}
	
	//@Override
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"';
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	}
	
	//terminal E_INT:
	//	'-'? INT;
	public TerminalRule getE_INTRule() {
		return tE_INT;
	}
	
	//KEYWORD:
	//	'"cancel-in-progress"' |
	//	'"concurrency"' |
	//	'"group"';
	public KEYWORDElements getKEYWORDAccess() {
		return pKEYWORD;
	}
	
	public ParserRule getKEYWORDRule() {
		return getKEYWORDAccess().getRule();
	}
	
	//terminal E_DOUBLE:
	//	'-'? INT ('.' INT+)? (('E' | 'e') ('+' | '-')? INT)?;
	public TerminalRule getE_DOUBLERule() {
		return tE_DOUBLE;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
