/*
 * generated by Xtext 2.23.0
 */
package githubwf.githubwf.serializer;

import com.google.inject.Inject;
import githubwf.Branch;
import githubwf.EventObject;
import githubwf.EventObjectAdditionalProperties;
import githubwf.EventObjectItems;
import githubwf.EventObjectTypeArray;
import githubwf.EventObjectTypeBoolean;
import githubwf.EventObjectTypeInteger;
import githubwf.EventObjectTypeNull;
import githubwf.EventObjectTypeNumber;
import githubwf.EventObjectTypeObject;
import githubwf.EventObjectTypeString;
import githubwf.GithubwfPackage;
import githubwf.GithubwfRootOnOneOf2;
import githubwf.GithubwfRootOnOneOf2Branch_protection_rule;
import githubwf.GithubwfRootOnOneOf2Check_run;
import githubwf.GithubwfRootOnOneOf2Check_suite;
import githubwf.GithubwfRootOnOneOf2Create;
import githubwf.GithubwfRootOnOneOf2Delete;
import githubwf.GithubwfRootOnOneOf2Deployment;
import githubwf.GithubwfRootOnOneOf2Deployment_status;
import githubwf.GithubwfRootOnOneOf2Discussion;
import githubwf.GithubwfRootOnOneOf2Discussion_comment;
import githubwf.GithubwfRootOnOneOf2Fork;
import githubwf.GithubwfRootOnOneOf2Gollum;
import githubwf.GithubwfRootOnOneOf2Issue_comment;
import githubwf.GithubwfRootOnOneOf2Issues;
import githubwf.GithubwfRootOnOneOf2Label;
import githubwf.GithubwfRootOnOneOf2Member;
import githubwf.GithubwfRootOnOneOf2Merge_group;
import githubwf.GithubwfRootOnOneOf2Milestone;
import githubwf.GithubwfRootOnOneOf2Page_build;
import githubwf.GithubwfRootOnOneOf2Project;
import githubwf.GithubwfRootOnOneOf2Project_card;
import githubwf.GithubwfRootOnOneOf2Project_column;
import githubwf.GithubwfRootOnOneOf2Public;
import githubwf.GithubwfRootOnOneOf2Pull_request;
import githubwf.GithubwfRootOnOneOf2Pull_request_review;
import githubwf.GithubwfRootOnOneOf2Pull_request_review_comment;
import githubwf.GithubwfRootOnOneOf2Pull_request_target;
import githubwf.GithubwfRootOnOneOf2Push;
import githubwf.GithubwfRootOnOneOf2Registry_package;
import githubwf.GithubwfRootOnOneOf2Release;
import githubwf.GithubwfRootOnOneOf2Repository_dispatch;
import githubwf.GithubwfRootOnOneOf2Schedule;
import githubwf.GithubwfRootOnOneOf2ScheduleItems;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsCron;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsItems;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeArray;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeBoolean;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeInteger;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeNull;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeNumber;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeObject;
import githubwf.GithubwfRootOnOneOf2ScheduleItemsTypeString;
import githubwf.GithubwfRootOnOneOf2Status;
import githubwf.GithubwfRootOnOneOf2Watch;
import githubwf.GithubwfRootOnOneOf2Workflow_call;
import githubwf.GithubwfRootOnOneOf2Workflow_callAdditionalProperties;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputs;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required;
import githubwf.GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type;
import githubwf.GithubwfRootOnOneOf2Workflow_callItems;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecrets;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsItems;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_callSecretsTypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_callTypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatch;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputs;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchItems;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchTypeString;
import githubwf.GithubwfRootOnOneOf2Workflow_run;
import githubwf.Globs;
import githubwf.GlobsItems;
import githubwf.Path;
import githubwf.Ref;
import githubwf.RefAdditionalProperties;
import githubwf.RefBranches;
import githubwf.RefBranches_45ignore;
import githubwf.RefItems;
import githubwf.RefPaths;
import githubwf.RefPaths_45ignore;
import githubwf.RefTags;
import githubwf.RefTags_45ignore;
import githubwf.RefTypeArray;
import githubwf.RefTypeBoolean;
import githubwf.RefTypeInteger;
import githubwf.RefTypeNull;
import githubwf.RefTypeNumber;
import githubwf.RefTypeObject;
import githubwf.RefTypeString;
import githubwf.githubwf.services.GithubwfRootOnOneOf2GrammarAccess;
import java.util.Set;
import jsonMM.ArrayValue;
import jsonMM.BooleanValue;
import jsonMM.JsonDocument;
import jsonMM.JsonMMPackage;
import jsonMM.KeyValuePair;
import jsonMM.NullValue;
import jsonMM.NumberValue;
import jsonMM.ObjectValue;
import jsonMM.StringValue;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Parameter;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.serializer.ISerializationContext;
import org.eclipse.xtext.serializer.acceptor.SequenceFeeder;
import org.eclipse.xtext.serializer.sequencer.AbstractDelegatingSemanticSequencer;
import org.eclipse.xtext.serializer.sequencer.ITransientValueService.ValueTransient;

@SuppressWarnings("all")
public class GithubwfRootOnOneOf2SemanticSequencer extends AbstractDelegatingSemanticSequencer {

	@Inject
	private GithubwfRootOnOneOf2GrammarAccess grammarAccess;
	
	@Override
	public void sequence(ISerializationContext context, EObject semanticObject) {
		EPackage epackage = semanticObject.eClass().getEPackage();
		ParserRule rule = context.getParserRule();
		Action action = context.getAssignedAction();
		Set<Parameter> parameters = context.getEnabledBooleanParameters();
		if (epackage == GithubwfPackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case GithubwfPackage.BRANCH:
				sequence_Branch(context, (Branch) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT:
				sequence_EventObject(context, (EventObject) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_ADDITIONAL_PROPERTIES:
				sequence_EventObjectAdditionalProperties(context, (EventObjectAdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_ITEMS:
				sequence_EventObjectItems(context, (EventObjectItems) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_ARRAY:
				sequence_EventObjectTypeArray(context, (EventObjectTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_BOOLEAN:
				sequence_EventObjectTypeBoolean(context, (EventObjectTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_INTEGER:
				sequence_EventObjectTypeInteger(context, (EventObjectTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_NULL:
				sequence_EventObjectTypeNull(context, (EventObjectTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_NUMBER:
				sequence_EventObjectTypeNumber(context, (EventObjectTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_OBJECT:
				sequence_EventObjectTypeObject(context, (EventObjectTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.EVENT_OBJECT_TYPE_STRING:
				sequence_EventObjectTypeString(context, (EventObjectTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2:
				sequence_GithubwfRootOnOneOf2(context, (GithubwfRootOnOneOf2) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_BRANCH_PROTECTION_RULE:
				sequence_GithubwfRootOnOneOf2Branch_protection_rule(context, (GithubwfRootOnOneOf2Branch_protection_rule) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_CHECK_RUN:
				sequence_GithubwfRootOnOneOf2Check_run(context, (GithubwfRootOnOneOf2Check_run) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_CHECK_SUITE:
				sequence_GithubwfRootOnOneOf2Check_suite(context, (GithubwfRootOnOneOf2Check_suite) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_CREATE:
				sequence_GithubwfRootOnOneOf2Create(context, (GithubwfRootOnOneOf2Create) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_DELETE:
				sequence_GithubwfRootOnOneOf2Delete(context, (GithubwfRootOnOneOf2Delete) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_DEPLOYMENT:
				sequence_GithubwfRootOnOneOf2Deployment(context, (GithubwfRootOnOneOf2Deployment) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_DEPLOYMENT_STATUS:
				sequence_GithubwfRootOnOneOf2Deployment_status(context, (GithubwfRootOnOneOf2Deployment_status) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_DISCUSSION:
				sequence_GithubwfRootOnOneOf2Discussion(context, (GithubwfRootOnOneOf2Discussion) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_DISCUSSION_COMMENT:
				sequence_GithubwfRootOnOneOf2Discussion_comment(context, (GithubwfRootOnOneOf2Discussion_comment) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_FORK:
				sequence_GithubwfRootOnOneOf2Fork(context, (GithubwfRootOnOneOf2Fork) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_GOLLUM:
				sequence_GithubwfRootOnOneOf2Gollum(context, (GithubwfRootOnOneOf2Gollum) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_ISSUE_COMMENT:
				sequence_GithubwfRootOnOneOf2Issue_comment(context, (GithubwfRootOnOneOf2Issue_comment) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_ISSUES:
				sequence_GithubwfRootOnOneOf2Issues(context, (GithubwfRootOnOneOf2Issues) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_LABEL:
				sequence_GithubwfRootOnOneOf2Label(context, (GithubwfRootOnOneOf2Label) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_MEMBER:
				sequence_GithubwfRootOnOneOf2Member(context, (GithubwfRootOnOneOf2Member) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_MERGE_GROUP:
				sequence_GithubwfRootOnOneOf2Merge_group(context, (GithubwfRootOnOneOf2Merge_group) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_MILESTONE:
				sequence_GithubwfRootOnOneOf2Milestone(context, (GithubwfRootOnOneOf2Milestone) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PAGE_BUILD:
				sequence_GithubwfRootOnOneOf2Page_build(context, (GithubwfRootOnOneOf2Page_build) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PROJECT:
				sequence_GithubwfRootOnOneOf2Project(context, (GithubwfRootOnOneOf2Project) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PROJECT_CARD:
				sequence_GithubwfRootOnOneOf2Project_card(context, (GithubwfRootOnOneOf2Project_card) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PROJECT_COLUMN:
				sequence_GithubwfRootOnOneOf2Project_column(context, (GithubwfRootOnOneOf2Project_column) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PUBLIC:
				sequence_GithubwfRootOnOneOf2Public(context, (GithubwfRootOnOneOf2Public) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PULL_REQUEST:
				sequence_GithubwfRootOnOneOf2Pull_request(context, (GithubwfRootOnOneOf2Pull_request) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PULL_REQUEST_REVIEW:
				sequence_GithubwfRootOnOneOf2Pull_request_review(context, (GithubwfRootOnOneOf2Pull_request_review) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PULL_REQUEST_REVIEW_COMMENT:
				sequence_GithubwfRootOnOneOf2Pull_request_review_comment(context, (GithubwfRootOnOneOf2Pull_request_review_comment) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PULL_REQUEST_TARGET:
				sequence_GithubwfRootOnOneOf2Pull_request_target(context, (GithubwfRootOnOneOf2Pull_request_target) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_PUSH:
				sequence_GithubwfRootOnOneOf2Push(context, (GithubwfRootOnOneOf2Push) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_REGISTRY_PACKAGE:
				sequence_GithubwfRootOnOneOf2Registry_package(context, (GithubwfRootOnOneOf2Registry_package) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_RELEASE:
				sequence_GithubwfRootOnOneOf2Release(context, (GithubwfRootOnOneOf2Release) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_REPOSITORY_DISPATCH:
				sequence_GithubwfRootOnOneOf2Repository_dispatch(context, (GithubwfRootOnOneOf2Repository_dispatch) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE:
				sequence_GithubwfRootOnOneOf2Schedule(context, (GithubwfRootOnOneOf2Schedule) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS:
				sequence_GithubwfRootOnOneOf2ScheduleItems(context, (GithubwfRootOnOneOf2ScheduleItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_CRON:
				sequence_GithubwfRootOnOneOf2ScheduleItemsCron(context, (GithubwfRootOnOneOf2ScheduleItemsCron) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_ITEMS:
				sequence_GithubwfRootOnOneOf2ScheduleItemsItems(context, (GithubwfRootOnOneOf2ScheduleItemsItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeArray(context, (GithubwfRootOnOneOf2ScheduleItemsTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeBoolean(context, (GithubwfRootOnOneOf2ScheduleItemsTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeInteger(context, (GithubwfRootOnOneOf2ScheduleItemsTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeNull(context, (GithubwfRootOnOneOf2ScheduleItemsTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeNumber(context, (GithubwfRootOnOneOf2ScheduleItemsTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeObject(context, (GithubwfRootOnOneOf2ScheduleItemsTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_SCHEDULE_ITEMS_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2ScheduleItemsTypeString(context, (GithubwfRootOnOneOf2ScheduleItemsTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_STATUS:
				sequence_GithubwfRootOnOneOf2Status(context, (GithubwfRootOnOneOf2Status) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WATCH:
				sequence_GithubwfRootOnOneOf2Watch(context, (GithubwfRootOnOneOf2Watch) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL:
				sequence_GithubwfRootOnOneOf2Workflow_call(context, (GithubwfRootOnOneOf2Workflow_call) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_ADDITIONAL_PROPERTIES:
				sequence_GithubwfRootOnOneOf2Workflow_callAdditionalProperties(context, (GithubwfRootOnOneOf2Workflow_callAdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS:
				sequence_GithubwfRootOnOneOf2Workflow_callInputs(context, (GithubwfRootOnOneOf2Workflow_callInputs) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_DEFAULT:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_DEPRECATION_MESSAGE:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_DESCRIPTION:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_REQUIRED:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_INPUTS_PATTERN_PROPERTIES0_TYPE:
				sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type(context, (GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_callItems(context, (GithubwfRootOnOneOf2Workflow_callItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS:
				sequence_GithubwfRootOnOneOf2Workflow_callSecrets(context, (GithubwfRootOnOneOf2Workflow_callSecrets) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsItems(context, (GithubwfRootOnOneOf2Workflow_callSecretsItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_DESCRIPTION:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_ADDITIONAL_PROPERTIES:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_REQUIRED_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_PATTERN_PROPERTIES0_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString(context, (GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeArray(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeNull(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeObject(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_SECRETS_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeString(context, (GithubwfRootOnOneOf2Workflow_callSecretsTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeArray(context, (GithubwfRootOnOneOf2Workflow_callTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeBoolean(context, (GithubwfRootOnOneOf2Workflow_callTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeInteger(context, (GithubwfRootOnOneOf2Workflow_callTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeNull(context, (GithubwfRootOnOneOf2Workflow_callTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeNumber(context, (GithubwfRootOnOneOf2Workflow_callTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeObject(context, (GithubwfRootOnOneOf2Workflow_callTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_CALL_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_callTypeString(context, (GithubwfRootOnOneOf2Workflow_callTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH:
				sequence_GithubwfRootOnOneOf2Workflow_dispatch(context, (GithubwfRootOnOneOf2Workflow_dispatch) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_ADDITIONAL_PROPERTIES:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties(context, (GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputs(context, (GithubwfRootOnOneOf2Workflow_dispatchInputs) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_ADDITIONAL_PROPERTIES:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEFAULT_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DEPRECATION_MESSAGE:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_DESCRIPTION:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_OPTIONS:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_OPTIONS_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_REQUIRED:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_TYPE:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchItems(context, (GithubwfRootOnOneOf2Workflow_dispatchItems) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeArray(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeInteger(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeNull(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeNumber(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeObject(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeString(context, (GithubwfRootOnOneOf2Workflow_dispatchTypeString) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_RUN:
				sequence_GithubwfRootOnOneOf2Workflow_run(context, (GithubwfRootOnOneOf2Workflow_run) semanticObject); 
				return; 
			case GithubwfPackage.GLOBS:
				sequence_Globs(context, (Globs) semanticObject); 
				return; 
			case GithubwfPackage.GLOBS_ITEMS:
				sequence_GlobsItems(context, (GlobsItems) semanticObject); 
				return; 
			case GithubwfPackage.PATH:
				sequence_Path(context, (Path) semanticObject); 
				return; 
			case GithubwfPackage.REF:
				sequence_Ref(context, (Ref) semanticObject); 
				return; 
			case GithubwfPackage.REF_ADDITIONAL_PROPERTIES:
				sequence_RefAdditionalProperties(context, (RefAdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.REF_BRANCHES:
				sequence_RefBranches(context, (RefBranches) semanticObject); 
				return; 
			case GithubwfPackage.REF_BRANCHES_45IGNORE:
				sequence_RefBranches_45ignore(context, (RefBranches_45ignore) semanticObject); 
				return; 
			case GithubwfPackage.REF_ITEMS:
				sequence_RefItems(context, (RefItems) semanticObject); 
				return; 
			case GithubwfPackage.REF_PATHS:
				sequence_RefPaths(context, (RefPaths) semanticObject); 
				return; 
			case GithubwfPackage.REF_PATHS_45IGNORE:
				sequence_RefPaths_45ignore(context, (RefPaths_45ignore) semanticObject); 
				return; 
			case GithubwfPackage.REF_TAGS:
				sequence_RefTags(context, (RefTags) semanticObject); 
				return; 
			case GithubwfPackage.REF_TAGS_45IGNORE:
				sequence_RefTags_45ignore(context, (RefTags_45ignore) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_ARRAY:
				sequence_RefTypeArray(context, (RefTypeArray) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_BOOLEAN:
				sequence_RefTypeBoolean(context, (RefTypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_INTEGER:
				sequence_RefTypeInteger(context, (RefTypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_NULL:
				sequence_RefTypeNull(context, (RefTypeNull) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_NUMBER:
				sequence_RefTypeNumber(context, (RefTypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_OBJECT:
				sequence_RefTypeObject(context, (RefTypeObject) semanticObject); 
				return; 
			case GithubwfPackage.REF_TYPE_STRING:
				sequence_RefTypeString(context, (RefTypeString) semanticObject); 
				return; 
			}
		else if (epackage == JsonMMPackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case JsonMMPackage.ARRAY_VALUE:
				sequence_ArrayValue(context, (ArrayValue) semanticObject); 
				return; 
			case JsonMMPackage.BOOLEAN_VALUE:
				sequence_BooleanValue(context, (BooleanValue) semanticObject); 
				return; 
			case JsonMMPackage.JSON_DOCUMENT:
				sequence_JsonDocument(context, (JsonDocument) semanticObject); 
				return; 
			case JsonMMPackage.KEY_VALUE_PAIR:
				sequence_KeyValuePair(context, (KeyValuePair) semanticObject); 
				return; 
			case JsonMMPackage.NULL_VALUE:
				sequence_NullValue(context, (NullValue) semanticObject); 
				return; 
			case JsonMMPackage.NUMBER_VALUE:
				sequence_NumberValue(context, (NumberValue) semanticObject); 
				return; 
			case JsonMMPackage.OBJECT_VALUE:
				sequence_ObjectValue(context, (ObjectValue) semanticObject); 
				return; 
			case JsonMMPackage.STRING_VALUE:
				sequence_StringValue(context, (StringValue) semanticObject); 
				return; 
			}
		if (errorAcceptor != null)
			errorAcceptor.accept(diagnosticProvider.createInvalidContextOrTypeDiagnostic(semanticObject, context));
	}
	
	/**
	 * Contexts:
	 *     Value returns ArrayValue
	 *     ArrayValue returns ArrayValue
	 *
	 * Constraint:
	 *     (value+=Value value+=Value*)?
	 */
	protected void sequence_ArrayValue(ISerializationContext context, ArrayValue semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Value returns BooleanValue
	 *     BooleanValue returns BooleanValue
	 *
	 * Constraint:
	 *     value=EBoolean
	 */
	protected void sequence_BooleanValue(ISerializationContext context, BooleanValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.BOOLEAN_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.BOOLEAN_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0(), semanticObject.isValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Branch returns Branch
	 *
	 * Constraint:
	 *     branch=Globs
	 */
	protected void sequence_Branch(ISerializationContext context, Branch semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getBranch_Branch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getBranch_Branch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getBranchAccess().getBranchGlobsParserRuleCall_0(), semanticObject.getBranch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectPropertiesAbstract returns EventObjectAdditionalProperties
	 *     EventObjectAdditionalProperties returns EventObjectAdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_EventObjectAdditionalProperties(ISerializationContext context, EventObjectAdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectAdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectAdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectAdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectAdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getEventObjectAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectItems returns EventObjectItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_EventObjectItems(ISerializationContext context, EventObjectItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeArray
	 *     EventObjectTypeArray returns EventObjectTypeArray
	 *
	 * Constraint:
	 *     (eventObject+=EventObjectItems eventObject+=EventObjectItems*)?
	 */
	protected void sequence_EventObjectTypeArray(ISerializationContext context, EventObjectTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeBoolean
	 *     EventObjectTypeBoolean returns EventObjectTypeBoolean
	 *
	 * Constraint:
	 *     eventObject=EBooleanObject
	 */
	protected void sequence_EventObjectTypeBoolean(ISerializationContext context, EventObjectTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeBoolean_EventObject()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeBoolean_EventObject()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectTypeBooleanAccess().getEventObjectEBooleanObjectParserRuleCall_0(), semanticObject.getEventObject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeInteger
	 *     EventObjectTypeInteger returns EventObjectTypeInteger
	 *
	 * Constraint:
	 *     eventObject=EDoubleObject
	 */
	protected void sequence_EventObjectTypeInteger(ISerializationContext context, EventObjectTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeInteger_EventObject()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeInteger_EventObject()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectTypeIntegerAccess().getEventObjectEDoubleObjectParserRuleCall_0(), semanticObject.getEventObject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeNull
	 *     EventObjectTypeNull returns EventObjectTypeNull
	 *
	 * Constraint:
	 *     eventObject=NullValue
	 */
	protected void sequence_EventObjectTypeNull(ISerializationContext context, EventObjectTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeNull_EventObject()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeNull_EventObject()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectTypeNullAccess().getEventObjectNullValueParserRuleCall_0(), semanticObject.getEventObject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeNumber
	 *     EventObjectTypeNumber returns EventObjectTypeNumber
	 *
	 * Constraint:
	 *     eventObject=EDoubleObject
	 */
	protected void sequence_EventObjectTypeNumber(ISerializationContext context, EventObjectTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeNumber_EventObject()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeNumber_EventObject()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectTypeNumberAccess().getEventObjectEDoubleObjectParserRuleCall_0(), semanticObject.getEventObject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeObject
	 *     EventObjectTypeObject returns EventObjectTypeObject
	 *
	 * Constraint:
	 *     (eventObject+=EventObjectPropertiesAbstract eventObject+=EventObjectPropertiesAbstract*)?
	 */
	protected void sequence_EventObjectTypeObject(ISerializationContext context, EventObjectTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     EventObjectAbstract returns EventObjectTypeString
	 *     EventObjectTypeString returns EventObjectTypeString
	 *
	 * Constraint:
	 *     eventObject=EString
	 */
	protected void sequence_EventObjectTypeString(ISerializationContext context, EventObjectTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeString_EventObject()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObjectTypeString_EventObject()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectTypeStringAccess().getEventObjectEStringParserRuleCall_0(), semanticObject.getEventObject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     EventObject returns EventObject
	 *
	 * Constraint:
	 *     eventObject=EventObjectAbstract
	 */
	protected void sequence_EventObject(ISerializationContext context, EventObject semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getEventObject_EventObject()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getEventObject_EventObject()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getEventObjectAccess().getEventObjectEventObjectAbstractParserRuleCall_0(), semanticObject.getEventObject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Branch_protection_rule
	 *     GithubwfRootOnOneOf2Branch_protection_rule returns GithubwfRootOnOneOf2Branch_protection_rule
	 *
	 * Constraint:
	 *     branch_protection_rule=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Branch_protection_rule(ISerializationContext context, GithubwfRootOnOneOf2Branch_protection_rule semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Branch_protection_rule_Branch_protection_rule()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Branch_protection_rule_Branch_protection_rule()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Branch_protection_ruleAccess().getBranch_protection_ruleEventObjectParserRuleCall_2_0(), semanticObject.getBranch_protection_rule());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Check_run
	 *     GithubwfRootOnOneOf2Check_run returns GithubwfRootOnOneOf2Check_run
	 *
	 * Constraint:
	 *     check_run=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Check_run(ISerializationContext context, GithubwfRootOnOneOf2Check_run semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Check_run_Check_run()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Check_run_Check_run()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Check_runAccess().getCheck_runEventObjectParserRuleCall_2_0(), semanticObject.getCheck_run());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Check_suite
	 *     GithubwfRootOnOneOf2Check_suite returns GithubwfRootOnOneOf2Check_suite
	 *
	 * Constraint:
	 *     check_suite=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Check_suite(ISerializationContext context, GithubwfRootOnOneOf2Check_suite semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Check_suite_Check_suite()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Check_suite_Check_suite()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Check_suiteAccess().getCheck_suiteEventObjectParserRuleCall_2_0(), semanticObject.getCheck_suite());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Create
	 *     GithubwfRootOnOneOf2Create returns GithubwfRootOnOneOf2Create
	 *
	 * Constraint:
	 *     create=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Create(ISerializationContext context, GithubwfRootOnOneOf2Create semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Create_Create()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Create_Create()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2CreateAccess().getCreateEventObjectParserRuleCall_2_0(), semanticObject.getCreate());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Delete
	 *     GithubwfRootOnOneOf2Delete returns GithubwfRootOnOneOf2Delete
	 *
	 * Constraint:
	 *     delete=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Delete(ISerializationContext context, GithubwfRootOnOneOf2Delete semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Delete_Delete()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Delete_Delete()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2DeleteAccess().getDeleteEventObjectParserRuleCall_2_0(), semanticObject.getDelete());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Deployment
	 *     GithubwfRootOnOneOf2Deployment returns GithubwfRootOnOneOf2Deployment
	 *
	 * Constraint:
	 *     deployment=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Deployment(ISerializationContext context, GithubwfRootOnOneOf2Deployment semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Deployment_Deployment()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Deployment_Deployment()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2DeploymentAccess().getDeploymentEventObjectParserRuleCall_2_0(), semanticObject.getDeployment());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Deployment_status
	 *     GithubwfRootOnOneOf2Deployment_status returns GithubwfRootOnOneOf2Deployment_status
	 *
	 * Constraint:
	 *     deployment_status=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Deployment_status(ISerializationContext context, GithubwfRootOnOneOf2Deployment_status semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Deployment_status_Deployment_status()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Deployment_status_Deployment_status()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Deployment_statusAccess().getDeployment_statusEventObjectParserRuleCall_2_0(), semanticObject.getDeployment_status());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Discussion
	 *     GithubwfRootOnOneOf2Discussion returns GithubwfRootOnOneOf2Discussion
	 *
	 * Constraint:
	 *     discussion=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Discussion(ISerializationContext context, GithubwfRootOnOneOf2Discussion semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Discussion_Discussion()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Discussion_Discussion()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2DiscussionAccess().getDiscussionEventObjectParserRuleCall_2_0(), semanticObject.getDiscussion());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Discussion_comment
	 *     GithubwfRootOnOneOf2Discussion_comment returns GithubwfRootOnOneOf2Discussion_comment
	 *
	 * Constraint:
	 *     discussion_comment=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Discussion_comment(ISerializationContext context, GithubwfRootOnOneOf2Discussion_comment semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Discussion_comment_Discussion_comment()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Discussion_comment_Discussion_comment()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Discussion_commentAccess().getDiscussion_commentEventObjectParserRuleCall_2_0(), semanticObject.getDiscussion_comment());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Fork
	 *     GithubwfRootOnOneOf2Fork returns GithubwfRootOnOneOf2Fork
	 *
	 * Constraint:
	 *     fork=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Fork(ISerializationContext context, GithubwfRootOnOneOf2Fork semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Fork_Fork()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Fork_Fork()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ForkAccess().getForkEventObjectParserRuleCall_2_0(), semanticObject.getFork());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Gollum
	 *     GithubwfRootOnOneOf2Gollum returns GithubwfRootOnOneOf2Gollum
	 *
	 * Constraint:
	 *     gollum=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Gollum(ISerializationContext context, GithubwfRootOnOneOf2Gollum semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Gollum_Gollum()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Gollum_Gollum()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2GollumAccess().getGollumEventObjectParserRuleCall_2_0(), semanticObject.getGollum());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Issue_comment
	 *     GithubwfRootOnOneOf2Issue_comment returns GithubwfRootOnOneOf2Issue_comment
	 *
	 * Constraint:
	 *     issue_comment=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Issue_comment(ISerializationContext context, GithubwfRootOnOneOf2Issue_comment semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Issue_comment_Issue_comment()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Issue_comment_Issue_comment()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Issue_commentAccess().getIssue_commentEventObjectParserRuleCall_2_0(), semanticObject.getIssue_comment());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Issues
	 *     GithubwfRootOnOneOf2Issues returns GithubwfRootOnOneOf2Issues
	 *
	 * Constraint:
	 *     issues=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Issues(ISerializationContext context, GithubwfRootOnOneOf2Issues semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Issues_Issues()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Issues_Issues()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2IssuesAccess().getIssuesEventObjectParserRuleCall_2_0(), semanticObject.getIssues());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Label
	 *     GithubwfRootOnOneOf2Label returns GithubwfRootOnOneOf2Label
	 *
	 * Constraint:
	 *     label=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Label(ISerializationContext context, GithubwfRootOnOneOf2Label semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Label_Label()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Label_Label()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2LabelAccess().getLabelEventObjectParserRuleCall_2_0(), semanticObject.getLabel());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Member
	 *     GithubwfRootOnOneOf2Member returns GithubwfRootOnOneOf2Member
	 *
	 * Constraint:
	 *     member=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Member(ISerializationContext context, GithubwfRootOnOneOf2Member semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Member_Member()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Member_Member()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2MemberAccess().getMemberEventObjectParserRuleCall_2_0(), semanticObject.getMember());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Merge_group
	 *     GithubwfRootOnOneOf2Merge_group returns GithubwfRootOnOneOf2Merge_group
	 *
	 * Constraint:
	 *     merge_group=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Merge_group(ISerializationContext context, GithubwfRootOnOneOf2Merge_group semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Merge_group_Merge_group()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Merge_group_Merge_group()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Merge_groupAccess().getMerge_groupEventObjectParserRuleCall_2_0(), semanticObject.getMerge_group());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Milestone
	 *     GithubwfRootOnOneOf2Milestone returns GithubwfRootOnOneOf2Milestone
	 *
	 * Constraint:
	 *     milestone=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Milestone(ISerializationContext context, GithubwfRootOnOneOf2Milestone semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Milestone_Milestone()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Milestone_Milestone()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2MilestoneAccess().getMilestoneEventObjectParserRuleCall_2_0(), semanticObject.getMilestone());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Page_build
	 *     GithubwfRootOnOneOf2Page_build returns GithubwfRootOnOneOf2Page_build
	 *
	 * Constraint:
	 *     page_build=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Page_build(ISerializationContext context, GithubwfRootOnOneOf2Page_build semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Page_build_Page_build()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Page_build_Page_build()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Page_buildAccess().getPage_buildEventObjectParserRuleCall_2_0(), semanticObject.getPage_build());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Project
	 *     GithubwfRootOnOneOf2Project returns GithubwfRootOnOneOf2Project
	 *
	 * Constraint:
	 *     project=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Project(ISerializationContext context, GithubwfRootOnOneOf2Project semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Project_Project()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Project_Project()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ProjectAccess().getProjectEventObjectParserRuleCall_2_0(), semanticObject.getProject());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Project_card
	 *     GithubwfRootOnOneOf2Project_card returns GithubwfRootOnOneOf2Project_card
	 *
	 * Constraint:
	 *     project_card=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Project_card(ISerializationContext context, GithubwfRootOnOneOf2Project_card semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Project_card_Project_card()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Project_card_Project_card()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Project_cardAccess().getProject_cardEventObjectParserRuleCall_2_0(), semanticObject.getProject_card());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Project_column
	 *     GithubwfRootOnOneOf2Project_column returns GithubwfRootOnOneOf2Project_column
	 *
	 * Constraint:
	 *     project_column=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Project_column(ISerializationContext context, GithubwfRootOnOneOf2Project_column semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Project_column_Project_column()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Project_column_Project_column()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Project_columnAccess().getProject_columnEventObjectParserRuleCall_2_0(), semanticObject.getProject_column());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Public
	 *     GithubwfRootOnOneOf2Public returns GithubwfRootOnOneOf2Public
	 *
	 * Constraint:
	 *     public_=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Public(ISerializationContext context, GithubwfRootOnOneOf2Public semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Public_Public_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Public_Public_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2PublicAccess().getPublic_EventObjectParserRuleCall_2_0(), semanticObject.getPublic_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Pull_request
	 *     GithubwfRootOnOneOf2Pull_request returns GithubwfRootOnOneOf2Pull_request
	 *
	 * Constraint:
	 *     pull_request=Ref
	 */
	protected void sequence_GithubwfRootOnOneOf2Pull_request(ISerializationContext context, GithubwfRootOnOneOf2Pull_request semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_Pull_request()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_Pull_request()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Pull_requestAccess().getPull_requestRefParserRuleCall_2_0(), semanticObject.getPull_request());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Pull_request_review
	 *     GithubwfRootOnOneOf2Pull_request_review returns GithubwfRootOnOneOf2Pull_request_review
	 *
	 * Constraint:
	 *     pull_request_review=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Pull_request_review(ISerializationContext context, GithubwfRootOnOneOf2Pull_request_review semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_review_Pull_request_review()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_review_Pull_request_review()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Pull_request_reviewAccess().getPull_request_reviewEventObjectParserRuleCall_2_0(), semanticObject.getPull_request_review());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Pull_request_review_comment
	 *     GithubwfRootOnOneOf2Pull_request_review_comment returns GithubwfRootOnOneOf2Pull_request_review_comment
	 *
	 * Constraint:
	 *     pull_request_review_comment=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Pull_request_review_comment(ISerializationContext context, GithubwfRootOnOneOf2Pull_request_review_comment semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_review_comment_Pull_request_review_comment()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_review_comment_Pull_request_review_comment()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Pull_request_review_commentAccess().getPull_request_review_commentEventObjectParserRuleCall_2_0(), semanticObject.getPull_request_review_comment());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Pull_request_target
	 *     GithubwfRootOnOneOf2Pull_request_target returns GithubwfRootOnOneOf2Pull_request_target
	 *
	 * Constraint:
	 *     pull_request_target=Ref
	 */
	protected void sequence_GithubwfRootOnOneOf2Pull_request_target(ISerializationContext context, GithubwfRootOnOneOf2Pull_request_target semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_target_Pull_request_target()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Pull_request_target_Pull_request_target()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Pull_request_targetAccess().getPull_request_targetRefParserRuleCall_2_0(), semanticObject.getPull_request_target());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Push
	 *     GithubwfRootOnOneOf2Push returns GithubwfRootOnOneOf2Push
	 *
	 * Constraint:
	 *     push=Ref
	 */
	protected void sequence_GithubwfRootOnOneOf2Push(ISerializationContext context, GithubwfRootOnOneOf2Push semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Push_Push()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Push_Push()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2PushAccess().getPushRefParserRuleCall_2_0(), semanticObject.getPush());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Registry_package
	 *     GithubwfRootOnOneOf2Registry_package returns GithubwfRootOnOneOf2Registry_package
	 *
	 * Constraint:
	 *     registry_package=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Registry_package(ISerializationContext context, GithubwfRootOnOneOf2Registry_package semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Registry_package_Registry_package()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Registry_package_Registry_package()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Registry_packageAccess().getRegistry_packageEventObjectParserRuleCall_2_0(), semanticObject.getRegistry_package());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Release
	 *     GithubwfRootOnOneOf2Release returns GithubwfRootOnOneOf2Release
	 *
	 * Constraint:
	 *     release=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Release(ISerializationContext context, GithubwfRootOnOneOf2Release semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Release_Release()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Release_Release()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ReleaseAccess().getReleaseEventObjectParserRuleCall_2_0(), semanticObject.getRelease());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Repository_dispatch
	 *     GithubwfRootOnOneOf2Repository_dispatch returns GithubwfRootOnOneOf2Repository_dispatch
	 *
	 * Constraint:
	 *     repository_dispatch=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Repository_dispatch(ISerializationContext context, GithubwfRootOnOneOf2Repository_dispatch semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Repository_dispatch_Repository_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Repository_dispatch_Repository_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Repository_dispatchAccess().getRepository_dispatchEventObjectParserRuleCall_2_0(), semanticObject.getRepository_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsPropertiesAbstract returns GithubwfRootOnOneOf2ScheduleItemsCron
	 *     GithubwfRootOnOneOf2ScheduleItemsCron returns GithubwfRootOnOneOf2ScheduleItemsCron
	 *
	 * Constraint:
	 *     cron=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsCron(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsCron semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsCron_Cron()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsCron_Cron()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsCronAccess().getCronEStringParserRuleCall_2_0(), semanticObject.getCron());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsItems returns GithubwfRootOnOneOf2ScheduleItemsItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsItems(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeArray
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeArray returns GithubwfRootOnOneOf2ScheduleItemsTypeArray
	 *
	 * Constraint:
	 *     (items+=GithubwfRootOnOneOf2ScheduleItemsItems items+=GithubwfRootOnOneOf2ScheduleItemsItems*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeArray(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeBoolean
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeBoolean returns GithubwfRootOnOneOf2ScheduleItemsTypeBoolean
	 *
	 * Constraint:
	 *     items=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeBoolean_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeBoolean_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsTypeBooleanAccess().getItemsEBooleanObjectParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeInteger
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeInteger returns GithubwfRootOnOneOf2ScheduleItemsTypeInteger
	 *
	 * Constraint:
	 *     items=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeInteger(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeInteger_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeInteger_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsTypeIntegerAccess().getItemsEDoubleObjectParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeNull
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeNull returns GithubwfRootOnOneOf2ScheduleItemsTypeNull
	 *
	 * Constraint:
	 *     items=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeNull(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeNull_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeNull_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsTypeNullAccess().getItemsNullValueParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeNumber
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeNumber returns GithubwfRootOnOneOf2ScheduleItemsTypeNumber
	 *
	 * Constraint:
	 *     items=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeNumber_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeNumber_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsTypeNumberAccess().getItemsEDoubleObjectParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeObject
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeObject returns GithubwfRootOnOneOf2ScheduleItemsTypeObject
	 *
	 * Constraint:
	 *     (items+=GithubwfRootOnOneOf2ScheduleItemsPropertiesAbstract items+=GithubwfRootOnOneOf2ScheduleItemsPropertiesAbstract*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeObject(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItemsAbstract returns GithubwfRootOnOneOf2ScheduleItemsTypeString
	 *     GithubwfRootOnOneOf2ScheduleItemsTypeString returns GithubwfRootOnOneOf2ScheduleItemsTypeString
	 *
	 * Constraint:
	 *     items=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItemsTypeString(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItemsTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeString_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItemsTypeString_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsTypeStringAccess().getItemsEStringParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2ScheduleItems returns GithubwfRootOnOneOf2ScheduleItems
	 *
	 * Constraint:
	 *     items=GithubwfRootOnOneOf2ScheduleItemsAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2ScheduleItems(ISerializationContext context, GithubwfRootOnOneOf2ScheduleItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2ScheduleItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2ScheduleItemsAccess().getItemsGithubwfRootOnOneOf2ScheduleItemsAbstractParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Schedule
	 *     GithubwfRootOnOneOf2Schedule returns GithubwfRootOnOneOf2Schedule
	 *
	 * Constraint:
	 *     (schedule+=GithubwfRootOnOneOf2ScheduleItems schedule+=GithubwfRootOnOneOf2ScheduleItems*)
	 */
	protected void sequence_GithubwfRootOnOneOf2Schedule(ISerializationContext context, GithubwfRootOnOneOf2Schedule semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Status
	 *     GithubwfRootOnOneOf2Status returns GithubwfRootOnOneOf2Status
	 *
	 * Constraint:
	 *     status=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Status(ISerializationContext context, GithubwfRootOnOneOf2Status semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Status_Status()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Status_Status()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2StatusAccess().getStatusEventObjectParserRuleCall_2_0(), semanticObject.getStatus());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Watch
	 *     GithubwfRootOnOneOf2Watch returns GithubwfRootOnOneOf2Watch
	 *
	 * Constraint:
	 *     watch=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Watch(ISerializationContext context, GithubwfRootOnOneOf2Watch semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Watch_Watch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Watch_Watch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2WatchAccess().getWatchEventObjectParserRuleCall_2_0(), semanticObject.getWatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callAdditionalProperties
	 *     GithubwfRootOnOneOf2Workflow_callAdditionalProperties returns GithubwfRootOnOneOf2Workflow_callAdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callAdditionalProperties(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callAdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callAdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callAdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callAdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callAdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean
	 *
	 * Constraint:
	 *     default_=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBoolean_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeBooleanAccess().getDefault_EBooleanObjectParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber
	 *
	 * Constraint:
	 *     default_=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumber_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeNumberAccess().getDefault_EDoubleObjectParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString
	 *
	 * Constraint:
	 *     default_=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeString_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultTypeStringAccess().getDefault_EStringParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default
	 *
	 * Constraint:
	 *     default_=GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Default_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultAccess().getDefault_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DefaultAbstractParserRuleCall_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage
	 *
	 * Constraint:
	 *     deprecationMessage=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage_DeprecationMessage()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessage_DeprecationMessage()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DeprecationMessageAccess().getDeprecationMessageEStringParserRuleCall_2_0(), semanticObject.getDeprecationMessage());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description
	 *
	 * Constraint:
	 *     description=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description_Description()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Description_Description()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0DescriptionAccess().getDescriptionEStringParserRuleCall_2_0(), semanticObject.getDescription());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required
	 *
	 * Constraint:
	 *     required=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Required_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0RequiredAccess().getRequiredEBooleanObjectParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type
	 *
	 * Constraint:
	 *     type=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type_Type()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0Type_Type()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callInputsPatternProperties0TypeAccess().getTypeJsonDocumentParserRuleCall_2_0(), semanticObject.getType());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callInputsPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0
	 *     GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0 returns GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0
	 *
	 * Constraint:
	 *     (
	 *         key=EString 
	 *         (
	 *             patternProperties0+=GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract 
	 *             patternProperties0+=GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0PropertiesAbstract*
	 *         )?
	 *     )
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputsPatternProperties0 semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callInputs
	 *     GithubwfRootOnOneOf2Workflow_callInputs returns GithubwfRootOnOneOf2Workflow_callInputs
	 *
	 * Constraint:
	 *     (inputs+=GithubwfRootOnOneOf2Workflow_callInputsPropertiesAbstract inputs+=GithubwfRootOnOneOf2Workflow_callInputsPropertiesAbstract*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callInputs(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callInputs semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callItems returns GithubwfRootOnOneOf2Workflow_callItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callItems(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsItems returns GithubwfRootOnOneOf2Workflow_callSecretsItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsItems(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description
	 *
	 * Constraint:
	 *     description=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description_Description()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Description_Description()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0DescriptionAccess().getDescriptionEStringParserRuleCall_2_0(), semanticObject.getDescription());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0ItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray
	 *
	 * Constraint:
	 *     (
	 *         required+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems 
	 *         required+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredItems*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean
	 *
	 * Constraint:
	 *     required=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBoolean_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeBooleanAccess().getRequiredEBooleanObjectParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger
	 *
	 * Constraint:
	 *     required=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeInteger_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeIntegerAccess().getRequiredEDoubleObjectParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull
	 *
	 * Constraint:
	 *     required=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNull_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNullAccess().getRequiredNullValueParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber
	 *
	 * Constraint:
	 *     required=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumber_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeNumberAccess().getRequiredEDoubleObjectParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject
	 *
	 * Constraint:
	 *     (
	 *         required+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredPropertiesAbstract 
	 *         required+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredPropertiesAbstract*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString
	 *
	 * Constraint:
	 *     required=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeString_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredTypeStringAccess().getRequiredEStringParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required
	 *
	 * Constraint:
	 *     required=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Required_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAccess().getRequiredGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0RequiredAbstractParserRuleCall_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray
	 *
	 * Constraint:
	 *     (
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items 
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Items*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean
	 *
	 * Constraint:
	 *     patternProperties0=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBoolean_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeBooleanAccess().getPatternProperties0EBooleanObjectParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger
	 *
	 * Constraint:
	 *     patternProperties0=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeInteger_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeIntegerAccess().getPatternProperties0EDoubleObjectParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull
	 *
	 * Constraint:
	 *     patternProperties0=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNull_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNullAccess().getPatternProperties0NullValueParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber
	 *
	 * Constraint:
	 *     patternProperties0=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumber_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeNumberAccess().getPatternProperties0EDoubleObjectParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject
	 *
	 * Constraint:
	 *     (
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0PropertiesAbstract 
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0PropertiesAbstract*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString
	 *
	 * Constraint:
	 *     patternProperties0=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeString_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0TypeStringAccess().getPatternProperties0EStringParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0
	 *     GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0 returns GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0
	 *
	 * Constraint:
	 *     (key=EString patternProperties0=GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Abstract)
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0 semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Access().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0Access().getPatternProperties0GithubwfRootOnOneOf2Workflow_callSecretsPatternProperties0AbstractParserRuleCall_2_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeArray
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeArray returns GithubwfRootOnOneOf2Workflow_callSecretsTypeArray
	 *
	 * Constraint:
	 *     (secrets+=GithubwfRootOnOneOf2Workflow_callSecretsItems secrets+=GithubwfRootOnOneOf2Workflow_callSecretsItems*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean returns GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean
	 *
	 * Constraint:
	 *     secrets=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean_Secrets()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeBoolean_Secrets()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsTypeBooleanAccess().getSecretsEBooleanObjectParserRuleCall_2_0(), semanticObject.getSecrets());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger returns GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger
	 *
	 * Constraint:
	 *     secrets=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeInteger_Secrets()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeInteger_Secrets()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsTypeIntegerAccess().getSecretsEDoubleObjectParserRuleCall_2_0(), semanticObject.getSecrets());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeNull
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeNull returns GithubwfRootOnOneOf2Workflow_callSecretsTypeNull
	 *
	 * Constraint:
	 *     secrets=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeNull_Secrets()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeNull_Secrets()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsTypeNullAccess().getSecretsNullValueParserRuleCall_2_0(), semanticObject.getSecrets());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber returns GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber
	 *
	 * Constraint:
	 *     secrets=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeNumber_Secrets()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeNumber_Secrets()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsTypeNumberAccess().getSecretsEDoubleObjectParserRuleCall_2_0(), semanticObject.getSecrets());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeObject
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeObject returns GithubwfRootOnOneOf2Workflow_callSecretsTypeObject
	 *
	 * Constraint:
	 *     (secrets+=GithubwfRootOnOneOf2Workflow_callSecretsPropertiesAbstract secrets+=GithubwfRootOnOneOf2Workflow_callSecretsPropertiesAbstract*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callSecretsAbstract returns GithubwfRootOnOneOf2Workflow_callSecretsTypeString
	 *     GithubwfRootOnOneOf2Workflow_callSecretsTypeString returns GithubwfRootOnOneOf2Workflow_callSecretsTypeString
	 *
	 * Constraint:
	 *     secrets=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecretsTypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecretsTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeString_Secrets()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecretsTypeString_Secrets()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsTypeStringAccess().getSecretsEStringParserRuleCall_2_0(), semanticObject.getSecrets());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_callSecrets
	 *     GithubwfRootOnOneOf2Workflow_callSecrets returns GithubwfRootOnOneOf2Workflow_callSecrets
	 *
	 * Constraint:
	 *     secrets=GithubwfRootOnOneOf2Workflow_callSecretsAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callSecrets(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callSecrets semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecrets_Secrets()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callSecrets_Secrets()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callSecretsAccess().getSecretsGithubwfRootOnOneOf2Workflow_callSecretsAbstractParserRuleCall_0(), semanticObject.getSecrets());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeArray
	 *     GithubwfRootOnOneOf2Workflow_callTypeArray returns GithubwfRootOnOneOf2Workflow_callTypeArray
	 *
	 * Constraint:
	 *     (workflow_call+=GithubwfRootOnOneOf2Workflow_callItems workflow_call+=GithubwfRootOnOneOf2Workflow_callItems*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_callTypeBoolean returns GithubwfRootOnOneOf2Workflow_callTypeBoolean
	 *
	 * Constraint:
	 *     workflow_call=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeBoolean_Workflow_call()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeBoolean_Workflow_call()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callTypeBooleanAccess().getWorkflow_callEBooleanObjectParserRuleCall_2_0(), semanticObject.getWorkflow_call());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeInteger
	 *     GithubwfRootOnOneOf2Workflow_callTypeInteger returns GithubwfRootOnOneOf2Workflow_callTypeInteger
	 *
	 * Constraint:
	 *     workflow_call=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeInteger_Workflow_call()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeInteger_Workflow_call()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callTypeIntegerAccess().getWorkflow_callEDoubleObjectParserRuleCall_2_0(), semanticObject.getWorkflow_call());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeNull
	 *     GithubwfRootOnOneOf2Workflow_callTypeNull returns GithubwfRootOnOneOf2Workflow_callTypeNull
	 *
	 * Constraint:
	 *     workflow_call=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeNull_Workflow_call()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeNull_Workflow_call()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callTypeNullAccess().getWorkflow_callNullValueParserRuleCall_2_0(), semanticObject.getWorkflow_call());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeNumber
	 *     GithubwfRootOnOneOf2Workflow_callTypeNumber returns GithubwfRootOnOneOf2Workflow_callTypeNumber
	 *
	 * Constraint:
	 *     workflow_call=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeNumber_Workflow_call()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeNumber_Workflow_call()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callTypeNumberAccess().getWorkflow_callEDoubleObjectParserRuleCall_2_0(), semanticObject.getWorkflow_call());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeObject
	 *     GithubwfRootOnOneOf2Workflow_callTypeObject returns GithubwfRootOnOneOf2Workflow_callTypeObject
	 *
	 * Constraint:
	 *     (workflow_call+=GithubwfRootOnOneOf2Workflow_callPropertiesAbstract workflow_call+=GithubwfRootOnOneOf2Workflow_callPropertiesAbstract*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_callAbstract returns GithubwfRootOnOneOf2Workflow_callTypeString
	 *     GithubwfRootOnOneOf2Workflow_callTypeString returns GithubwfRootOnOneOf2Workflow_callTypeString
	 *
	 * Constraint:
	 *     workflow_call=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_callTypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_callTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeString_Workflow_call()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_callTypeString_Workflow_call()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callTypeStringAccess().getWorkflow_callEStringParserRuleCall_2_0(), semanticObject.getWorkflow_call());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_call
	 *     GithubwfRootOnOneOf2Workflow_call returns GithubwfRootOnOneOf2Workflow_call
	 *
	 * Constraint:
	 *     workflow_call=GithubwfRootOnOneOf2Workflow_callAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_call(ISerializationContext context, GithubwfRootOnOneOf2Workflow_call semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_call_Workflow_call()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_call_Workflow_call()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_callAccess().getWorkflow_callGithubwfRootOnOneOf2Workflow_callAbstractParserRuleCall_0(), semanticObject.getWorkflow_call());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties
	 *     GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties returns GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchAdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray
	 *
	 * Constraint:
	 *     (
	 *         default_+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems 
	 *         default_+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultItems*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean
	 *
	 * Constraint:
	 *     default_=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBoolean_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeBooleanAccess().getDefault_EBooleanObjectParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger
	 *
	 * Constraint:
	 *     default_=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeInteger_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeIntegerAccess().getDefault_EDoubleObjectParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull
	 *
	 * Constraint:
	 *     default_=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNull_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNullAccess().getDefault_NullValueParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber
	 *
	 * Constraint:
	 *     default_=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumber_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeNumberAccess().getDefault_EDoubleObjectParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject
	 *
	 * Constraint:
	 *     (
	 *         default_+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultPropertiesAbstract 
	 *         default_+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultPropertiesAbstract*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString
	 *
	 * Constraint:
	 *     default_=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeString_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultTypeStringAccess().getDefault_EStringParserRuleCall_2_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default
	 *
	 * Constraint:
	 *     default_=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default_Default_()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Default_Default_()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAccess().getDefault_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DefaultAbstractParserRuleCall_0(), semanticObject.getDefault_());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage
	 *
	 * Constraint:
	 *     deprecationMessage=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage_DeprecationMessage()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessage_DeprecationMessage()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DeprecationMessageAccess().getDeprecationMessageEStringParserRuleCall_2_0(), semanticObject.getDeprecationMessage());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description
	 *
	 * Constraint:
	 *     description=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description_Description()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Description_Description()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0DescriptionAccess().getDescriptionEStringParserRuleCall_2_0(), semanticObject.getDescription());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems
	 *
	 * Constraint:
	 *     items=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItemsAccess().getItemsEStringParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options
	 *
	 * Constraint:
	 *     (
	 *         options+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems 
	 *         options+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0OptionsItems*
	 *     )
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Options semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required
	 *
	 * Constraint:
	 *     required=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required_Required()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Required_Required()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0RequiredAccess().getRequiredEBooleanObjectParserRuleCall_2_0(), semanticObject.getRequired());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type
	 *
	 * Constraint:
	 *     type=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type_Type()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0Type_Type()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0TypeAccess().getTypeJsonDocumentParserRuleCall_2_0(), semanticObject.getType());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0 returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0
	 *
	 * Constraint:
	 *     (
	 *         key=EString 
	 *         (
	 *             patternProperties0+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract 
	 *             patternProperties0+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0PropertiesAbstract*
	 *         )?
	 *     )
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0 semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchPropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputs
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputs returns GithubwfRootOnOneOf2Workflow_dispatchInputs
	 *
	 * Constraint:
	 *     (inputs+=GithubwfRootOnOneOf2Workflow_dispatchInputsPropertiesAbstract inputs+=GithubwfRootOnOneOf2Workflow_dispatchInputsPropertiesAbstract*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputs(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputs semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchItems returns GithubwfRootOnOneOf2Workflow_dispatchItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchItems(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeArray
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeArray returns GithubwfRootOnOneOf2Workflow_dispatchTypeArray
	 *
	 * Constraint:
	 *     (workflow_dispatch+=GithubwfRootOnOneOf2Workflow_dispatchItems workflow_dispatch+=GithubwfRootOnOneOf2Workflow_dispatchItems*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean returns GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean
	 *
	 * Constraint:
	 *     workflow_dispatch=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeBoolean_Workflow_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeBoolean_Workflow_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchTypeBooleanAccess().getWorkflow_dispatchEBooleanObjectParserRuleCall_2_0(), semanticObject.getWorkflow_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeInteger
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeInteger returns GithubwfRootOnOneOf2Workflow_dispatchTypeInteger
	 *
	 * Constraint:
	 *     workflow_dispatch=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeInteger_Workflow_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeInteger_Workflow_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchTypeIntegerAccess().getWorkflow_dispatchEDoubleObjectParserRuleCall_2_0(), semanticObject.getWorkflow_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeNull
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeNull returns GithubwfRootOnOneOf2Workflow_dispatchTypeNull
	 *
	 * Constraint:
	 *     workflow_dispatch=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeNull_Workflow_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeNull_Workflow_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchTypeNullAccess().getWorkflow_dispatchNullValueParserRuleCall_2_0(), semanticObject.getWorkflow_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeNumber
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeNumber returns GithubwfRootOnOneOf2Workflow_dispatchTypeNumber
	 *
	 * Constraint:
	 *     workflow_dispatch=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeNumber_Workflow_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeNumber_Workflow_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchTypeNumberAccess().getWorkflow_dispatchEDoubleObjectParserRuleCall_2_0(), semanticObject.getWorkflow_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeObject
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeObject returns GithubwfRootOnOneOf2Workflow_dispatchTypeObject
	 *
	 * Constraint:
	 *     (
	 *         workflow_dispatch+=GithubwfRootOnOneOf2Workflow_dispatchPropertiesAbstract 
	 *         workflow_dispatch+=GithubwfRootOnOneOf2Workflow_dispatchPropertiesAbstract*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchAbstract returns GithubwfRootOnOneOf2Workflow_dispatchTypeString
	 *     GithubwfRootOnOneOf2Workflow_dispatchTypeString returns GithubwfRootOnOneOf2Workflow_dispatchTypeString
	 *
	 * Constraint:
	 *     workflow_dispatch=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchTypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeString_Workflow_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchTypeString_Workflow_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchTypeStringAccess().getWorkflow_dispatchEStringParserRuleCall_2_0(), semanticObject.getWorkflow_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatch
	 *     GithubwfRootOnOneOf2Workflow_dispatch returns GithubwfRootOnOneOf2Workflow_dispatch
	 *
	 * Constraint:
	 *     workflow_dispatch=GithubwfRootOnOneOf2Workflow_dispatchAbstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatch(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatch semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatch_Workflow_dispatch()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatch_Workflow_dispatch()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchAccess().getWorkflow_dispatchGithubwfRootOnOneOf2Workflow_dispatchAbstractParserRuleCall_0(), semanticObject.getWorkflow_dispatch());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_run
	 *     GithubwfRootOnOneOf2Workflow_run returns GithubwfRootOnOneOf2Workflow_run
	 *
	 * Constraint:
	 *     workflow_run=EventObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_run(ISerializationContext context, GithubwfRootOnOneOf2Workflow_run semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_run_Workflow_run()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_run_Workflow_run()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_runAccess().getWorkflow_runEventObjectParserRuleCall_2_0(), semanticObject.getWorkflow_run());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2 returns GithubwfRootOnOneOf2
	 *
	 * Constraint:
	 *     (on+=GithubwfRootOnOneOf2PropertiesAbstract on+=GithubwfRootOnOneOf2PropertiesAbstract*)?
	 */
	protected void sequence_GithubwfRootOnOneOf2(ISerializationContext context, GithubwfRootOnOneOf2 semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GlobsItems returns GlobsItems
	 *
	 * Constraint:
	 *     items=EString
	 */
	protected void sequence_GlobsItems(ISerializationContext context, GlobsItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGlobsItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGlobsItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGlobsItemsAccess().getItemsEStringParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Globs returns Globs
	 *
	 * Constraint:
	 *     (globs+=GlobsItems globs+=GlobsItems*)
	 */
	protected void sequence_Globs(ISerializationContext context, Globs semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     JsonDocument returns JsonDocument
	 *
	 * Constraint:
	 *     value=Value
	 */
	protected void sequence_JsonDocument(ISerializationContext context, JsonDocument semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.JSON_DOCUMENT__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.JSON_DOCUMENT__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     KeyValuePair returns KeyValuePair
	 *
	 * Constraint:
	 *     (key=EString value=Value)
	 */
	protected void sequence_KeyValuePair(ISerializationContext context, KeyValuePair semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__KEY) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__KEY));
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns NullValue
	 *     NullValue returns NullValue
	 *
	 * Constraint:
	 *     value=NullEnum
	 */
	protected void sequence_NullValue(ISerializationContext context, NullValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.NULL_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.NULL_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns NumberValue
	 *     NumberValue returns NumberValue
	 *
	 * Constraint:
	 *     value=EDouble
	 */
	protected void sequence_NumberValue(ISerializationContext context, NumberValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.NUMBER_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.NUMBER_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns ObjectValue
	 *     ObjectValue returns ObjectValue
	 *
	 * Constraint:
	 *     (keyvaluepair+=KeyValuePair keyvaluepair+=KeyValuePair*)?
	 */
	protected void sequence_ObjectValue(ISerializationContext context, ObjectValue semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Path returns Path
	 *
	 * Constraint:
	 *     path=Globs
	 */
	protected void sequence_Path(ISerializationContext context, Path semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getPath_Path()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getPath_Path()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getPathAccess().getPathGlobsParserRuleCall_0(), semanticObject.getPath());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefAdditionalProperties
	 *     RefAdditionalProperties returns RefAdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_RefAdditionalProperties(ISerializationContext context, RefAdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefAdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefAdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefAdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefAdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefAdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getRefAdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefBranches_45ignore
	 *     RefBranches_45ignore returns RefBranches_45ignore
	 *
	 * Constraint:
	 *     branches_45ignore=Branch
	 */
	protected void sequence_RefBranches_45ignore(ISerializationContext context, RefBranches_45ignore semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefBranches_45ignore_Branches_45ignore()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefBranches_45ignore_Branches_45ignore()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefBranches_45ignoreAccess().getBranches_45ignoreBranchParserRuleCall_2_0(), semanticObject.getBranches_45ignore());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefBranches
	 *     RefBranches returns RefBranches
	 *
	 * Constraint:
	 *     branches=Branch
	 */
	protected void sequence_RefBranches(ISerializationContext context, RefBranches semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefBranches_Branches()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefBranches_Branches()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefBranchesAccess().getBranchesBranchParserRuleCall_2_0(), semanticObject.getBranches());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefItems returns RefItems
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_RefItems(ISerializationContext context, RefItems semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefItems_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefItems_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefPaths_45ignore
	 *     RefPaths_45ignore returns RefPaths_45ignore
	 *
	 * Constraint:
	 *     paths_45ignore=Path
	 */
	protected void sequence_RefPaths_45ignore(ISerializationContext context, RefPaths_45ignore semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefPaths_45ignore_Paths_45ignore()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefPaths_45ignore_Paths_45ignore()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefPaths_45ignoreAccess().getPaths_45ignorePathParserRuleCall_2_0(), semanticObject.getPaths_45ignore());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefPaths
	 *     RefPaths returns RefPaths
	 *
	 * Constraint:
	 *     paths=Path
	 */
	protected void sequence_RefPaths(ISerializationContext context, RefPaths semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefPaths_Paths()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefPaths_Paths()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefPathsAccess().getPathsPathParserRuleCall_2_0(), semanticObject.getPaths());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefTags_45ignore
	 *     RefTags_45ignore returns RefTags_45ignore
	 *
	 * Constraint:
	 *     tags_45ignore=Branch
	 */
	protected void sequence_RefTags_45ignore(ISerializationContext context, RefTags_45ignore semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTags_45ignore_Tags_45ignore()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTags_45ignore_Tags_45ignore()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTags_45ignoreAccess().getTags_45ignoreBranchParserRuleCall_2_0(), semanticObject.getTags_45ignore());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefPropertiesAbstract returns RefTags
	 *     RefTags returns RefTags
	 *
	 * Constraint:
	 *     tags=Branch
	 */
	protected void sequence_RefTags(ISerializationContext context, RefTags semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTags_Tags()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTags_Tags()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTagsAccess().getTagsBranchParserRuleCall_2_0(), semanticObject.getTags());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeArray
	 *     RefTypeArray returns RefTypeArray
	 *
	 * Constraint:
	 *     (ref+=RefItems ref+=RefItems*)?
	 */
	protected void sequence_RefTypeArray(ISerializationContext context, RefTypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeBoolean
	 *     RefTypeBoolean returns RefTypeBoolean
	 *
	 * Constraint:
	 *     ref=EBooleanObject
	 */
	protected void sequence_RefTypeBoolean(ISerializationContext context, RefTypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeBoolean_Ref()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeBoolean_Ref()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTypeBooleanAccess().getRefEBooleanObjectParserRuleCall_0(), semanticObject.getRef());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeInteger
	 *     RefTypeInteger returns RefTypeInteger
	 *
	 * Constraint:
	 *     ref=EDoubleObject
	 */
	protected void sequence_RefTypeInteger(ISerializationContext context, RefTypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeInteger_Ref()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeInteger_Ref()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTypeIntegerAccess().getRefEDoubleObjectParserRuleCall_0(), semanticObject.getRef());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeNull
	 *     RefTypeNull returns RefTypeNull
	 *
	 * Constraint:
	 *     ref=NullValue
	 */
	protected void sequence_RefTypeNull(ISerializationContext context, RefTypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeNull_Ref()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeNull_Ref()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTypeNullAccess().getRefNullValueParserRuleCall_0(), semanticObject.getRef());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeNumber
	 *     RefTypeNumber returns RefTypeNumber
	 *
	 * Constraint:
	 *     ref=EDoubleObject
	 */
	protected void sequence_RefTypeNumber(ISerializationContext context, RefTypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeNumber_Ref()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeNumber_Ref()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTypeNumberAccess().getRefEDoubleObjectParserRuleCall_0(), semanticObject.getRef());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeObject
	 *     RefTypeObject returns RefTypeObject
	 *
	 * Constraint:
	 *     (ref+=RefPropertiesAbstract ref+=RefPropertiesAbstract*)?
	 */
	protected void sequence_RefTypeObject(ISerializationContext context, RefTypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     RefAbstract returns RefTypeString
	 *     RefTypeString returns RefTypeString
	 *
	 * Constraint:
	 *     ref=EString
	 */
	protected void sequence_RefTypeString(ISerializationContext context, RefTypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeString_Ref()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRefTypeString_Ref()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefTypeStringAccess().getRefEStringParserRuleCall_0(), semanticObject.getRef());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Ref returns Ref
	 *
	 * Constraint:
	 *     ref=RefAbstract
	 */
	protected void sequence_Ref(ISerializationContext context, Ref semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getRef_Ref()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getRef_Ref()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getRefAccess().getRefRefAbstractParserRuleCall_0(), semanticObject.getRef());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns StringValue
	 *     StringValue returns StringValue
	 *
	 * Constraint:
	 *     value=EString
	 */
	protected void sequence_StringValue(ISerializationContext context, StringValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.STRING_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.STRING_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
}
