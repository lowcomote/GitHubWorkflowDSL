/*
 * generated by Xtext 2.23.0
 */
package githubwf.githubwf.serializer;

import com.google.inject.Inject;
import githubwf.GithubwfPackage;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject;
import githubwf.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString;
import githubwf.githubwf.services.GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1GrammarAccess;
import java.util.Set;
import jsonMM.ArrayValue;
import jsonMM.BooleanValue;
import jsonMM.JsonDocument;
import jsonMM.JsonMMPackage;
import jsonMM.KeyValuePair;
import jsonMM.NullValue;
import jsonMM.NumberValue;
import jsonMM.ObjectValue;
import jsonMM.StringValue;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Parameter;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.serializer.ISerializationContext;
import org.eclipse.xtext.serializer.acceptor.SequenceFeeder;
import org.eclipse.xtext.serializer.sequencer.AbstractDelegatingSemanticSequencer;
import org.eclipse.xtext.serializer.sequencer.ITransientValueService.ValueTransient;

@SuppressWarnings("all")
public class GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1SemanticSequencer extends AbstractDelegatingSemanticSequencer {

	@Inject
	private GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1GrammarAccess grammarAccess;
	
	@Override
	public void sequence(ISerializationContext context, EObject semanticObject) {
		EPackage epackage = semanticObject.eClass().getEPackage();
		ParserRule rule = context.getParserRule();
		Action action = context.getAssignedAction();
		Set<Parameter> parameters = context.getEnabledBooleanParameters();
		if (epackage == GithubwfPackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_ADDITIONAL_PROPERTIES:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_ITEMS:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_ARRAY:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_BOOLEAN:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_INTEGER:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_NULL:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_NUMBER:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_OBJECT:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject) semanticObject); 
				return; 
			case GithubwfPackage.GITHUBWF_ROOT_ON_ONE_OF2_WORKFLOW_DISPATCH_INPUTS_PATTERN_PROPERTIES0_ALL_OF1_TYPE_STRING:
				sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString(context, (GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString) semanticObject); 
				return; 
			}
		else if (epackage == JsonMMPackage.eINSTANCE)
			switch (semanticObject.eClass().getClassifierID()) {
			case JsonMMPackage.ARRAY_VALUE:
				sequence_ArrayValue(context, (ArrayValue) semanticObject); 
				return; 
			case JsonMMPackage.BOOLEAN_VALUE:
				sequence_BooleanValue(context, (BooleanValue) semanticObject); 
				return; 
			case JsonMMPackage.JSON_DOCUMENT:
				sequence_JsonDocument(context, (JsonDocument) semanticObject); 
				return; 
			case JsonMMPackage.KEY_VALUE_PAIR:
				sequence_KeyValuePair(context, (KeyValuePair) semanticObject); 
				return; 
			case JsonMMPackage.NULL_VALUE:
				sequence_NullValue(context, (NullValue) semanticObject); 
				return; 
			case JsonMMPackage.NUMBER_VALUE:
				sequence_NumberValue(context, (NumberValue) semanticObject); 
				return; 
			case JsonMMPackage.OBJECT_VALUE:
				sequence_ObjectValue(context, (ObjectValue) semanticObject); 
				return; 
			case JsonMMPackage.STRING_VALUE:
				sequence_StringValue(context, (StringValue) semanticObject); 
				return; 
			}
		if (errorAcceptor != null)
			errorAcceptor.accept(diagnosticProvider.createInvalidContextOrTypeDiagnostic(semanticObject, context));
	}
	
	/**
	 * Contexts:
	 *     Value returns ArrayValue
	 *     ArrayValue returns ArrayValue
	 *
	 * Constraint:
	 *     (value+=Value value+=Value*)?
	 */
	protected void sequence_ArrayValue(ISerializationContext context, ArrayValue semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Value returns BooleanValue
	 *     BooleanValue returns BooleanValue
	 *
	 * Constraint:
	 *     value=EBoolean
	 */
	protected void sequence_BooleanValue(ISerializationContext context, BooleanValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.BOOLEAN_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.BOOLEAN_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getBooleanValueAccess().getValueEBooleanParserRuleCall_0(), semanticObject.isValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1PropertiesAbstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties
	 *
	 * Constraint:
	 *     (key=EString additionalProperties=JsonDocument)
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties_Key()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties_Key()));
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties_AdditionalProperties()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalProperties_AdditionalProperties()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalPropertiesAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AdditionalPropertiesAccess().getAdditionalPropertiesJsonDocumentParserRuleCall_2_0(), semanticObject.getAdditionalProperties());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items
	 *
	 * Constraint:
	 *     items=JsonDocument
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items_Items()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items_Items()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1ItemsAccess().getItemsJsonDocumentParserRuleCall_0(), semanticObject.getItems());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray
	 *
	 * Constraint:
	 *     (
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items 
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Items*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeArray semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean
	 *
	 * Constraint:
	 *     patternProperties0=EBooleanObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBoolean_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeBooleanAccess().getPatternProperties0EBooleanObjectParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger
	 *
	 * Constraint:
	 *     patternProperties0=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeInteger_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeIntegerAccess().getPatternProperties0EDoubleObjectParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull
	 *
	 * Constraint:
	 *     patternProperties0=NullValue
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNull_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNullAccess().getPatternProperties0NullValueParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber
	 *
	 * Constraint:
	 *     patternProperties0=EDoubleObject
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumber_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeNumberAccess().getPatternProperties0EDoubleObjectParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject
	 *
	 * Constraint:
	 *     (
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1PropertiesAbstract 
	 *         patternProperties0+=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1PropertiesAbstract*
	 *     )?
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeObject semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString
	 *
	 * Constraint:
	 *     patternProperties0=EString
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeString_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1TypeStringAccess().getPatternProperties0EStringParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1 returns GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1
	 *
	 * Constraint:
	 *     patternProperties0=GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Abstract
	 */
	protected void sequence_GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1(ISerializationContext context, GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1 semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1_PatternProperties0()) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, GithubwfPackage.eINSTANCE.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1_PatternProperties0()));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getGithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1Access().getPatternProperties0GithubwfRootOnOneOf2Workflow_dispatchInputsPatternProperties0AllOf1AbstractParserRuleCall_0(), semanticObject.getPatternProperties0());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     JsonDocument returns JsonDocument
	 *
	 * Constraint:
	 *     value=Value
	 */
	protected void sequence_JsonDocument(ISerializationContext context, JsonDocument semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.JSON_DOCUMENT__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.JSON_DOCUMENT__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getJsonDocumentAccess().getValueValueParserRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     KeyValuePair returns KeyValuePair
	 *
	 * Constraint:
	 *     (key=EString value=Value)
	 */
	protected void sequence_KeyValuePair(ISerializationContext context, KeyValuePair semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__KEY) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__KEY));
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.KEY_VALUE_PAIR__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getKeyValuePairAccess().getKeyEStringParserRuleCall_0_0(), semanticObject.getKey());
		feeder.accept(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns NullValue
	 *     NullValue returns NullValue
	 *
	 * Constraint:
	 *     value=NullEnum
	 */
	protected void sequence_NullValue(ISerializationContext context, NullValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.NULL_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.NULL_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getNullValueAccess().getValueNullEnumEnumRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns NumberValue
	 *     NumberValue returns NumberValue
	 *
	 * Constraint:
	 *     value=EDouble
	 */
	protected void sequence_NumberValue(ISerializationContext context, NumberValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.NUMBER_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.NUMBER_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getNumberValueAccess().getValueEDoubleParserRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
	/**
	 * Contexts:
	 *     Value returns ObjectValue
	 *     ObjectValue returns ObjectValue
	 *
	 * Constraint:
	 *     (keyvaluepair+=KeyValuePair keyvaluepair+=KeyValuePair*)?
	 */
	protected void sequence_ObjectValue(ISerializationContext context, ObjectValue semanticObject) {
		genericSequencer.createSequence(context, semanticObject);
	}
	
	
	/**
	 * Contexts:
	 *     Value returns StringValue
	 *     StringValue returns StringValue
	 *
	 * Constraint:
	 *     value=EString
	 */
	protected void sequence_StringValue(ISerializationContext context, StringValue semanticObject) {
		if (errorAcceptor != null) {
			if (transientValues.isValueTransient(semanticObject, JsonMMPackage.Literals.STRING_VALUE__VALUE) == ValueTransient.YES)
				errorAcceptor.accept(diagnosticProvider.createFeatureValueMissing(semanticObject, JsonMMPackage.Literals.STRING_VALUE__VALUE));
		}
		SequenceFeeder feeder = createSequencerFeeder(context, semanticObject);
		feeder.accept(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0(), semanticObject.getValue());
		feeder.finish();
	}
	
	
}
